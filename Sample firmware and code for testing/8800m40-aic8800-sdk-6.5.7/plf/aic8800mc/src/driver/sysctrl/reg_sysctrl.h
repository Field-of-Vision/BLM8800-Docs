#ifndef _REG_SYSCTRL_H_
#define _REG_SYSCTRL_H_

#include "chip.h"

/* ================================================================================ */
/* ================                CPU System Control              ================ */
/* ================================================================================ */
typedef struct {
  __IO uint32_t                          hclk_ctrl_mode;               //0x00000000
  __IO uint32_t                          hclk1_ctrl_mode;              //0x00000004
  __IO uint32_t                          pclk_ctrl_mode;               //0x00000008
  __IO uint32_t                          others_clk_ctrl_mode;         //0x0000000C
  __IO uint32_t                          cfg_mem_rom;                  //0x00000010
  __IO uint32_t                          cfg_mem_1prf;                 //0x00000014
  __IO uint32_t                          cfg_mem_2prf;                 //0x00000018
  __IO uint32_t                          trap_bypass;                  //0x0000001C
  __IO uint32_t                          cache_bypass;                 //0x00000020
  __IO uint32_t                          pclk_div;                     //0x00000024
  __IO uint32_t                          codec_mclk_div;               //0x00000028
  __IO uint32_t                          bclk_sel;                     //0x0000002C
  __IO uint32_t                          cpu_sys_tports_sel;           //0x00000030
  __IO uint32_t                          phy_dump_sel;                 //0x00000034
  __IO uint32_t                          clk_msadc_div;                //0x00000038
  __IO uint32_t                          cfg_cpu_stclk_div;            //0x0000003C
  __IO uint32_t                          cfg_misc;                     //0x00000040
  __IO uint32_t                          cfg_cpu_p_rxev;               //0x00000044
  __IO uint32_t                          cfg_cpu_s0_rxev;              //0x00000048
  __IO uint32_t                          cfg_cpu_s1_rxev;              //0x0000004C
  __IO uint32_t                          ro_top_tports;                //0x00000050
  __IO uint32_t                          cfg_cpu_nmi_en;               //0x00000054
  __IO uint32_t Reserved_00000058[42];                //0x00000058
  __IO uint32_t                          hclk_manual_enable;           //0x00000100
  __IO uint32_t                          hclk_manual_disable;          //0x00000104
  __IO uint32_t                          hclk1_manual_enable;          //0x00000108
  __IO uint32_t                          hclk1_manual_disable;         //0x0000010C
  __IO uint32_t                          pclk_manual_enable;           //0x00000110
  __IO uint32_t                          pclk_manual_disable;          //0x00000114
  __IO uint32_t                          others_manual_enable;         //0x00000118
  __IO uint32_t                          others_manual_disable;        //0x0000011C
  __IO uint32_t                          hclk_soft_resetn_set;         //0x00000120
  __IO uint32_t                          hclk_soft_resetn_clr;         //0x00000124
  __IO uint32_t                          hclk1_soft_resetn_set;        //0x00000128
  __IO uint32_t                          hclk1_soft_resetn_clr;        //0x0000012C
  __IO uint32_t                          pclk_soft_resetn_set;         //0x00000130
  __IO uint32_t                          pclk_soft_resetn_clr;         //0x00000134
  __IO uint32_t                          others_soft_resetn_set;       //0x00000138
  __IO uint32_t                          others_soft_resetn_clr;       //0x0000013C
} AIC_CPUSYSCTRL_TypeDef;

static AIC_CPUSYSCTRL_TypeDef * const AIC_CPUSYSCTRL = ((AIC_CPUSYSCTRL_TypeDef *)AIC_CPUSYSCTRL_BASE);

//hclk_ctrl_mode
#define CPU_SYS_CTRL_CFG_HCLK_MODE(n)      (((n)&0xFFFFFFFF)<<0)
#define CPU_SYS_CTRL_CFG_HCLK_MODE_LSB     (0)
#define CPU_SYS_CTRL_CFG_HCLK_MODE_MASK    (0xFFFFFFFF<<0)

//hclk1_ctrl_mode
#define CPU_SYS_CTRL_CFG_HCLK1_MODE(n)      (((n)&0xFFFFFFFF)<<0)
#define CPU_SYS_CTRL_CFG_HCLK1_MODE_LSB     (0)
#define CPU_SYS_CTRL_CFG_HCLK1_MODE_MASK    (0xFFFFFFFF<<0)

//pclk_ctrl_mode
#define CPU_SYS_CTRL_CFG_PCLK_MODE(n)      (((n)&0xFFFFFFFF)<<0)
#define CPU_SYS_CTRL_CFG_PCLK_MODE_LSB     (0)
#define CPU_SYS_CTRL_CFG_PCLK_MODE_MASK    (0xFFFFFFFF<<0)

//others_clk_ctrl_mode
#define CPU_SYS_CTRL_CFG_OTHERS_CLK_MODE(n)      (((n)&0xFFFFFFFF)<<0)
#define CPU_SYS_CTRL_CFG_OTHERS_CLK_MODE_LSB     (0)
#define CPU_SYS_CTRL_CFG_OTHERS_CLK_MODE_MASK    (0xFFFFFFFF<<0)

//cfg_mem_rom
#define CPU_SYS_CTRL_CFG_MEM_ROM(n)      (((n)&0xFFFF)<<0)
#define CPU_SYS_CTRL_CFG_MEM_ROM_LSB     (0)
#define CPU_SYS_CTRL_CFG_MEM_ROM_MASK    (0xFFFF<<0)

//cfg_mem_1prf
#define CPU_SYS_CTRL_CFG_MEM_1PRF(n)      (((n)&0xFFFF)<<0)
#define CPU_SYS_CTRL_CFG_MEM_1PRF_LSB     (0)
#define CPU_SYS_CTRL_CFG_MEM_1PRF_MASK    (0xFFFF<<0)

//cfg_mem_2prf
#define CPU_SYS_CTRL_CFG_MEM_2PRF(n)      (((n)&0xFFFF)<<0)
#define CPU_SYS_CTRL_CFG_MEM_2PRF_LSB     (0)
#define CPU_SYS_CTRL_CFG_MEM_2PRF_MASK    (0xFFFF<<0)

//trap_bypass
#define CPU_SYS_CTRL_CFG_TRAP_BYPASS      (1<<0)
#define CPU_SYS_CTRL_CFG_TRAP_BYPASS_POS  (0)

//cache_bypass
#define CPU_SYS_CTRL_CFG_CACHE_BYPASS      (1<<0)
#define CPU_SYS_CTRL_CFG_CACHE_BYPASS_POS  (0)
#define CPU_SYS_CTRL_CFG_BURST_INCR_ONLY_EN      (1<<1)
#define CPU_SYS_CTRL_CFG_BURST_INCR_ONLY_EN_POS  (1)

//pclk_div
#define CPU_SYS_CTRL_CFG_PCLK_DIV_DENOM(n)      (((n)&0xFF)<<0)
#define CPU_SYS_CTRL_CFG_PCLK_DIV_DENOM_LSB     (0)
#define CPU_SYS_CTRL_CFG_PCLK_DIV_DENOM_MASK    (0xFF<<0)
#define CPU_SYS_CTRL_CFG_PCLK_DIV_UPDATE      (1<<8)
#define CPU_SYS_CTRL_CFG_PCLK_DIV_UPDATE_POS  (8)

//codec_mclk_div
#define CPU_SYS_CTRL_CFG_MCLK_DIV_DENOM(n)      (((n)&0x3F)<<0)
#define CPU_SYS_CTRL_CFG_MCLK_DIV_DENOM_LSB     (0)
#define CPU_SYS_CTRL_CFG_MCLK_DIV_DENOM_MASK    (0x3F<<0)
#define CPU_SYS_CTRL_CFG_MCLK_DIV_UPDATE      (1<<8)
#define CPU_SYS_CTRL_CFG_MCLK_DIV_UPDATE_POS  (8)

//bclk_sel
#define CPU_SYS_CTRL_CFG_BCK_0_SEL      (1<<0)
#define CPU_SYS_CTRL_CFG_BCK_0_SEL_POS  (0)
#define CPU_SYS_CTRL_CFG_BCK_0_INV      (1<<1)
#define CPU_SYS_CTRL_CFG_BCK_0_INV_POS  (1)
#define CPU_SYS_CTRL_CFG_BCK_1_SEL      (1<<2)
#define CPU_SYS_CTRL_CFG_BCK_1_SEL_POS  (2)
#define CPU_SYS_CTRL_CFG_BCK_1_INV      (1<<3)
#define CPU_SYS_CTRL_CFG_BCK_1_INV_POS  (3)

//cpu_sys_tports_sel
#define CPU_SYS_CTRL_CFG_CPU_SYS_TPORTS_SEL(n)      (((n)&0xFF)<<0)
#define CPU_SYS_CTRL_CFG_CPU_SYS_TPORTS_SEL_LSB     (0)
#define CPU_SYS_CTRL_CFG_CPU_SYS_TPORTS_SEL_MASK    (0xFF<<0)
#define CPU_SYS_CTRL_CFG_DBG_CLK_SEL(n)      (((n)&0xFF)<<8)
#define CPU_SYS_CTRL_CFG_DBG_CLK_SEL_LSB     (8)
#define CPU_SYS_CTRL_CFG_DBG_CLK_SEL_MASK    (0xFF<<8)

//phy_dump_sel
#define CPU_SYS_CTRL_CFG_PHY_DUMP_SEL      (1<<0)
#define CPU_SYS_CTRL_CFG_PHY_DUMP_SEL_POS  (0)

//clk_msadc_div
#define CPU_SYS_CTRL_CFG_CLK_MSADC_DIV_DENOM(n)      (((n)&0xFF)<<0)
#define CPU_SYS_CTRL_CFG_CLK_MSADC_DIV_DENOM_LSB     (0)
#define CPU_SYS_CTRL_CFG_CLK_MSADC_DIV_DENOM_MASK    (0xFF<<0)
#define CPU_SYS_CTRL_CFG_CLK_MSADC_DIV_UPDATE      (1<<8)
#define CPU_SYS_CTRL_CFG_CLK_MSADC_DIV_UPDATE_POS  (8)
#define CPU_SYS_CTRL_CFG_CLK_MSADC_AND_INV      (1<<9)
#define CPU_SYS_CTRL_CFG_CLK_MSADC_AND_INV_POS  (9)

//cfg_cpu_stclk_div
#define CPU_SYS_CTRL_CFG_CPU_STCLK_DIV(n)      (((n)&0xFF)<<0)
#define CPU_SYS_CTRL_CFG_CPU_STCLK_DIV_LSB     (0)
#define CPU_SYS_CTRL_CFG_CPU_STCLK_DIV_MASK    (0xFF<<0)

//cfg_misc
#define CPU_SYS_CTRL_CFG_USB_GPIO_MODE      (1<<0)
#define CPU_SYS_CTRL_CFG_USB_GPIO_MODE_POS  (0)
#define CPU_SYS_CTRL_CFG_USB_GPIO_PULLUP(n)      (((n)&3)<<1)
#define CPU_SYS_CTRL_CFG_USB_GPIO_PULLUP_LSB     (1)
#define CPU_SYS_CTRL_CFG_USB_GPIO_PULLUP_MASK    (3<<1)
#define CPU_SYS_CTRL_CFG_USB_GPIO_PULLDOWN(n)      (((n)&3)<<3)
#define CPU_SYS_CTRL_CFG_USB_GPIO_PULLDOWN_LSB     (3)
#define CPU_SYS_CTRL_CFG_USB_GPIO_PULLDOWN_MASK    (3<<3)

//cfg_cpu_p_rxev
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_DMA_EN      (1<<0)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_DMA_EN_POS  (0)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_USB_DMA_EN      (1<<1)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_USB_DMA_EN_POS  (1)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_UART0_EN      (1<<2)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_UART0_EN_POS  (2)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_UART1_EN      (1<<3)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_UART1_EN_POS  (3)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_UART2_EN      (1<<4)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_UART2_EN_POS  (4)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_GPIOA_EN      (1<<5)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_GPIOA_EN_POS  (5)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_TRNG_EN      (1<<6)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_TRNG_EN_POS  (6)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_PWRCTRL_EN      (1<<7)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_PWRCTRL_EN_POS  (7)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_PMU_RTC0_EN      (1<<8)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_PMU_RTC0_EN_POS  (8)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_PMU_RTC1_EN      (1<<9)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_PMU_RTC1_EN_POS  (9)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_AON_PWM_EN      (1<<10)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_AON_PWM_EN_POS  (10)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_PWM_EN      (1<<11)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_PWM_EN_POS  (11)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_SPI_EN      (1<<12)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_SPI_EN_POS  (12)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_I2CM_EN      (1<<13)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_I2CM_EN_POS  (13)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_SDMMC_EN      (1<<14)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_SDMMC_EN_POS  (14)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_PSI_MST_EN      (1<<15)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_PSI_MST_EN_POS  (15)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_USB_READY_EN      (1<<16)
#define CPU_SYS_CTRL_CFG_CPU_P_RXEV_USB_READY_EN_POS  (16)

//cfg_cpu_s0_rxev
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_DMA_EN      (1<<0)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_DMA_EN_POS  (0)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_USB_DMA_EN      (1<<1)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_USB_DMA_EN_POS  (1)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_UART0_EN      (1<<2)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_UART0_EN_POS  (2)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_UART1_EN      (1<<3)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_UART1_EN_POS  (3)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_UART2_EN      (1<<4)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_UART2_EN_POS  (4)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_GPIOA_EN      (1<<5)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_GPIOA_EN_POS  (5)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_TRNG_EN      (1<<6)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_TRNG_EN_POS  (6)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_PWRCTRL_EN      (1<<7)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_PWRCTRL_EN_POS  (7)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_PMU_RTC0_EN      (1<<8)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_PMU_RTC0_EN_POS  (8)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_PMU_RTC1_EN      (1<<9)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_PMU_RTC1_EN_POS  (9)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_AON_PWM_EN      (1<<10)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_AON_PWM_EN_POS  (10)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_PWM_EN      (1<<11)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_PWM_EN_POS  (11)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_SPI_EN      (1<<12)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_SPI_EN_POS  (12)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_I2CM_EN      (1<<13)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_I2CM_EN_POS  (13)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_SDMMC_EN      (1<<14)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_SDMMC_EN_POS  (14)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_PSI_MST_EN      (1<<15)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_PSI_MST_EN_POS  (15)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_USB_READY_EN      (1<<16)
#define CPU_SYS_CTRL_CFG_CPU_S0_RXEV_USB_READY_EN_POS  (16)

//cfg_cpu_s1_rxev
#define CPU_SYS_CTRL_CFG_CPU_S1_RXEV_DMA_EN      (1<<0)
#define CPU_SYS_CTRL_CFG_CPU_S1_RXEV_DMA_EN_POS  (0)
#define CPU_SYS_CTRL_CFG_CPU_S1_RXEV_USB_DMA_EN      (1<<1)
#define CPU_SYS_CTRL_CFG_CPU_S1_RXEV_USB_DMA_EN_POS  (1)
#define CPU_SYS_CTRL_CFG_CPU_S1_RXEV_UART0_EN      (1<<2)
#define CPU_SYS_CTRL_CFG_CPU_S1_RXEV_UART0_EN_POS  (2)
#define CPU_SYS_CTRL_CFG_CPU_S1_RXEV_UART1_EN      (1<<3)
#define CPU_SYS_CTRL_CFG_CPU_S1_RXEV_UART1_EN_POS  (3)
#define CPU_SYS_CTRL_CFG_CPU_S1_RXEV_UART2_EN      (1<<4)
#define CPU_SYS_CTRL_CFG_CPU_S1_RXEV_UART2_EN_POS  (4)
#define CPU_SYS_CTRL_CFG_CPU_S1_RXEV_GPIOA_EN      (1<<5)
#define CPU_SYS_CTRL_CFG_CPU_S1_RXEV_GPIOA_EN_POS  (5)
#define CPU_SYS_CTRL_CFG_CPU_S1_RXEV_TRNG_EN      (1<<6)
#define CPU_SYS_CTRL_CFG_CPU_S1_RXEV_TRNG_EN_POS  (6)
#define CPU_SYS_CTRL_CFG_CPU_S1_RXEV_PWRCTRL_EN      (1<<7)
#define CPU_SYS_CTRL_CFG_CPU_S1_RXEV_PWRCTRL_EN_POS  (7)
#define CPU_SYS_CTRL_CFG_CPU_S1_RXEV_PMU_RTC0_EN      (1<<8)
#define CPU_SYS_CTRL_CFG_CPU_S1_RXEV_PMU_RTC0_EN_POS  (8)
#define CPU_SYS_CTRL_CFG_CPU_S1_RXEV_PMU_RTC1_EN      (1<<9)
#define CPU_SYS_CTRL_CFG_CPU_S1_RXEV_PMU_RTC1_EN_POS  (9)

//ro_top_tports
#define CPU_SYS_CTRL_RO_TOP_TPORTS(n)      (((n)&0xFFFF)<<0)
#define CPU_SYS_CTRL_RO_TOP_TPORTS_LSB     (0)
#define CPU_SYS_CTRL_RO_TOP_TPORTS_MASK    (0xFFFF<<0)

//cfg_cpu_nmi_en
#define CPU_SYS_CTRL_CFG_CPU_P_NMI_EN      (1<<0)
#define CPU_SYS_CTRL_CFG_CPU_P_NMI_EN_POS  (0)

//hclk_manual_enable
#define CPU_SYS_CTRL_HCLK_CPU_P_MANUAL_ENABLE      (1<<0)
#define CPU_SYS_CTRL_HCLK_CPU_P_MANUAL_ENABLE_POS  (0)
#define CPU_SYS_CTRL_HCLK_CPU_P_GATED_MANUAL_ENABLE      (1<<1)
#define CPU_SYS_CTRL_HCLK_CPU_P_GATED_MANUAL_ENABLE_POS  (1)
#define CPU_SYS_CTRL_HCLK_CPU_S0_MANUAL_ENABLE      (1<<2)
#define CPU_SYS_CTRL_HCLK_CPU_S0_MANUAL_ENABLE_POS  (2)
#define CPU_SYS_CTRL_HCLK_CPU_S0_GATED_MANUAL_ENABLE      (1<<3)
#define CPU_SYS_CTRL_HCLK_CPU_S0_GATED_MANUAL_ENABLE_POS  (3)
#define CPU_SYS_CTRL_HCLK_ROM_MANUAL_ENABLE      (1<<4)
#define CPU_SYS_CTRL_HCLK_ROM_MANUAL_ENABLE_POS  (4)
#define CPU_SYS_CTRL_HCLK_BTROM_MANUAL_ENABLE      (1<<5)
#define CPU_SYS_CTRL_HCLK_BTROM_MANUAL_ENABLE_POS  (5)
#define CPU_SYS_CTRL_HCLK_RAM0_MANUAL_ENABLE      (1<<6)
#define CPU_SYS_CTRL_HCLK_RAM0_MANUAL_ENABLE_POS  (6)
#define CPU_SYS_CTRL_HCLK_RAM1_MANUAL_ENABLE      (1<<7)
#define CPU_SYS_CTRL_HCLK_RAM1_MANUAL_ENABLE_POS  (7)
#define CPU_SYS_CTRL_HCLK_RAM2_MANUAL_ENABLE      (1<<8)
#define CPU_SYS_CTRL_HCLK_RAM2_MANUAL_ENABLE_POS  (8)
#define CPU_SYS_CTRL_HCLK_RAM3_MANUAL_ENABLE      (1<<9)
#define CPU_SYS_CTRL_HCLK_RAM3_MANUAL_ENABLE_POS  (9)
#define CPU_SYS_CTRL_HCLK_RAM4_MANUAL_ENABLE      (1<<10)
#define CPU_SYS_CTRL_HCLK_RAM4_MANUAL_ENABLE_POS  (10)
#define CPU_SYS_CTRL_HCLK_RAM5_MANUAL_ENABLE      (1<<11)
#define CPU_SYS_CTRL_HCLK_RAM5_MANUAL_ENABLE_POS  (11)
#define CPU_SYS_CTRL_HCLK_SYS_MATRIX_MANUAL_ENABLE      (1<<12)
#define CPU_SYS_CTRL_HCLK_SYS_MATRIX_MANUAL_ENABLE_POS  (12)
#define CPU_SYS_CTRL_HCLK_AHB0_MANUAL_ENABLE      (1<<13)
#define CPU_SYS_CTRL_HCLK_AHB0_MANUAL_ENABLE_POS  (13)
#define CPU_SYS_CTRL_HCLK_APB0_MANUAL_ENABLE      (1<<14)
#define CPU_SYS_CTRL_HCLK_APB0_MANUAL_ENABLE_POS  (14)
#define CPU_SYS_CTRL_HCLK_EXMEM_BUS_MANUAL_ENABLE      (1<<15)
#define CPU_SYS_CTRL_HCLK_EXMEM_BUS_MANUAL_ENABLE_POS  (15)
#define CPU_SYS_CTRL_HCLK_CACHE_MANUAL_ENABLE      (1<<16)
#define CPU_SYS_CTRL_HCLK_CACHE_MANUAL_ENABLE_POS  (16)
#define CPU_SYS_CTRL_HCLK_DMA_MANUAL_ENABLE      (1<<17)
#define CPU_SYS_CTRL_HCLK_DMA_MANUAL_ENABLE_POS  (17)
#define CPU_SYS_CTRL_HCLK_FLASH_MANUAL_ENABLE      (1<<18)
#define CPU_SYS_CTRL_HCLK_FLASH_MANUAL_ENABLE_POS  (18)
#define CPU_SYS_CTRL_HCLK_TRAP_P_MANUAL_ENABLE      (1<<19)
#define CPU_SYS_CTRL_HCLK_TRAP_P_MANUAL_ENABLE_POS  (19)
#define CPU_SYS_CTRL_HCLK_TRAP_S0_MANUAL_ENABLE      (1<<20)
#define CPU_SYS_CTRL_HCLK_TRAP_S0_MANUAL_ENABLE_POS  (20)
#define CPU_SYS_CTRL_HCLK_UART0_MANUAL_ENABLE      (1<<21)
#define CPU_SYS_CTRL_HCLK_UART0_MANUAL_ENABLE_POS  (21)
#define CPU_SYS_CTRL_HCLK_UART1_MANUAL_ENABLE      (1<<22)
#define CPU_SYS_CTRL_HCLK_UART1_MANUAL_ENABLE_POS  (22)
#define CPU_SYS_CTRL_HCLK_UART2_MANUAL_ENABLE      (1<<23)
#define CPU_SYS_CTRL_HCLK_UART2_MANUAL_ENABLE_POS  (23)
#define CPU_SYS_CTRL_HCLK_USBC_MANUAL_ENABLE      (1<<24)
#define CPU_SYS_CTRL_HCLK_USBC_MANUAL_ENABLE_POS  (24)
#define CPU_SYS_CTRL_HCLK_AUD_PROC_MANUAL_ENABLE      (1<<25)
#define CPU_SYS_CTRL_HCLK_AUD_PROC_MANUAL_ENABLE_POS  (25)
#define CPU_SYS_CTRL_HCLK_MAILBOX_MANUAL_ENABLE      (1<<26)
#define CPU_SYS_CTRL_HCLK_MAILBOX_MANUAL_ENABLE_POS  (26)
#define CPU_SYS_CTRL_HCLK_SDIO_MANUAL_ENABLE      (1<<27)
#define CPU_SYS_CTRL_HCLK_SDIO_MANUAL_ENABLE_POS  (27)
#define CPU_SYS_CTRL_HCLK_MM_MANUAL_ENABLE      (1<<28)
#define CPU_SYS_CTRL_HCLK_MM_MANUAL_ENABLE_POS  (28)
#define CPU_SYS_CTRL_HCLK_CPU_S1_MANUAL_ENABLE      (1<<29)
#define CPU_SYS_CTRL_HCLK_CPU_S1_MANUAL_ENABLE_POS  (29)
#define CPU_SYS_CTRL_HCLK_CPU_S1_GATED_MANUAL_ENABLE      (1<<30)
#define CPU_SYS_CTRL_HCLK_CPU_S1_GATED_MANUAL_ENABLE_POS  (30)
#define CPU_SYS_CTRL_HCLK_TRAP_S1_MANUAL_ENABLE      (1<<31)
#define CPU_SYS_CTRL_HCLK_TRAP_S1_MANUAL_ENABLE_POS  (31)

//hclk_manual_disable
#define CPU_SYS_CTRL_HCLK_CPU_P_MANUAL_DISABLE      (1<<0)
#define CPU_SYS_CTRL_HCLK_CPU_P_MANUAL_DISABLE_POS  (0)
#define CPU_SYS_CTRL_HCLK_CPU_P_GATED_MANUAL_DISABLE      (1<<1)
#define CPU_SYS_CTRL_HCLK_CPU_P_GATED_MANUAL_DISABLE_POS  (1)
#define CPU_SYS_CTRL_HCLK_CPU_S0_MANUAL_DISABLE      (1<<2)
#define CPU_SYS_CTRL_HCLK_CPU_S0_MANUAL_DISABLE_POS  (2)
#define CPU_SYS_CTRL_HCLK_CPU_S0_GATED_MANUAL_DISABLE      (1<<3)
#define CPU_SYS_CTRL_HCLK_CPU_S0_GATED_MANUAL_DISABLE_POS  (3)
#define CPU_SYS_CTRL_HCLK_ROM_MANUAL_DISABLE      (1<<4)
#define CPU_SYS_CTRL_HCLK_ROM_MANUAL_DISABLE_POS  (4)
#define CPU_SYS_CTRL_HCLK_BTROM_MANUAL_DISABLE      (1<<5)
#define CPU_SYS_CTRL_HCLK_BTROM_MANUAL_DISABLE_POS  (5)
#define CPU_SYS_CTRL_HCLK_RAM0_MANUAL_DISABLE      (1<<6)
#define CPU_SYS_CTRL_HCLK_RAM0_MANUAL_DISABLE_POS  (6)
#define CPU_SYS_CTRL_HCLK_RAM1_MANUAL_DISABLE      (1<<7)
#define CPU_SYS_CTRL_HCLK_RAM1_MANUAL_DISABLE_POS  (7)
#define CPU_SYS_CTRL_HCLK_RAM2_MANUAL_DISABLE      (1<<8)
#define CPU_SYS_CTRL_HCLK_RAM2_MANUAL_DISABLE_POS  (8)
#define CPU_SYS_CTRL_HCLK_RAM3_MANUAL_DISABLE      (1<<9)
#define CPU_SYS_CTRL_HCLK_RAM3_MANUAL_DISABLE_POS  (9)
#define CPU_SYS_CTRL_HCLK_RAM4_MANUAL_DISABLE      (1<<10)
#define CPU_SYS_CTRL_HCLK_RAM4_MANUAL_DISABLE_POS  (10)
#define CPU_SYS_CTRL_HCLK_RAM5_MANUAL_DISABLE      (1<<11)
#define CPU_SYS_CTRL_HCLK_RAM5_MANUAL_DISABLE_POS  (11)
#define CPU_SYS_CTRL_HCLK_SYS_MATRIX_MANUAL_DISABLE      (1<<12)
#define CPU_SYS_CTRL_HCLK_SYS_MATRIX_MANUAL_DISABLE_POS  (12)
#define CPU_SYS_CTRL_HCLK_AHB0_MANUAL_DISABLE      (1<<13)
#define CPU_SYS_CTRL_HCLK_AHB0_MANUAL_DISABLE_POS  (13)
#define CPU_SYS_CTRL_HCLK_APB0_MANUAL_DISABLE      (1<<14)
#define CPU_SYS_CTRL_HCLK_APB0_MANUAL_DISABLE_POS  (14)
#define CPU_SYS_CTRL_HCLK_EXMEM_BUS_MANUAL_DISABLE      (1<<15)
#define CPU_SYS_CTRL_HCLK_EXMEM_BUS_MANUAL_DISABLE_POS  (15)
#define CPU_SYS_CTRL_HCLK_CACHE_MANUAL_DISABLE      (1<<16)
#define CPU_SYS_CTRL_HCLK_CACHE_MANUAL_DISABLE_POS  (16)
#define CPU_SYS_CTRL_HCLK_DMA_MANUAL_DISABLE      (1<<17)
#define CPU_SYS_CTRL_HCLK_DMA_MANUAL_DISABLE_POS  (17)
#define CPU_SYS_CTRL_HCLK_FLASH_MANUAL_DISABLE      (1<<18)
#define CPU_SYS_CTRL_HCLK_FLASH_MANUAL_DISABLE_POS  (18)
#define CPU_SYS_CTRL_HCLK_TRAP_P_MANUAL_DISABLE      (1<<19)
#define CPU_SYS_CTRL_HCLK_TRAP_P_MANUAL_DISABLE_POS  (19)
#define CPU_SYS_CTRL_HCLK_TRAP_S0_MANUAL_DISABLE      (1<<20)
#define CPU_SYS_CTRL_HCLK_TRAP_S0_MANUAL_DISABLE_POS  (20)
#define CPU_SYS_CTRL_HCLK_UART0_MANUAL_DISABLE      (1<<21)
#define CPU_SYS_CTRL_HCLK_UART0_MANUAL_DISABLE_POS  (21)
#define CPU_SYS_CTRL_HCLK_UART1_MANUAL_DISABLE      (1<<22)
#define CPU_SYS_CTRL_HCLK_UART1_MANUAL_DISABLE_POS  (22)
#define CPU_SYS_CTRL_HCLK_UART2_MANUAL_DISABLE      (1<<23)
#define CPU_SYS_CTRL_HCLK_UART2_MANUAL_DISABLE_POS  (23)
#define CPU_SYS_CTRL_HCLK_USBC_MANUAL_DISABLE      (1<<24)
#define CPU_SYS_CTRL_HCLK_USBC_MANUAL_DISABLE_POS  (24)
#define CPU_SYS_CTRL_HCLK_AUD_PROC_MANUAL_DISABLE      (1<<25)
#define CPU_SYS_CTRL_HCLK_AUD_PROC_MANUAL_DISABLE_POS  (25)
#define CPU_SYS_CTRL_HCLK_MAILBOX_MANUAL_DISABLE      (1<<26)
#define CPU_SYS_CTRL_HCLK_MAILBOX_MANUAL_DISABLE_POS  (26)
#define CPU_SYS_CTRL_HCLK_SDIO_MANUAL_DISABLE      (1<<27)
#define CPU_SYS_CTRL_HCLK_SDIO_MANUAL_DISABLE_POS  (27)
#define CPU_SYS_CTRL_HCLK_MM_MANUAL_DISABLE      (1<<28)
#define CPU_SYS_CTRL_HCLK_MM_MANUAL_DISABLE_POS  (28)
#define CPU_SYS_CTRL_HCLK_CPU_S1_MANUAL_DISABLE      (1<<29)
#define CPU_SYS_CTRL_HCLK_CPU_S1_MANUAL_DISABLE_POS  (29)
#define CPU_SYS_CTRL_HCLK_CPU_S1_GATED_MANUAL_DISABLE      (1<<30)
#define CPU_SYS_CTRL_HCLK_CPU_S1_GATED_MANUAL_DISABLE_POS  (30)
#define CPU_SYS_CTRL_HCLK_TRAP_S1_MANUAL_DISABLE      (1<<31)
#define CPU_SYS_CTRL_HCLK_TRAP_S1_MANUAL_DISABLE_POS  (31)

//hclk1_manual_enable
#define CPU_SYS_CTRL_HCLK_SDMMC_ALWAYS_MANUAL_ENABLE      (1<<0)
#define CPU_SYS_CTRL_HCLK_SDMMC_ALWAYS_MANUAL_ENABLE_POS  (0)
#define CPU_SYS_CTRL_HCLK_SDMMC_MANUAL_ENABLE      (1<<1)
#define CPU_SYS_CTRL_HCLK_SDMMC_MANUAL_ENABLE_POS  (1)
#define CPU_SYS_CTRL_HCLK_SRAM4_LOW_MANUAL_ENABLE      (1<<2)
#define CPU_SYS_CTRL_HCLK_SRAM4_LOW_MANUAL_ENABLE_POS  (2)
#define CPU_SYS_CTRL_HCLK_SRAM4_HIGH_MANUAL_ENABLE      (1<<3)
#define CPU_SYS_CTRL_HCLK_SRAM4_HIGH_MANUAL_ENABLE_POS  (3)
#define CPU_SYS_CTRL_HCLK_SRAM5_LOW_MANUAL_ENABLE      (1<<4)
#define CPU_SYS_CTRL_HCLK_SRAM5_LOW_MANUAL_ENABLE_POS  (4)
#define CPU_SYS_CTRL_HCLK_SRAM5_HIGH_MANUAL_ENABLE      (1<<5)
#define CPU_SYS_CTRL_HCLK_SRAM5_HIGH_MANUAL_ENABLE_POS  (5)

//hclk1_manual_disable
#define CPU_SYS_CTRL_HCLK_SDMMC_ALWAYS_MANUAL_DISABLE      (1<<0)
#define CPU_SYS_CTRL_HCLK_SDMMC_ALWAYS_MANUAL_DISABLE_POS  (0)
#define CPU_SYS_CTRL_HCLK_SDMMC_MANUAL_DISABLE      (1<<1)
#define CPU_SYS_CTRL_HCLK_SDMMC_MANUAL_DISABLE_POS  (1)
#define CPU_SYS_CTRL_HCLK_SRAM4_LOW_MANUAL_DISABLE      (1<<2)
#define CPU_SYS_CTRL_HCLK_SRAM4_LOW_MANUAL_DISABLE_POS  (2)
#define CPU_SYS_CTRL_HCLK_SRAM4_HIGH_MANUAL_DISABLE      (1<<3)
#define CPU_SYS_CTRL_HCLK_SRAM4_HIGH_MANUAL_DISABLE_POS  (3)
#define CPU_SYS_CTRL_HCLK_SRAM5_LOW_MANUAL_DISABLE      (1<<4)
#define CPU_SYS_CTRL_HCLK_SRAM5_LOW_MANUAL_DISABLE_POS  (4)
#define CPU_SYS_CTRL_HCLK_SRAM5_HIGH_MANUAL_DISABLE      (1<<5)
#define CPU_SYS_CTRL_HCLK_SRAM5_HIGH_MANUAL_DISABLE_POS  (5)

//pclk_manual_enable
#define CPU_SYS_CTRL_PCLK_CPU_SYSCTRL_MANUAL_ENABLE      (1<<0)
#define CPU_SYS_CTRL_PCLK_CPU_SYSCTRL_MANUAL_ENABLE_POS  (0)
#define CPU_SYS_CTRL_PCLK_WDG0_MANUAL_ENABLE      (1<<1)
#define CPU_SYS_CTRL_PCLK_WDG0_MANUAL_ENABLE_POS  (1)
#define CPU_SYS_CTRL_PCLK_WDG1_MANUAL_ENABLE      (1<<2)
#define CPU_SYS_CTRL_PCLK_WDG1_MANUAL_ENABLE_POS  (2)
#define CPU_SYS_CTRL_PCLK_TIMER0_MANUAL_ENABLE      (1<<3)
#define CPU_SYS_CTRL_PCLK_TIMER0_MANUAL_ENABLE_POS  (3)
#define CPU_SYS_CTRL_PCLK_TIMER1_MANUAL_ENABLE      (1<<4)
#define CPU_SYS_CTRL_PCLK_TIMER1_MANUAL_ENABLE_POS  (4)
#define CPU_SYS_CTRL_PCLK_PWM_MANUAL_ENABLE      (1<<5)
#define CPU_SYS_CTRL_PCLK_PWM_MANUAL_ENABLE_POS  (5)
#define CPU_SYS_CTRL_PCLK_I2CM_MANUAL_ENABLE      (1<<6)
#define CPU_SYS_CTRL_PCLK_I2CM_MANUAL_ENABLE_POS  (6)
#define CPU_SYS_CTRL_PCLK_MOD_I2CM_MANUAL_ENABLE      (1<<7)
#define CPU_SYS_CTRL_PCLK_MOD_I2CM_MANUAL_ENABLE_POS  (7)
#define CPU_SYS_CTRL_PCLK_SPI_MANUAL_ENABLE      (1<<8)
#define CPU_SYS_CTRL_PCLK_SPI_MANUAL_ENABLE_POS  (8)
#define CPU_SYS_CTRL_PCLK_TRNG_MANUAL_ENABLE      (1<<9)
#define CPU_SYS_CTRL_PCLK_TRNG_MANUAL_ENABLE_POS  (9)
#define CPU_SYS_CTRL_PCLK_PROCESS_MON_MANUAL_ENABLE      (1<<10)
#define CPU_SYS_CTRL_PCLK_PROCESS_MON_MANUAL_ENABLE_POS  (10)
#define CPU_SYS_CTRL_PCLK_ANALOG_REG0_MANUAL_ENABLE      (1<<11)
#define CPU_SYS_CTRL_PCLK_ANALOG_REG0_MANUAL_ENABLE_POS  (11)
#define CPU_SYS_CTRL_PCLK_GPIOA_MANUAL_ENABLE      (1<<12)
#define CPU_SYS_CTRL_PCLK_GPIOA_MANUAL_ENABLE_POS  (12)
#define CPU_SYS_CTRL_PCLK_MSADC_MANUAL_ENABLE      (1<<13)
#define CPU_SYS_CTRL_PCLK_MSADC_MANUAL_ENABLE_POS  (13)
#define CPU_SYS_CTRL_PCLK_EFUSE_MANUAL_ENABLE      (1<<14)
#define CPU_SYS_CTRL_PCLK_EFUSE_MANUAL_ENABLE_POS  (14)

//pclk_manual_disable
#define CPU_SYS_CTRL_PCLK_CPU_SYSCTRL_MANUAL_DISABLE      (1<<0)
#define CPU_SYS_CTRL_PCLK_CPU_SYSCTRL_MANUAL_DISABLE_POS  (0)
#define CPU_SYS_CTRL_PCLK_WDG0_MANUAL_DISABLE      (1<<1)
#define CPU_SYS_CTRL_PCLK_WDG0_MANUAL_DISABLE_POS  (1)
#define CPU_SYS_CTRL_PCLK_WDG1_MANUAL_DISABLE      (1<<2)
#define CPU_SYS_CTRL_PCLK_WDG1_MANUAL_DISABLE_POS  (2)
#define CPU_SYS_CTRL_PCLK_TIMER0_MANUAL_DISABLE      (1<<3)
#define CPU_SYS_CTRL_PCLK_TIMER0_MANUAL_DISABLE_POS  (3)
#define CPU_SYS_CTRL_PCLK_TIMER1_MANUAL_DISABLE      (1<<4)
#define CPU_SYS_CTRL_PCLK_TIMER1_MANUAL_DISABLE_POS  (4)
#define CPU_SYS_CTRL_PCLK_PWM_MANUAL_DISABLE      (1<<5)
#define CPU_SYS_CTRL_PCLK_PWM_MANUAL_DISABLE_POS  (5)
#define CPU_SYS_CTRL_PCLK_I2CM_MANUAL_DISABLE      (1<<6)
#define CPU_SYS_CTRL_PCLK_I2CM_MANUAL_DISABLE_POS  (6)
#define CPU_SYS_CTRL_PCLK_MOD_I2CM_MANUAL_DISABLE      (1<<7)
#define CPU_SYS_CTRL_PCLK_MOD_I2CM_MANUAL_DISABLE_POS  (7)
#define CPU_SYS_CTRL_PCLK_SPI_MANUAL_DISABLE      (1<<8)
#define CPU_SYS_CTRL_PCLK_SPI_MANUAL_DISABLE_POS  (8)
#define CPU_SYS_CTRL_PCLK_TRNG_MANUAL_DISABLE      (1<<9)
#define CPU_SYS_CTRL_PCLK_TRNG_MANUAL_DISABLE_POS  (9)
#define CPU_SYS_CTRL_PCLK_PROCESS_MON_MANUAL_DISABLE      (1<<10)
#define CPU_SYS_CTRL_PCLK_PROCESS_MON_MANUAL_DISABLE_POS  (10)
#define CPU_SYS_CTRL_PCLK_ANALOG_REG0_MANUAL_DISABLE      (1<<11)
#define CPU_SYS_CTRL_PCLK_ANALOG_REG0_MANUAL_DISABLE_POS  (11)
#define CPU_SYS_CTRL_PCLK_GPIOA_MANUAL_DISABLE      (1<<12)
#define CPU_SYS_CTRL_PCLK_GPIOA_MANUAL_DISABLE_POS  (12)
#define CPU_SYS_CTRL_PCLK_MSADC_MANUAL_DISABLE      (1<<13)
#define CPU_SYS_CTRL_PCLK_MSADC_MANUAL_DISABLE_POS  (13)
#define CPU_SYS_CTRL_PCLK_EFUSE_MANUAL_DISABLE      (1<<14)
#define CPU_SYS_CTRL_PCLK_EFUSE_MANUAL_DISABLE_POS  (14)

//others_manual_enable
#define CPU_SYS_CTRL_OTHERS_SDMMC_MANUAL_ENABLE      (1<<0)
#define CPU_SYS_CTRL_OTHERS_SDMMC_MANUAL_ENABLE_POS  (0)
#define CPU_SYS_CTRL_OTHERS_FLASH_MANUAL_ENABLE      (1<<1)
#define CPU_SYS_CTRL_OTHERS_FLASH_MANUAL_ENABLE_POS  (1)
#define CPU_SYS_CTRL_OTHERS_TIME0_MANUAL_ENABLE      (1<<2)
#define CPU_SYS_CTRL_OTHERS_TIME0_MANUAL_ENABLE_POS  (2)
#define CPU_SYS_CTRL_OTHERS_TIME1_MANUAL_ENABLE      (1<<3)
#define CPU_SYS_CTRL_OTHERS_TIME1_MANUAL_ENABLE_POS  (3)
#define CPU_SYS_CTRL_OTHERS_UART0_MANUAL_ENABLE      (1<<4)
#define CPU_SYS_CTRL_OTHERS_UART0_MANUAL_ENABLE_POS  (4)
#define CPU_SYS_CTRL_OTHERS_UART1_MANUAL_ENABLE      (1<<5)
#define CPU_SYS_CTRL_OTHERS_UART1_MANUAL_ENABLE_POS  (5)
#define CPU_SYS_CTRL_OTHERS_UART2_MANUAL_ENABLE      (1<<6)
#define CPU_SYS_CTRL_OTHERS_UART2_MANUAL_ENABLE_POS  (6)
#define CPU_SYS_CTRL_OTHERS_SDIO_MANUAL_ENABLE      (1<<7)
#define CPU_SYS_CTRL_OTHERS_SDIO_MANUAL_ENABLE_POS  (7)
#define CPU_SYS_CTRL_OTHERS_PWM_MANUAL_ENABLE      (1<<8)
#define CPU_SYS_CTRL_OTHERS_PWM_MANUAL_ENABLE_POS  (8)
#define CPU_SYS_CTRL_OTHERS_RTC_ALWAYS_MANUAL_ENABLE      (1<<9)
#define CPU_SYS_CTRL_OTHERS_RTC_ALWAYS_MANUAL_ENABLE_POS  (9)
#define CPU_SYS_CTRL_OTHERS_RTC_WDG0_MANUAL_ENABLE      (1<<10)
#define CPU_SYS_CTRL_OTHERS_RTC_WDG0_MANUAL_ENABLE_POS  (10)
#define CPU_SYS_CTRL_OTHERS_RTC_WDG1_MANUAL_ENABLE      (1<<11)
#define CPU_SYS_CTRL_OTHERS_RTC_WDG1_MANUAL_ENABLE_POS  (11)
#define CPU_SYS_CTRL_OTHERS_AUDIO_PROC_MANUAL_ENABLE      (1<<12)
#define CPU_SYS_CTRL_OTHERS_AUDIO_PROC_MANUAL_ENABLE_POS  (12)
#define CPU_SYS_CTRL_OTHERS_PROCESS_MON_MANUAL_ENABLE      (1<<13)
#define CPU_SYS_CTRL_OTHERS_PROCESS_MON_MANUAL_ENABLE_POS  (13)
#define CPU_SYS_CTRL_OTHERS_BCK_0_MANUAL_ENABLE      (1<<14)
#define CPU_SYS_CTRL_OTHERS_BCK_0_MANUAL_ENABLE_POS  (14)
#define CPU_SYS_CTRL_OTHERS_BCK_1_MANUAL_ENABLE      (1<<15)
#define CPU_SYS_CTRL_OTHERS_BCK_1_MANUAL_ENABLE_POS  (15)
#define CPU_SYS_CTRL_OTHERS_SPDIF_MANUAL_ENABLE      (1<<16)
#define CPU_SYS_CTRL_OTHERS_SPDIF_MANUAL_ENABLE_POS  (16)
#define CPU_SYS_CTRL_OTHERS_SPI_MANUAL_ENABLE      (1<<17)
#define CPU_SYS_CTRL_OTHERS_SPI_MANUAL_ENABLE_POS  (17)
#define CPU_SYS_CTRL_OTHERS_MSADC_MANUAL_ENABLE      (1<<18)
#define CPU_SYS_CTRL_OTHERS_MSADC_MANUAL_ENABLE_POS  (18)
#define CPU_SYS_CTRL_OTHERS_EFUSE_MANUAL_ENABLE      (1<<19)
#define CPU_SYS_CTRL_OTHERS_EFUSE_MANUAL_ENABLE_POS  (19)
#define CPU_SYS_CTRL_OTHERS_USBC_MANUAL_ENABLE      (1<<20)
#define CPU_SYS_CTRL_OTHERS_USBC_MANUAL_ENABLE_POS  (20)

//others_manual_disable
#define CPU_SYS_CTRL_OTHERS_SDMMC_MANUAL_DISABLE      (1<<0)
#define CPU_SYS_CTRL_OTHERS_SDMMC_MANUAL_DISABLE_POS  (0)
#define CPU_SYS_CTRL_OTHERS_FLASH_MANUAL_DISABLE      (1<<1)
#define CPU_SYS_CTRL_OTHERS_FLASH_MANUAL_DISABLE_POS  (1)
#define CPU_SYS_CTRL_OTHERS_TIME0_MANUAL_DISABLE      (1<<2)
#define CPU_SYS_CTRL_OTHERS_TIME0_MANUAL_DISABLE_POS  (2)
#define CPU_SYS_CTRL_OTHERS_TIME1_MANUAL_DISABLE      (1<<3)
#define CPU_SYS_CTRL_OTHERS_TIME1_MANUAL_DISABLE_POS  (3)
#define CPU_SYS_CTRL_OTHERS_UART0_MANUAL_DISABLE      (1<<4)
#define CPU_SYS_CTRL_OTHERS_UART0_MANUAL_DISABLE_POS  (4)
#define CPU_SYS_CTRL_OTHERS_UART1_MANUAL_DISABLE      (1<<5)
#define CPU_SYS_CTRL_OTHERS_UART1_MANUAL_DISABLE_POS  (5)
#define CPU_SYS_CTRL_OTHERS_UART2_MANUAL_DISABLE      (1<<6)
#define CPU_SYS_CTRL_OTHERS_UART2_MANUAL_DISABLE_POS  (6)
#define CPU_SYS_CTRL_OTHERS_SDIO_MANUAL_DISABLE      (1<<7)
#define CPU_SYS_CTRL_OTHERS_SDIO_MANUAL_DISABLE_POS  (7)
#define CPU_SYS_CTRL_OTHERS_PWM_MANUAL_DISABLE      (1<<8)
#define CPU_SYS_CTRL_OTHERS_PWM_MANUAL_DISABLE_POS  (8)
#define CPU_SYS_CTRL_OTHERS_RTC_ALWAYS_MANUAL_DISABLE      (1<<9)
#define CPU_SYS_CTRL_OTHERS_RTC_ALWAYS_MANUAL_DISABLE_POS  (9)
#define CPU_SYS_CTRL_OTHERS_RTC_WDG0_MANUAL_DISABLE      (1<<10)
#define CPU_SYS_CTRL_OTHERS_RTC_WDG0_MANUAL_DISABLE_POS  (10)
#define CPU_SYS_CTRL_OTHERS_RTC_WDG1_MANUAL_DISABLE      (1<<11)
#define CPU_SYS_CTRL_OTHERS_RTC_WDG1_MANUAL_DISABLE_POS  (11)
#define CPU_SYS_CTRL_OTHERS_AUDIO_PROC_MANUAL_DISABLE      (1<<12)
#define CPU_SYS_CTRL_OTHERS_AUDIO_PROC_MANUAL_DISABLE_POS  (12)
#define CPU_SYS_CTRL_OTHERS_PROCESS_MON_MANUAL_DISABLE      (1<<13)
#define CPU_SYS_CTRL_OTHERS_PROCESS_MON_MANUAL_DISABLE_POS  (13)
#define CPU_SYS_CTRL_OTHERS_BCK_0_MANUAL_DISABLE      (1<<14)
#define CPU_SYS_CTRL_OTHERS_BCK_0_MANUAL_DISABLE_POS  (14)
#define CPU_SYS_CTRL_OTHERS_BCK_1_MANUAL_DISABLE      (1<<15)
#define CPU_SYS_CTRL_OTHERS_BCK_1_MANUAL_DISABLE_POS  (15)
#define CPU_SYS_CTRL_OTHERS_SPDIF_MANUAL_DISABLE      (1<<16)
#define CPU_SYS_CTRL_OTHERS_SPDIF_MANUAL_DISABLE_POS  (16)
#define CPU_SYS_CTRL_OTHERS_SPI_MANUAL_DISABLE      (1<<17)
#define CPU_SYS_CTRL_OTHERS_SPI_MANUAL_DISABLE_POS  (17)
#define CPU_SYS_CTRL_OTHERS_MSADC_MANUAL_DISABLE      (1<<18)
#define CPU_SYS_CTRL_OTHERS_MSADC_MANUAL_DISABLE_POS  (18)
#define CPU_SYS_CTRL_OTHERS_EFUSE_MANUAL_DISABLE      (1<<19)
#define CPU_SYS_CTRL_OTHERS_EFUSE_MANUAL_DISABLE_POS  (19)
#define CPU_SYS_CTRL_OTHERS_USBC_MANUAL_DISABLE      (1<<20)
#define CPU_SYS_CTRL_OTHERS_USBC_MANUAL_DISABLE_POS  (20)

//hclk_soft_resetn_set
#define CPU_SYS_CTRL_HRESETN_ROM_SET      (1<<0)
#define CPU_SYS_CTRL_HRESETN_ROM_SET_POS  (0)
#define CPU_SYS_CTRL_HRESETN_BTROM_SET      (1<<1)
#define CPU_SYS_CTRL_HRESETN_BTROM_SET_POS  (1)
#define CPU_SYS_CTRL_HRESETN_SRAM0_SET      (1<<2)
#define CPU_SYS_CTRL_HRESETN_SRAM0_SET_POS  (2)
#define CPU_SYS_CTRL_HRESETN_SRAM1_SET      (1<<3)
#define CPU_SYS_CTRL_HRESETN_SRAM1_SET_POS  (3)
#define CPU_SYS_CTRL_HRESETN_SRAM2_SET      (1<<4)
#define CPU_SYS_CTRL_HRESETN_SRAM2_SET_POS  (4)
#define CPU_SYS_CTRL_HRESETN_SRAM3_SET      (1<<5)
#define CPU_SYS_CTRL_HRESETN_SRAM3_SET_POS  (5)
#define CPU_SYS_CTRL_HRESETN_SRAM4_SET      (1<<6)
#define CPU_SYS_CTRL_HRESETN_SRAM4_SET_POS  (6)
#define CPU_SYS_CTRL_HRESETN_SRAM5_SET      (1<<7)
#define CPU_SYS_CTRL_HRESETN_SRAM5_SET_POS  (7)
#define CPU_SYS_CTRL_HRESETN_AHB0_DEC_SET      (1<<8)
#define CPU_SYS_CTRL_HRESETN_AHB0_DEC_SET_POS  (8)
#define CPU_SYS_CTRL_HRESETN_APB0_SET      (1<<9)
#define CPU_SYS_CTRL_HRESETN_APB0_SET_POS  (9)
#define CPU_SYS_CTRL_HRESETN_EXMEM_BUS_SET      (1<<10)
#define CPU_SYS_CTRL_HRESETN_EXMEM_BUS_SET_POS  (10)
#define CPU_SYS_CTRL_HRESETN_CACHE_SET      (1<<11)
#define CPU_SYS_CTRL_HRESETN_CACHE_SET_POS  (11)
#define CPU_SYS_CTRL_HRESETN_DMA_SET      (1<<12)
#define CPU_SYS_CTRL_HRESETN_DMA_SET_POS  (12)
#define CPU_SYS_CTRL_HRESETN_FLASH_SET      (1<<13)
#define CPU_SYS_CTRL_HRESETN_FLASH_SET_POS  (13)
#define CPU_SYS_CTRL_HRESETN_TRAP_P_SET      (1<<14)
#define CPU_SYS_CTRL_HRESETN_TRAP_P_SET_POS  (14)
#define CPU_SYS_CTRL_HRESETN_TRAP_S0_SET      (1<<15)
#define CPU_SYS_CTRL_HRESETN_TRAP_S0_SET_POS  (15)
#define CPU_SYS_CTRL_HRESETN_UART0_SET      (1<<16)
#define CPU_SYS_CTRL_HRESETN_UART0_SET_POS  (16)
#define CPU_SYS_CTRL_HRESETN_UART1_SET      (1<<17)
#define CPU_SYS_CTRL_HRESETN_UART1_SET_POS  (17)
#define CPU_SYS_CTRL_HRESETN_UART2_SET      (1<<18)
#define CPU_SYS_CTRL_HRESETN_UART2_SET_POS  (18)
#define CPU_SYS_CTRL_HRESETN_AUD_PROC_SET      (1<<19)
#define CPU_SYS_CTRL_HRESETN_AUD_PROC_SET_POS  (19)
#define CPU_SYS_CTRL_HRESETN_MAILBOX_SET      (1<<20)
#define CPU_SYS_CTRL_HRESETN_MAILBOX_SET_POS  (20)
#define CPU_SYS_CTRL_HRESETN_SDIO_SET      (1<<21)
#define CPU_SYS_CTRL_HRESETN_SDIO_SET_POS  (21)
#define CPU_SYS_CTRL_HRESETN_MM_SYS_SET      (1<<22)
#define CPU_SYS_CTRL_HRESETN_MM_SYS_SET_POS  (22)
#define CPU_SYS_CTRL_HRESETN_SDMMC_SET      (1<<23)
#define CPU_SYS_CTRL_HRESETN_SDMMC_SET_POS  (23)
#define CPU_SYS_CTRL_HRESETN_TRAP_S1_SET      (1<<24)
#define CPU_SYS_CTRL_HRESETN_TRAP_S1_SET_POS  (24)

//hclk_soft_resetn_clr
#define CPU_SYS_CTRL_HRESETN_ROM_CLEAR      (1<<0)
#define CPU_SYS_CTRL_HRESETN_ROM_CLEAR_POS  (0)
#define CPU_SYS_CTRL_HRESETN_BTROM_CLEAR      (1<<1)
#define CPU_SYS_CTRL_HRESETN_BTROM_CLEAR_POS  (1)
#define CPU_SYS_CTRL_HRESETN_SRAM0_CLEAR      (1<<2)
#define CPU_SYS_CTRL_HRESETN_SRAM0_CLEAR_POS  (2)
#define CPU_SYS_CTRL_HRESETN_SRAM1_CLEAR      (1<<3)
#define CPU_SYS_CTRL_HRESETN_SRAM1_CLEAR_POS  (3)
#define CPU_SYS_CTRL_HRESETN_SRAM2_CLEAR      (1<<4)
#define CPU_SYS_CTRL_HRESETN_SRAM2_CLEAR_POS  (4)
#define CPU_SYS_CTRL_HRESETN_SRAM3_CLEAR      (1<<5)
#define CPU_SYS_CTRL_HRESETN_SRAM3_CLEAR_POS  (5)
#define CPU_SYS_CTRL_HRESETN_SRAM4_CLEAR      (1<<6)
#define CPU_SYS_CTRL_HRESETN_SRAM4_CLEAR_POS  (6)
#define CPU_SYS_CTRL_HRESETN_SRAM5_CLEAR      (1<<7)
#define CPU_SYS_CTRL_HRESETN_SRAM5_CLEAR_POS  (7)
#define CPU_SYS_CTRL_HRESETN_AHB0_DEC_CLEAR      (1<<8)
#define CPU_SYS_CTRL_HRESETN_AHB0_DEC_CLEAR_POS  (8)
#define CPU_SYS_CTRL_HRESETN_APB0_CLEAR      (1<<9)
#define CPU_SYS_CTRL_HRESETN_APB0_CLEAR_POS  (9)
#define CPU_SYS_CTRL_HRESETN_EXMEM_BUS_CLEAR      (1<<10)
#define CPU_SYS_CTRL_HRESETN_EXMEM_BUS_CLEAR_POS  (10)
#define CPU_SYS_CTRL_HRESETN_CACHE_CLEAR      (1<<11)
#define CPU_SYS_CTRL_HRESETN_CACHE_CLEAR_POS  (11)
#define CPU_SYS_CTRL_HRESETN_DMA_CLEAR      (1<<12)
#define CPU_SYS_CTRL_HRESETN_DMA_CLEAR_POS  (12)
#define CPU_SYS_CTRL_HRESETN_FLASH_CLEAR      (1<<13)
#define CPU_SYS_CTRL_HRESETN_FLASH_CLEAR_POS  (13)
#define CPU_SYS_CTRL_HRESETN_TRAP_P_CLEAR      (1<<14)
#define CPU_SYS_CTRL_HRESETN_TRAP_P_CLEAR_POS  (14)
#define CPU_SYS_CTRL_HRESETN_TRAP_S0_CLEAR      (1<<15)
#define CPU_SYS_CTRL_HRESETN_TRAP_S0_CLEAR_POS  (15)
#define CPU_SYS_CTRL_HRESETN_UART0_CLEAR      (1<<16)
#define CPU_SYS_CTRL_HRESETN_UART0_CLEAR_POS  (16)
#define CPU_SYS_CTRL_HRESETN_UART1_CLEAR      (1<<17)
#define CPU_SYS_CTRL_HRESETN_UART1_CLEAR_POS  (17)
#define CPU_SYS_CTRL_HRESETN_UART2_CLEAR      (1<<18)
#define CPU_SYS_CTRL_HRESETN_UART2_CLEAR_POS  (18)
#define CPU_SYS_CTRL_HRESETN_AUD_PROC_CLEAR      (1<<19)
#define CPU_SYS_CTRL_HRESETN_AUD_PROC_CLEAR_POS  (19)
#define CPU_SYS_CTRL_HRESETN_MAILBOX_CLEAR      (1<<20)
#define CPU_SYS_CTRL_HRESETN_MAILBOX_CLEAR_POS  (20)
#define CPU_SYS_CTRL_HRESETN_SDIO_CLEAR      (1<<21)
#define CPU_SYS_CTRL_HRESETN_SDIO_CLEAR_POS  (21)
#define CPU_SYS_CTRL_HRESETN_MM_SYS_CLEAR      (1<<22)
#define CPU_SYS_CTRL_HRESETN_MM_SYS_CLEAR_POS  (22)
#define CPU_SYS_CTRL_HRESETN_SDMMC_CLEAR      (1<<23)
#define CPU_SYS_CTRL_HRESETN_SDMMC_CLEAR_POS  (23)
#define CPU_SYS_CTRL_HRESETN_TRAP_S1_CLEAR      (1<<24)
#define CPU_SYS_CTRL_HRESETN_TRAP_S1_CLEAR_POS  (24)

//pclk_soft_resetn_set
#define CPU_SYS_CTRL_PRESETN_CPU_SYSCTRL_SET      (1<<0)
#define CPU_SYS_CTRL_PRESETN_CPU_SYSCTRL_SET_POS  (0)
#define CPU_SYS_CTRL_PRESETN_WDG0_SET      (1<<1)
#define CPU_SYS_CTRL_PRESETN_WDG0_SET_POS  (1)
#define CPU_SYS_CTRL_PRESETN_WDG1_SET      (1<<2)
#define CPU_SYS_CTRL_PRESETN_WDG1_SET_POS  (2)
#define CPU_SYS_CTRL_PRESETN_TIMER0_SET      (1<<3)
#define CPU_SYS_CTRL_PRESETN_TIMER0_SET_POS  (3)
#define CPU_SYS_CTRL_PRESETN_TIMER1_SET      (1<<4)
#define CPU_SYS_CTRL_PRESETN_TIMER1_SET_POS  (4)
#define CPU_SYS_CTRL_PRESETN_PWM_SET      (1<<5)
#define CPU_SYS_CTRL_PRESETN_PWM_SET_POS  (5)
#define CPU_SYS_CTRL_PRESETN_I2CM_SET      (1<<6)
#define CPU_SYS_CTRL_PRESETN_I2CM_SET_POS  (6)
#define CPU_SYS_CTRL_PRESETN_MOD_I2CM_SET      (1<<7)
#define CPU_SYS_CTRL_PRESETN_MOD_I2CM_SET_POS  (7)
#define CPU_SYS_CTRL_PRESETN_SPI_SET      (1<<8)
#define CPU_SYS_CTRL_PRESETN_SPI_SET_POS  (8)
#define CPU_SYS_CTRL_PRESETN_TRNG_SET      (1<<9)
#define CPU_SYS_CTRL_PRESETN_TRNG_SET_POS  (9)
#define CPU_SYS_CTRL_PRESETN_PROCESS_MON_SET      (1<<10)
#define CPU_SYS_CTRL_PRESETN_PROCESS_MON_SET_POS  (10)
#define CPU_SYS_CTRL_PRESETN_ANALOG_REG0_SET      (1<<11)
#define CPU_SYS_CTRL_PRESETN_ANALOG_REG0_SET_POS  (11)
#define CPU_SYS_CTRL_PRESETN_GPIOA_SET      (1<<12)
#define CPU_SYS_CTRL_PRESETN_GPIOA_SET_POS  (12)
#define CPU_SYS_CTRL_PRESETN_MSADC_SET      (1<<13)
#define CPU_SYS_CTRL_PRESETN_MSADC_SET_POS  (13)
#define CPU_SYS_CTRL_PRESETN_EFUSE_SET      (1<<14)
#define CPU_SYS_CTRL_PRESETN_EFUSE_SET_POS  (14)

//pclk_soft_resetn_clr
#define CPU_SYS_CTRL_PRESETN_CPU_SYSCTRL_CLEAR      (1<<0)
#define CPU_SYS_CTRL_PRESETN_CPU_SYSCTRL_CLEAR_POS  (0)
#define CPU_SYS_CTRL_PRESETN_WDG0_CLEAR      (1<<1)
#define CPU_SYS_CTRL_PRESETN_WDG0_CLEAR_POS  (1)
#define CPU_SYS_CTRL_PRESETN_WDG1_CLEAR      (1<<2)
#define CPU_SYS_CTRL_PRESETN_WDG1_CLEAR_POS  (2)
#define CPU_SYS_CTRL_PRESETN_TIMER0_CLEAR      (1<<3)
#define CPU_SYS_CTRL_PRESETN_TIMER0_CLEAR_POS  (3)
#define CPU_SYS_CTRL_PRESETN_TIMER1_CLEAR      (1<<4)
#define CPU_SYS_CTRL_PRESETN_TIMER1_CLEAR_POS  (4)
#define CPU_SYS_CTRL_PRESETN_PWM_CLEAR      (1<<5)
#define CPU_SYS_CTRL_PRESETN_PWM_CLEAR_POS  (5)
#define CPU_SYS_CTRL_PRESETN_I2CM_CLEAR      (1<<6)
#define CPU_SYS_CTRL_PRESETN_I2CM_CLEAR_POS  (6)
#define CPU_SYS_CTRL_PRESETN_MOD_I2CM_CLEAR      (1<<7)
#define CPU_SYS_CTRL_PRESETN_MOD_I2CM_CLEAR_POS  (7)
#define CPU_SYS_CTRL_PRESETN_SPI_CLEAR      (1<<8)
#define CPU_SYS_CTRL_PRESETN_SPI_CLEAR_POS  (8)
#define CPU_SYS_CTRL_PRESETN_TRNG_CLEAR      (1<<9)
#define CPU_SYS_CTRL_PRESETN_TRNG_CLEAR_POS  (9)
#define CPU_SYS_CTRL_PRESETN_PROCESS_MON_CLEAR      (1<<10)
#define CPU_SYS_CTRL_PRESETN_PROCESS_MON_CLEAR_POS  (10)
#define CPU_SYS_CTRL_PRESETN_ANALOG_REG0_CLEAR      (1<<11)
#define CPU_SYS_CTRL_PRESETN_ANALOG_REG0_CLEAR_POS  (11)
#define CPU_SYS_CTRL_PRESETN_GPIOA_CLEAR      (1<<12)
#define CPU_SYS_CTRL_PRESETN_GPIOA_CLEAR_POS  (12)
#define CPU_SYS_CTRL_PRESETN_MSADC_CLEAR      (1<<13)
#define CPU_SYS_CTRL_PRESETN_MSADC_CLEAR_POS  (13)
#define CPU_SYS_CTRL_PRESETN_EFUSE_CLEAR      (1<<14)
#define CPU_SYS_CTRL_PRESETN_EFUSE_CLEAR_POS  (14)

//others_soft_resetn_set
#define CPU_SYS_CTRL_RESETN_TIMER0_SET      (1<<0)
#define CPU_SYS_CTRL_RESETN_TIMER0_SET_POS  (0)
#define CPU_SYS_CTRL_RESETN_TIMER1_SET      (1<<1)
#define CPU_SYS_CTRL_RESETN_TIMER1_SET_POS  (1)
#define CPU_SYS_CTRL_RESETN_UART0_SET      (1<<2)
#define CPU_SYS_CTRL_RESETN_UART0_SET_POS  (2)
#define CPU_SYS_CTRL_RESETN_UART1_SET      (1<<3)
#define CPU_SYS_CTRL_RESETN_UART1_SET_POS  (3)
#define CPU_SYS_CTRL_RESETN_UART2_SET      (1<<4)
#define CPU_SYS_CTRL_RESETN_UART2_SET_POS  (4)
#define CPU_SYS_CTRL_RESETN_SDIO_SET      (1<<5)
#define CPU_SYS_CTRL_RESETN_SDIO_SET_POS  (5)
#define CPU_SYS_CTRL_RESETN_PWM_SET      (1<<6)
#define CPU_SYS_CTRL_RESETN_PWM_SET_POS  (6)
#define CPU_SYS_CTRL_RESETN_RTC_WDG0_SET      (1<<7)
#define CPU_SYS_CTRL_RESETN_RTC_WDG0_SET_POS  (7)
#define CPU_SYS_CTRL_RESETN_RTC_WDG1_SET      (1<<8)
#define CPU_SYS_CTRL_RESETN_RTC_WDG1_SET_POS  (8)
#define CPU_SYS_CTRL_RESETN_AUDIO_PROC_SET      (1<<9)
#define CPU_SYS_CTRL_RESETN_AUDIO_PROC_SET_POS  (9)
#define CPU_SYS_CTRL_RESETN_PROCESS_MON_SET      (1<<10)
#define CPU_SYS_CTRL_RESETN_PROCESS_MON_SET_POS  (10)
#define CPU_SYS_CTRL_RESETN_SPI_SET      (1<<11)
#define CPU_SYS_CTRL_RESETN_SPI_SET_POS  (11)
#define CPU_SYS_CTRL_RESETN_FLASH_SET      (1<<12)
#define CPU_SYS_CTRL_RESETN_FLASH_SET_POS  (12)
#define CPU_SYS_CTRL_RESETN_MSADC_SET      (1<<13)
#define CPU_SYS_CTRL_RESETN_MSADC_SET_POS  (13)
#define CPU_SYS_CTRL_RESETN_EFUSE_SET      (1<<14)
#define CPU_SYS_CTRL_RESETN_EFUSE_SET_POS  (14)
#define CPU_SYS_CTRL_RESETN_USBC_SET      (1<<15)
#define CPU_SYS_CTRL_RESETN_USBC_SET_POS  (15)

//others_soft_resetn_clr
#define CPU_SYS_CTRL_RESETN_TIMER0_CLEAR      (1<<0)
#define CPU_SYS_CTRL_RESETN_TIMER0_CLEAR_POS  (0)
#define CPU_SYS_CTRL_RESETN_TIMER1_CLEAR      (1<<1)
#define CPU_SYS_CTRL_RESETN_TIMER1_CLEAR_POS  (1)
#define CPU_SYS_CTRL_RESETN_UART0_CLEAR      (1<<2)
#define CPU_SYS_CTRL_RESETN_UART0_CLEAR_POS  (2)
#define CPU_SYS_CTRL_RESETN_UART1_CLEAR      (1<<3)
#define CPU_SYS_CTRL_RESETN_UART1_CLEAR_POS  (3)
#define CPU_SYS_CTRL_RESETN_UART2_CLEAR      (1<<4)
#define CPU_SYS_CTRL_RESETN_UART2_CLEAR_POS  (4)
#define CPU_SYS_CTRL_RESETN_SDIO_CLEAR      (1<<5)
#define CPU_SYS_CTRL_RESETN_SDIO_CLEAR_POS  (5)
#define CPU_SYS_CTRL_RESETN_PWM_CLEAR      (1<<6)
#define CPU_SYS_CTRL_RESETN_PWM_CLEAR_POS  (6)
#define CPU_SYS_CTRL_RESETN_RTC_WDG0_CLEAR      (1<<7)
#define CPU_SYS_CTRL_RESETN_RTC_WDG0_CLEAR_POS  (7)
#define CPU_SYS_CTRL_RESETN_RTC_WDG1_CLEAR      (1<<8)
#define CPU_SYS_CTRL_RESETN_RTC_WDG1_CLEAR_POS  (8)
#define CPU_SYS_CTRL_RESETN_AUDIO_PROC_CLEAR      (1<<9)
#define CPU_SYS_CTRL_RESETN_AUDIO_PROC_CLEAR_POS  (9)
#define CPU_SYS_CTRL_RESETN_PROCESS_MON_CLEAR      (1<<10)
#define CPU_SYS_CTRL_RESETN_PROCESS_MON_CLEAR_POS  (10)
#define CPU_SYS_CTRL_RESETN_SPI_CLEAR      (1<<11)
#define CPU_SYS_CTRL_RESETN_SPI_CLEAR_POS  (11)
#define CPU_SYS_CTRL_RESETN_FLASH_CLEAR      (1<<12)
#define CPU_SYS_CTRL_RESETN_FLASH_CLEAR_POS  (12)
#define CPU_SYS_CTRL_RESETN_MSADC_CLEAR      (1<<13)
#define CPU_SYS_CTRL_RESETN_MSADC_CLEAR_POS  (13)
#define CPU_SYS_CTRL_RESETN_EFUSE_CLEAR      (1<<14)
#define CPU_SYS_CTRL_RESETN_EFUSE_CLEAR_POS  (14)
#define CPU_SYS_CTRL_RESETN_USBC_CLEAR      (1<<15)
#define CPU_SYS_CTRL_RESETN_USBC_CLEAR_POS  (15)

/* ================================================================================ */
/* ================                MM System Control               ================ */
/* ================================================================================ */
typedef struct {
  __IO uint32_t                          mem_cfg;                      //0x00000000
  __IO uint32_t                          usb_cfg0;                     //0x00000004
  __IO uint32_t                          usb_cfg1;                     //0x00000008
  __IO uint32_t                          usb_cfg2;                     //0x0000000C
  __IO uint32_t                          usb_tport_sel;                //0x00000010
  __IO uint32_t                          usb_status;                   //0x00000014
  __IO uint32_t                          usb_digphy_int_enable;        //0x00000018
  __IO uint32_t                          usb_digphy_int_clr;           //0x0000001C
  __IO uint32_t                          cfg_mm_sys_tports_sel;        //0x00000020
  __IO uint32_t                          mem_cfg1;                     //0x00000024
  __IO uint32_t                          usb_prbs_cfg;                 //0x00000028
  __IO uint32_t                          usb_prbs_status;              //0x0000002C
  __IO uint32_t Reserved_00000030[8];                 //0x00000030
  __IO uint32_t                          cfg_pu_usb;                   //0x00000050
  __IO uint32_t                          usb_ana_cfg0;                 //0x00000054
  __IO uint32_t                          usb_ana_cfg1;                 //0x00000058
} AIC_MMSYSCTRL_TypeDef;

static AIC_MMSYSCTRL_TypeDef * const AIC_MMSYSCTRL = ((AIC_MMSYSCTRL_TypeDef *)AIC_MMSYS_CTRL_BASE);

//mem_cfg
#define MM_SYS_CTRL_CFG_MEM_1PRAM(n)      (((n)&0xFFFF)<<0)
#define MM_SYS_CTRL_CFG_MEM_1PRAM_LSB     (0)
#define MM_SYS_CTRL_CFG_MEM_1PRAM_MASK    (0xFFFF<<0)
#define MM_SYS_CTRL_CFG_MEM_2PRF(n)      (((n)&0xFFFF)<<16)
#define MM_SYS_CTRL_CFG_MEM_2PRF_LSB     (16)
#define MM_SYS_CTRL_CFG_MEM_2PRF_MASK    (0xFFFF<<16)

//usb_cfg0
#define MM_SYS_CTRL_CFG_USB0(n)         (((n)&0xFFFFFFFF)<<0)
#define MM_SYS_CTRL_CFG_USB0_LSB        (0)
#define MM_SYS_CTRL_CFG_USB0_MASK       (0xFFFFFFFF<<0)

//usb_cfg1
#define MM_SYS_CTRL_CFG_USB1(n)         (((n)&0xFFFFFFFF)<<0)
#define MM_SYS_CTRL_CFG_USB1_LSB        (0)
#define MM_SYS_CTRL_CFG_USB1_MASK       (0xFFFFFFFF<<0)

//usb_cfg2
#define MM_SYS_CTRL_CFG_USB2(n)         (((n)&0xFFFFFFFF)<<0)
#define MM_SYS_CTRL_CFG_USB2_LSB        (0)
#define MM_SYS_CTRL_CFG_USB2_MASK       (0xFFFFFFFF<<0)

//usb_tport_sel
#define MM_SYS_CTRL_RG_USB_TPORT_SEL(n)      (((n)&0x3F)<<0)
#define MM_SYS_CTRL_RG_USB_TPORT_SEL_LSB     (0)
#define MM_SYS_CTRL_RG_USB_TPORT_SEL_MASK    (0x3F<<0)

//usb_status
#define MM_SYS_CTRL_RO_USB_READY        (1<<0)
#define MM_SYS_CTRL_RO_USB_READY_POS    (0)
#define MM_SYS_CTRL_RO_USB_RXOVF_INT_RAW_STATUS      (1<<4)
#define MM_SYS_CTRL_RO_USB_RXOVF_INT_RAW_STATUS_POS  (4)
#define MM_SYS_CTRL_RO_USB_HSEOF_ERR_INT_RAW_STATUS      (1<<5)
#define MM_SYS_CTRL_RO_USB_HSEOF_ERR_INT_RAW_STATUS_POS  (5)
#define MM_SYS_CTRL_RO_USB_FSEOF_ERR_INT_RAW_STATUS      (1<<6)
#define MM_SYS_CTRL_RO_USB_FSEOF_ERR_INT_RAW_STATUS_POS  (6)
#define MM_SYS_CTRL_RO_USB_BUSACT_ERR_INT_RAW_STATUS      (1<<7)
#define MM_SYS_CTRL_RO_USB_BUSACT_ERR_INT_RAW_STATUS_POS  (7)
#define MM_SYS_CTRL_RO_USB_SYNC_TIMEOUT_INT_RAW_STATUS      (1<<8)
#define MM_SYS_CTRL_RO_USB_SYNC_TIMEOUT_INT_RAW_STATUS_POS  (8)
#define MM_SYS_CTRL_RO_USB_RXOVF_INT_STATUS      (1<<12)
#define MM_SYS_CTRL_RO_USB_RXOVF_INT_STATUS_POS  (12)
#define MM_SYS_CTRL_RO_USB_HSEOF_ERR_INT_STATUS      (1<<13)
#define MM_SYS_CTRL_RO_USB_HSEOF_ERR_INT_STATUS_POS  (13)
#define MM_SYS_CTRL_RO_USB_FSEOF_ERR_INT_STATUS      (1<<14)
#define MM_SYS_CTRL_RO_USB_FSEOF_ERR_INT_STATUS_POS  (14)
#define MM_SYS_CTRL_RO_USB_BUSACT_ERR_INT_STATUS      (1<<15)
#define MM_SYS_CTRL_RO_USB_BUSACT_ERR_INT_STATUS_POS  (15)
#define MM_SYS_CTRL_RO_USB_SYNC_TIMEOUT_INT_STATUS      (1<<16)
#define MM_SYS_CTRL_RO_USB_SYNC_TIMEOUT_INT_STATUS_POS  (16)

//usb_digphy_int_enable
#define MM_SYS_CTRL_RG_USB_RXOVF_INT_ENABLE      (1<<0)
#define MM_SYS_CTRL_RG_USB_RXOVF_INT_ENABLE_POS  (0)
#define MM_SYS_CTRL_RG_USB_HSEOF_ERR_INT_ENABLE      (1<<1)
#define MM_SYS_CTRL_RG_USB_HSEOF_ERR_INT_ENABLE_POS  (1)
#define MM_SYS_CTRL_RG_USB_FSEOF_ERR_INT_ENABLE      (1<<2)
#define MM_SYS_CTRL_RG_USB_FSEOF_ERR_INT_ENABLE_POS  (2)
#define MM_SYS_CTRL_RG_USB_BUSACT_ERR_INT_ENABLE      (1<<3)
#define MM_SYS_CTRL_RG_USB_BUSACT_ERR_INT_ENABLE_POS  (3)
#define MM_SYS_CTRL_RG_USB_SYNC_TIMEOUT_INT_ENABLE      (1<<4)
#define MM_SYS_CTRL_RG_USB_SYNC_TIMEOUT_INT_ENABLE_POS  (4)

//usb_digphy_int_clr
#define MM_SYS_CTRL_RG_USB_RXOVF_INT_CLR_TGL      (1<<0)
#define MM_SYS_CTRL_RG_USB_RXOVF_INT_CLR_TGL_POS  (0)
#define MM_SYS_CTRL_RG_USB_HSEOF_ERR_INT_CLR_TGL      (1<<1)
#define MM_SYS_CTRL_RG_USB_HSEOF_ERR_INT_CLR_TGL_POS  (1)
#define MM_SYS_CTRL_RG_USB_FSEOF_ERR_INT_CLR_TGL      (1<<2)
#define MM_SYS_CTRL_RG_USB_FSEOF_ERR_INT_CLR_TGL_POS  (2)
#define MM_SYS_CTRL_RG_USB_BUSACT_ERR_INT_CLR_TGL      (1<<3)
#define MM_SYS_CTRL_RG_USB_BUSACT_ERR_INT_CLR_TGL_POS  (3)
#define MM_SYS_CTRL_RG_USB_SYNC_TIMEOUT_INT_CLR_TGL      (1<<4)
#define MM_SYS_CTRL_RG_USB_SYNC_TIMEOUT_INT_CLR_TGL_POS  (4)

//cfg_mm_sys_tports_sel
#define MM_SYS_CTRL_CFG_MM_SYS_TPORTS_SEL(n)      (((n)&3)<<0)
#define MM_SYS_CTRL_CFG_MM_SYS_TPORTS_SEL_LSB     (0)
#define MM_SYS_CTRL_CFG_MM_SYS_TPORTS_SEL_MASK    (3<<0)

//mem_cfg1
#define MM_SYS_CTRL_CFG_MEM_1PRF(n)      (((n)&0xFFFF)<<0)
#define MM_SYS_CTRL_CFG_MEM_1PRF_LSB     (0)
#define MM_SYS_CTRL_CFG_MEM_1PRF_MASK    (0xFFFF<<0)

//usb_prbs_cfg
#define MM_SYS_CTRL_RG_USB_TX_PRBS_MODE      (1<<0)
#define MM_SYS_CTRL_RG_USB_TX_PRBS_MODE_POS  (0)
#define MM_SYS_CTRL_RG_USB_TX_PRBS_LOAD      (1<<1)
#define MM_SYS_CTRL_RG_USB_TX_PRBS_LOAD_POS  (1)
#define MM_SYS_CTRL_RG_USB_TX_PRBS_SEED(n)      (((n)&0x7F)<<2)
#define MM_SYS_CTRL_RG_USB_TX_PRBS_SEED_LSB     (2)
#define MM_SYS_CTRL_RG_USB_TX_PRBS_SEED_MASK    (0x7F<<2)
#define MM_SYS_CTRL_RG_USB_RX_PRBS_MODE      (1<<9)
#define MM_SYS_CTRL_RG_USB_RX_PRBS_MODE_POS  (9)
#define MM_SYS_CTRL_RG_USB_RX_PRBS_TIME(n)      (((n)&15)<<10)
#define MM_SYS_CTRL_RG_USB_RX_PRBS_TIME_LSB     (10)
#define MM_SYS_CTRL_RG_USB_RX_PRBS_TIME_MASK    (15<<10)
#define MM_SYS_CTRL_RG_USB_RX_ERR_TOLERANCE(n)      (((n)&0x7F)<<14)
#define MM_SYS_CTRL_RG_USB_RX_ERR_TOLERANCE_LSB     (14)
#define MM_SYS_CTRL_RG_USB_RX_ERR_TOLERANCE_MASK    (0x7F<<14)

//usb_prbs_status
#define MM_SYS_CTRL_RO_USB_RX_PRBS_VALID      (1<<0)
#define MM_SYS_CTRL_RO_USB_RX_PRBS_VALID_POS  (0)
#define MM_SYS_CTRL_RO_USB_RX_PRBS_END      (1<<1)
#define MM_SYS_CTRL_RO_USB_RX_PRBS_END_POS  (1)
#define MM_SYS_CTRL_RO_USB_RX_PRBS_PASS      (1<<2)
#define MM_SYS_CTRL_RO_USB_RX_PRBS_PASS_POS  (2)
#define MM_SYS_CTRL_RO_USB_RX_PRBS_ERRCNT(n)      (((n)&0xFFFF)<<4)
#define MM_SYS_CTRL_RO_USB_RX_PRBS_ERRCNT_LSB     (4)
#define MM_SYS_CTRL_RO_USB_RX_PRBS_ERRCNT_MASK    (0xFFFF<<4)

//cfg_pu_usb
#define MM_SYS_CTRL_RG_PU_USB_DR        (1<<0)
#define MM_SYS_CTRL_RG_PU_USB_DR_POS    (0)
#define MM_SYS_CTRL_RG_PU_USB           (1<<1)
#define MM_SYS_CTRL_RG_PU_USB_POS       (1)
#define MM_SYS_CTRL_RG_PU_USB_ANA_DR      (1<<2)
#define MM_SYS_CTRL_RG_PU_USB_ANA_DR_POS  (2)
#define MM_SYS_CTRL_RG_PU_USB_ANA       (1<<3)
#define MM_SYS_CTRL_RG_PU_USB_ANA_POS   (3)
#define MM_SYS_CTRL_RG_USB_DLL_RST_DR      (1<<4)
#define MM_SYS_CTRL_RG_USB_DLL_RST_DR_POS  (4)
#define MM_SYS_CTRL_RG_USB_DLL_RST      (1<<5)
#define MM_SYS_CTRL_RG_USB_DLL_RST_POS  (5)
#define MM_SYS_CTRL_RG_USB_DLL_CLK_EN_DR      (1<<6)
#define MM_SYS_CTRL_RG_USB_DLL_CLK_EN_DR_POS  (6)
#define MM_SYS_CTRL_RG_USB_DLL_CLK_EN      (1<<7)
#define MM_SYS_CTRL_RG_USB_DLL_CLK_EN_POS  (7)
#define MM_SYS_CTRL_RG_USB_DLL_CLK2DIG_EN_DR      (1<<8)
#define MM_SYS_CTRL_RG_USB_DLL_CLK2DIG_EN_DR_POS  (8)
#define MM_SYS_CTRL_RG_USB_DLL_CLK2DIG_EN      (1<<9)
#define MM_SYS_CTRL_RG_USB_DLL_CLK2DIG_EN_POS  (9)
#define MM_SYS_CTRL_RG_USB_HS_BYPASS      (1<<10)
#define MM_SYS_CTRL_RG_USB_HS_BYPASS_POS  (10)
#define MM_SYS_CTRL_RG_PU_USB_DLL_US_X2(n)      (((n)&31)<<11)
#define MM_SYS_CTRL_RG_PU_USB_DLL_US_X2_LSB     (11)
#define MM_SYS_CTRL_RG_PU_USB_DLL_US_X2_MASK    (31<<11)
#define MM_SYS_CTRL_RG_USB_DLL_RST_US_X2(n)      (((n)&31)<<16)
#define MM_SYS_CTRL_RG_USB_DLL_RST_US_X2_LSB     (16)
#define MM_SYS_CTRL_RG_USB_DLL_RST_US_X2_MASK    (31<<16)
#define MM_SYS_CTRL_RG_TIMER_0P5US_TH(n)      (((n)&0x3F)<<21)
#define MM_SYS_CTRL_RG_TIMER_0P5US_TH_LSB     (21)
#define MM_SYS_CTRL_RG_TIMER_0P5US_TH_MASK    (0x3F<<21)
#define MM_SYS_CTRL_RG_SW_RESETN_USBC_CORE      (1<<27)
#define MM_SYS_CTRL_RG_SW_RESETN_USBC_CORE_POS  (27)
#define MM_SYS_CTRL_RG_SW_RESETN_USBC_DIGPHY      (1<<28)
#define MM_SYS_CTRL_RG_SW_RESETN_USBC_DIGPHY_POS  (28)
#define MM_SYS_CTRL_RG_USB_CDR_CLK_DIS      (1<<29)
#define MM_SYS_CTRL_RG_USB_CDR_CLK_DIS_POS  (29)

//usb_ana_cfg0
#define MM_SYS_CTRL_RG_USB_JC_MODE      (1<<0)
#define MM_SYS_CTRL_RG_USB_JC_MODE_POS  (0)
#define MM_SYS_CTRL_RG_USB_ZPS_MODE      (1<<1)
#define MM_SYS_CTRL_RG_USB_ZPS_MODE_POS  (1)
#define MM_SYS_CTRL_RG_USB_RST_INTP_MODE      (1<<2)
#define MM_SYS_CTRL_RG_USB_RST_INTP_MODE_POS  (2)
#define MM_SYS_CTRL_RG_USB_HOLD_LAST_MODE      (1<<3)
#define MM_SYS_CTRL_RG_USB_HOLD_LAST_MODE_POS  (3)
#define MM_SYS_CTRL_RG_USB_LOOP_BACK      (1<<4)
#define MM_SYS_CTRL_RG_USB_LOOP_BACK_POS  (4)
#define MM_SYS_CTRL_RG_USB_SEL_TERR      (1<<5)
#define MM_SYS_CTRL_RG_USB_SEL_TERR_POS  (5)
#define MM_SYS_CTRL_RG_USB_SEL_HS_GAIN      (1<<6)
#define MM_SYS_CTRL_RG_USB_SEL_HS_GAIN_POS  (6)
#define MM_SYS_CTRL_RG_USB_SQUACH_DET_MODE      (1<<7)
#define MM_SYS_CTRL_RG_USB_SQUACH_DET_MODE_POS  (7)
#define MM_SYS_CTRL_RG_USB_EN_IDCHECK_SEL      (1<<8)
#define MM_SYS_CTRL_RG_USB_EN_IDCHECK_SEL_POS  (8)
#define MM_SYS_CTRL_RG_USB_EN_IDCHECK_REG      (1<<9)
#define MM_SYS_CTRL_RG_USB_EN_IDCHECK_REG_POS  (9)
#define MM_SYS_CTRL_RG_USB_HS_CLK_SEL(n)      (((n)&3)<<10)
#define MM_SYS_CTRL_RG_USB_HS_CLK_SEL_LSB     (10)
#define MM_SYS_CTRL_RG_USB_HS_CLK_SEL_MASK    (3<<10)
#define MM_SYS_CTRL_RG_USB_ISET_SEQ(n)      (((n)&7)<<12)
#define MM_SYS_CTRL_RG_USB_ISET_SEQ_LSB     (12)
#define MM_SYS_CTRL_RG_USB_ISET_SEQ_MASK    (7<<12)
#define MM_SYS_CTRL_RG_USB_ISET_OTG(n)      (((n)&7)<<16)
#define MM_SYS_CTRL_RG_USB_ISET_OTG_LSB     (16)
#define MM_SYS_CTRL_RG_USB_ISET_OTG_MASK    (7<<16)
#define MM_SYS_CTRL_RG_USB_ISET_HS_DISCONNECT(n)      (((n)&7)<<20)
#define MM_SYS_CTRL_RG_USB_ISET_HS_DISCONNECT_LSB     (20)
#define MM_SYS_CTRL_RG_USB_ISET_HS_DISCONNECT_MASK    (7<<20)
#define MM_SYS_CTRL_RG_USB_GPIO_MODE      (1<<23)
#define MM_SYS_CTRL_RG_USB_GPIO_MODE_POS  (23)
#define MM_SYS_CTRL_RG_USB_CDR_GN_(n)      (((n)&3)<<24)
#define MM_SYS_CTRL_RG_USB_CDR_GN__LSB     (24)
#define MM_SYS_CTRL_RG_USB_CDR_GN__MASK    (3<<24)
#define MM_SYS_CTRL_RG_USB_HS_IDAC_MODE(n)      (((n)&3)<<26)
#define MM_SYS_CTRL_RG_USB_HS_IDAC_MODE_LSB     (26)
#define MM_SYS_CTRL_RG_USB_HS_IDAC_MODE_MASK    (3<<26)
#define MM_SYS_CTRL_RG_USB_HS_IDAC_BIT(n)      (((n)&15)<<28)
#define MM_SYS_CTRL_RG_USB_HS_IDAC_BIT_LSB     (28)
#define MM_SYS_CTRL_RG_USB_HS_IDAC_BIT_MASK    (15<<28)

//usb_ana_cfg1
#define MM_SYS_CTRL_RG_USB_RTERM_HS(n)      (((n)&15)<<0)
#define MM_SYS_CTRL_RG_USB_RTERM_HS_LSB     (0)
#define MM_SYS_CTRL_RG_USB_RTERM_HS_MASK    (15<<0)
#define MM_SYS_CTRL_RG_USB_EN_OTG(n)      (((n)&0x3F)<<12)
#define MM_SYS_CTRL_RG_USB_EN_OTG_LSB     (12)
#define MM_SYS_CTRL_RG_USB_EN_OTG_MASK    (0x3F<<12)
#define MM_SYS_CTRL_RG_USB_DLL_PU_BIT(n)      (((n)&3)<<18)
#define MM_SYS_CTRL_RG_USB_DLL_PU_BIT_LSB     (18)
#define MM_SYS_CTRL_RG_USB_DLL_PU_BIT_MASK    (3<<18)
#define MM_SYS_CTRL_RG_USB_FSLS_DRV_BIT(n)      (((n)&3)<<20)
#define MM_SYS_CTRL_RG_USB_FSLS_DRV_BIT_LSB     (20)
#define MM_SYS_CTRL_RG_USB_FSLS_DRV_BIT_MASK    (3<<20)

/* ================================================================================ */
/* ================                AON System Control              ================ */
/* ================================================================================ */
typedef struct {
  __IO uint32_t                          chip_id;                      //0x00000000
  __IO uint32_t                          aon_clk_sel;                  //0x00000004
  __IO uint32_t                          aon_clk_mode;                 //0x00000008
  __IO uint32_t                          aon_clk_div;                  //0x0000000C
  __IO uint32_t                          top_clk_sel;                  //0x00000010
  __IO uint32_t                          top_hclk_mode;                //0x00000014
  __IO uint32_t                          top_fclk_mode;                //0x00000018
  __IO uint32_t                          top_others_clk_mode;          //0x0000001C
  __IO uint32_t                          hclk_div;                     //0x00000020
  __IO uint32_t                          fclk_div;                     //0x00000024
  __IO uint32_t                          psram_clk_div;                //0x00000028
  __IO uint32_t                          cfg_480m_clk_div;             //0x0000002C
  __IO uint32_t                          real_320m_clk_div;            //0x00000030
  __IO uint32_t                          real_480m_clk_div;            //0x00000034
  __IO uint32_t                          cfg_osc_enable;               //0x00000038
  __IO uint32_t                          reset_cause;                  //0x0000003C
  __IO uint32_t                          tports_sel;                   //0x00000040
  __IO uint32_t                          cpu_p_reset_addr;             //0x00000044
  __IO uint32_t                          cpu_s0_reset_addr;            //0x00000048
  __IO uint32_t                          cfg_cpu_sys_ctrl;             //0x0000004C
  __IO uint32_t                          cfg_rtc1_pu_dcdc_resetn_bypass; //0x00000050
  __IO uint32_t                          cfg_sdio_iomux_sel;           //0x00000054
  __IO uint32_t                          cfg_mem_cpu_sys_1pram;        //0x00000058
  __IO uint32_t                          bt_hclk_div;                  //0x0000005C
  __IO uint32_t                          top_tports_bits_sel0;         //0x00000060
  __IO uint32_t                          top_tports_bits_sel1;         //0x00000064
  __IO uint32_t                          top_tports_bits_sel2;         //0x00000068
  __IO uint32_t                          top_tports_bits_sel3;         //0x0000006C
  __IO uint32_t                          cpu_s1_reset_addr;            //0x00000070
  __IO uint32_t Reserved_00000074[35];                //0x00000074
  __IO uint32_t                          hclk_manual_enable;           //0x00000100
  __IO uint32_t                          hclk_manual_disable;          //0x00000104
  __IO uint32_t                          fclk_manual_enable;           //0x00000108
  __IO uint32_t                          fclk_manual_disable;          //0x0000010C
  __IO uint32_t                          others_manual_enable;         //0x00000110
  __IO uint32_t                          others_manual_disable;        //0x00000114
  __IO uint32_t                          aon_clk_manual_enable;        //0x00000118
  __IO uint32_t                          aon_clk_manual_disable;       //0x0000011C
  __IO uint32_t                          global_soft_resetn_set;       //0x00000120
  __IO uint32_t                          global_soft_resetn_clr;       //0x00000124
  __IO uint32_t                          hclk_soft_resetn_set;         //0x00000128
  __IO uint32_t                          hclk_soft_resetn_clr;         //0x0000012C
  __IO uint32_t                          fclk_soft_resetn_set;         //0x00000130
  __IO uint32_t                          fclk_soft_resetn_clr;         //0x00000134
  __IO uint32_t                          others_soft_resetn_set;       //0x00000138
  __IO uint32_t                          others_soft_resetn_clr;       //0x0000013C
  __IO uint32_t                          aon_soft_resetn_set;          //0x00000140
  __IO uint32_t                          aon_soft_resetn_clr;          //0x00000144
  __IO uint32_t                          boot_mode;                    //0x00000148
  __IO uint32_t                          wdg_reset_en;                 //0x0000014C
  union {
    struct {
      __IO uint32_t                          reserved_reg0;                //0x00000150
      __IO uint32_t                          reserved_reg1;                //0x00000154
      __IO uint32_t                          reserved_reg2;                //0x00000158
      __IO uint32_t                          reserved_reg3;                //0x0000015C
      __IO uint32_t                          reserved_reg4;                //0x00000160
      __IO uint32_t                          reserved_reg5;                //0x00000164
      __IO uint32_t                          reserved_reg6;                //0x00000168
      __IO uint32_t                          reserved_reg7;                //0x0000016C
      __IO uint32_t                          reserved_reg8;                //0x00000170
      __IO uint32_t                          reserved_reg9;                //0x00000174
      __IO uint32_t                          reserved_reg10;               //0x00000178
      __IO uint32_t                          reserved_reg11;               //0x0000017C
      __IO uint32_t                          reserved_reg12;               //0x00000180
      __IO uint32_t                          reserved_reg13;               //0x00000184
      __IO uint32_t                          reserved_reg14;               //0x00000188
      __IO uint32_t                          reserved_reg15;               //0x0000018C
    };
    struct {
      __IO uint32_t BTFWCTRL;   /* 0x150: Bt fw stack top & bt_core sw ctrl mode */
      __IO uint32_t WIFIFWCTRL; /* 0x154: Xmdm addr & Boot arg */
      __IO uint32_t BOOTENTRY;  /* 0x158: Boot entry */
      __IO uint32_t BOOTSTACK;  /* 0x15C: Boot stack */
      __IO uint32_t HOSTTCLSB;  /* 0x160: Host time count lsb */
      __IO uint32_t HOSTTCMSB;  /* 0x164: Host time count msb */
      __IO uint32_t HOSTSYST;   /* 0x168: Host systick */
      __IO uint32_t BTPWRCTRL;  /* 0x16C: BT power control */
      __IO uint32_t CPUS0STACK; /* 0x170: CPU_S0 stack */
      __IO uint32_t CPUS0ENTRY; /* 0x174: CPU_S0 entry */
      __IO uint32_t CPUS1STACK; /* 0x178: CPU_S1 stack */
      __IO uint32_t CPUS1ENTRY; /* 0x17C: CPU_S1 entry */
      __IO uint32_t RTOSTICKCNT;/* 0x180: RTOS tick count */
      __IO uint32_t RESERVED[3];/* 0x184: Reserved */
    };
  };
} AIC_AONSYSCTRL_TypeDef;

static AIC_AONSYSCTRL_TypeDef * const AIC_AONSYSCTRL = ((AIC_AONSYSCTRL_TypeDef *)AIC_AONSYSCTRL_BASE);

//chip_id
#define SYS_CTRL_CHIP_ID(n)             (((n)&0xFFFF)<<0)
#define SYS_CTRL_CHIP_ID_LSB            (0)
#define SYS_CTRL_CHIP_ID_MASK           (0xFFFF<<0)
#define SYS_CTRL_METAL_ID(n)            (((n)&0xFF)<<16)
#define SYS_CTRL_METAL_ID_LSB           (16)
#define SYS_CTRL_METAL_ID_MASK          (0xFF<<16)
#define SYS_CTRL_BOND_ID(n)             (((n)&0xFF)<<24)
#define SYS_CTRL_BOND_ID_LSB            (24)
#define SYS_CTRL_BOND_ID_MASK           (0xFF<<24)

//aon_clk_sel
#define SYS_CTRL_CFG_AON_CLK_SEL_52M_OR_DIV      (1<<0)
#define SYS_CTRL_CFG_AON_CLK_SEL_52M_OR_DIV_POS  (0)

//aon_clk_mode
#define SYS_CTRL_CFG_AON_CLK_MODE(n)      (((n)&0xFFFFFFFF)<<0)
#define SYS_CTRL_CFG_AON_CLK_MODE_LSB     (0)
#define SYS_CTRL_CFG_AON_CLK_MODE_MASK    (0xFFFFFFFF<<0)

//aon_clk_div
#define SYS_CTRL_CFG_AON_CLK_DIV_DENOM(n)      (((n)&0xFF)<<0)
#define SYS_CTRL_CFG_AON_CLK_DIV_DENOM_LSB     (0)
#define SYS_CTRL_CFG_AON_CLK_DIV_DENOM_MASK    (0xFF<<0)
#define SYS_CTRL_CFG_AON_CLK_DIV_UPDATE      (1<<8)
#define SYS_CTRL_CFG_AON_CLK_DIV_UPDATE_POS  (8)

//top_clk_sel
#define SYS_CTRL_CFG_TOP_FAST_HWEN      (1<<0)
#define SYS_CTRL_CFG_TOP_FAST_HWEN_POS  (0)
#define SYS_CTRL_CFG_TOP_FAST_SEL       (1<<1)
#define SYS_CTRL_CFG_TOP_FAST_SEL_POS   (1)
#define SYS_CTRL_CFG_TOP_PLL_480M_SEL      (1<<2)
#define SYS_CTRL_CFG_TOP_PLL_480M_SEL_POS  (2)
#define SYS_CTRL_CFG_TOP_PSRAM_CLK_FAST_SEL      (1<<3)
#define SYS_CTRL_CFG_TOP_PSRAM_CLK_FAST_SEL_POS  (3)
#define SYS_CTRL_CFG_TOP_PSRAM_CLK_480M_SEL      (1<<4)
#define SYS_CTRL_CFG_TOP_PSRAM_CLK_480M_SEL_POS  (4)

//top_hclk_mode
#define SYS_CTRL_CFG_TOP_HCLK_MODE(n)      (((n)&0xFF)<<0)
#define SYS_CTRL_CFG_TOP_HCLK_MODE_LSB     (0)
#define SYS_CTRL_CFG_TOP_HCLK_MODE_MASK    (0xFF<<0)

//top_fclk_mode
#define SYS_CTRL_CFG_TOP_FCLK_MODE(n)      (((n)&0xFF)<<0)
#define SYS_CTRL_CFG_TOP_FCLK_MODE_LSB     (0)
#define SYS_CTRL_CFG_TOP_FCLK_MODE_MASK    (0xFF<<0)

//top_others_clk_mode
#define SYS_CTRL_CFG_TOP_OTHERS_CLK_MODE(n)      (((n)&0xFFFF)<<0)
#define SYS_CTRL_CFG_TOP_OTHERS_CLK_MODE_LSB     (0)
#define SYS_CTRL_CFG_TOP_OTHERS_CLK_MODE_MASK    (0xFFFF<<0)

//hclk_div
#define SYS_CTRL_CFG_TOP_HCLK_DIV_DENOM(n)      (((n)&0xFF)<<0)
#define SYS_CTRL_CFG_TOP_HCLK_DIV_DENOM_LSB     (0)
#define SYS_CTRL_CFG_TOP_HCLK_DIV_DENOM_MASK    (0xFF<<0)
#define SYS_CTRL_CFG_TOP_HCLK_DIV_UPDATE      (1<<8)
#define SYS_CTRL_CFG_TOP_HCLK_DIV_UPDATE_POS  (8)

//fclk_div
#define SYS_CTRL_CFG_TOP_FCLK_DIV_DENOM(n)      (((n)&15)<<0)
#define SYS_CTRL_CFG_TOP_FCLK_DIV_DENOM_LSB     (0)
#define SYS_CTRL_CFG_TOP_FCLK_DIV_DENOM_MASK    (15<<0)
#define SYS_CTRL_CFG_TOP_FCLK_DIV_UPDATE      (1<<4)
#define SYS_CTRL_CFG_TOP_FCLK_DIV_UPDATE_POS  (4)

//psram_clk_div
#define SYS_CTRL_CFG_TOP_PSRAM_CLK_DIV_DENOM(n)      (((n)&15)<<0)
#define SYS_CTRL_CFG_TOP_PSRAM_CLK_DIV_DENOM_LSB     (0)
#define SYS_CTRL_CFG_TOP_PSRAM_CLK_DIV_DENOM_MASK    (15<<0)
#define SYS_CTRL_CFG_TOP_PSRAM_CLK_DIV_UPDATE      (1<<4)
#define SYS_CTRL_CFG_TOP_PSRAM_CLK_DIV_UPDATE_POS  (4)

//cfg_480m_clk_div
#define SYS_CTRL_CFG_TOP_480M_GEN_SEL(n)      (((n)&0xFF)<<0)
#define SYS_CTRL_CFG_TOP_480M_GEN_SEL_LSB     (0)
#define SYS_CTRL_CFG_TOP_480M_GEN_SEL_MASK    (0xFF<<0)
#define SYS_CTRL_CFG_TOP_480M_CLK_MODE_SEL(n)      (((n)&3)<<8)
#define SYS_CTRL_CFG_TOP_480M_CLK_MODE_SEL_LSB     (8)
#define SYS_CTRL_CFG_TOP_480M_CLK_MODE_SEL_MASK    (3<<8)
#define SYS_CTRL_CFG_TOP_480M_DIV_UPDATE      (1<<12)
#define SYS_CTRL_CFG_TOP_480M_DIV_UPDATE_POS  (12)

//real_320m_clk_div
#define SYS_CTRL_CFG_TOP_320M_GEN_SEL(n)      (((n)&0xFF)<<0)
#define SYS_CTRL_CFG_TOP_320M_GEN_SEL_LSB     (0)
#define SYS_CTRL_CFG_TOP_320M_GEN_SEL_MASK    (0xFF<<0)
#define SYS_CTRL_CFG_TOP_320M_CLK_MODE_SEL(n)      (((n)&3)<<8)
#define SYS_CTRL_CFG_TOP_320M_CLK_MODE_SEL_LSB     (8)
#define SYS_CTRL_CFG_TOP_320M_CLK_MODE_SEL_MASK    (3<<8)
#define SYS_CTRL_CFG_TOP_320M_DIV_UPDATE      (1<<12)
#define SYS_CTRL_CFG_TOP_320M_DIV_UPDATE_POS  (12)

//real_480m_clk_div
#define SYS_CTRL_CFG_TOP_REAL_480M_DIV_DENOM(n)      (((n)&15)<<0)
#define SYS_CTRL_CFG_TOP_REAL_480M_DIV_DENOM_LSB     (0)
#define SYS_CTRL_CFG_TOP_REAL_480M_DIV_DENOM_MASK    (15<<0)
#define SYS_CTRL_CFG_TOP_REAL_480M_DIV_UPDATE      (1<<4)
#define SYS_CTRL_CFG_TOP_REAL_480M_DIV_UPDATE_POS  (4)

//cfg_osc_enable
#define SYS_CTRL_CFG_TOP_BT_OSC_EN      (1<<0)
#define SYS_CTRL_CFG_TOP_BT_OSC_EN_POS  (0)
#define SYS_CTRL_CFG_TOP_WLAN_OSC_EN      (1<<1)
#define SYS_CTRL_CFG_TOP_WLAN_OSC_EN_POS  (1)
#define SYS_CTRL_CFG_TOP_BT_OSC_MANUAL      (1<<2)
#define SYS_CTRL_CFG_TOP_BT_OSC_MANUAL_POS  (2)
#define SYS_CTRL_CFG_TOP_WLAN_OSC_MANUAL      (1<<3)
#define SYS_CTRL_CFG_TOP_WLAN_OSC_MANUAL_POS  (3)
#define SYS_CTRL_CFG_TOP_WLAN_OSC_COMB_EN      (1<<4)
#define SYS_CTRL_CFG_TOP_WLAN_OSC_COMB_EN_POS  (4)
#define SYS_CTRL_CFG_TOP_CLK_40M_RF_HWEN      (1<<5)
#define SYS_CTRL_CFG_TOP_CLK_40M_RF_HWEN_POS  (5)
#define SYS_CTRL_CFG_TOP_CLK_40M_RF_MANUAL      (1<<6)
#define SYS_CTRL_CFG_TOP_CLK_40M_RF_MANUAL_POS  (6)

//reset_cause
#define SYS_CTRL_WDG0_RST_HAPPENED      (1<<0)
#define SYS_CTRL_WDG0_RST_HAPPENED_POS  (0)
#define SYS_CTRL_WDG1_RST_HAPPENED      (1<<1)
#define SYS_CTRL_WDG1_RST_HAPPENED_POS  (1)
#define SYS_CTRL_WDG2_RST_HAPPENED      (1<<2)
#define SYS_CTRL_WDG2_RST_HAPPENED_POS  (2)
#define SYS_CTRL_CPU_P_SYSRST_REQ_HAPPENED      (1<<3)
#define SYS_CTRL_CPU_P_SYSRST_REQ_HAPPENED_POS  (3)
#define SYS_CTRL_CPU_S0_SYSRST_REQ_HAPPENED      (1<<4)
#define SYS_CTRL_CPU_S0_SYSRST_REQ_HAPPENED_POS  (4)
#define SYS_CTRL_CPU_S1_SYSRST_REQ_HAPPENED      (1<<5)
#define SYS_CTRL_CPU_S1_SYSRST_REQ_HAPPENED_POS  (5)
#define SYS_CTRL_GLOBAL_SOFT_RESET_HAPPENED      (1<<6)
#define SYS_CTRL_GLOBAL_SOFT_RESET_HAPPENED_POS  (6)

//tports_sel
#define SYS_CTRL_CFG_AON_TPORTS_SEL(n)      (((n)&0xFF)<<0)
#define SYS_CTRL_CFG_AON_TPORTS_SEL_LSB     (0)
#define SYS_CTRL_CFG_AON_TPORTS_SEL_MASK    (0xFF<<0)
#define SYS_CTRL_CFG_TOP_TPORTS_SEL_LOW(n)      (((n)&15)<<8)
#define SYS_CTRL_CFG_TOP_TPORTS_SEL_LOW_LSB     (8)
#define SYS_CTRL_CFG_TOP_TPORTS_SEL_LOW_MASK    (15<<8)
#define SYS_CTRL_CFG_TOP_TPORTS_SEL_HIGH(n)      (((n)&15)<<12)
#define SYS_CTRL_CFG_TOP_TPORTS_SEL_HIGH_LSB     (12)
#define SYS_CTRL_CFG_TOP_TPORTS_SEL_HIGH_MASK    (15<<12)

//cpu_p_reset_addr
#define SYS_CTRL_CFG_CPU_P_RESET_ADDR(n)      (((n)&0xFFFFFFFF)<<0)
#define SYS_CTRL_CFG_CPU_P_RESET_ADDR_LSB     (0)
#define SYS_CTRL_CFG_CPU_P_RESET_ADDR_MASK    (0xFFFFFFFF<<0)

//cpu_s0_reset_addr
#define SYS_CTRL_CFG_CPU_S0_RESET_ADDR(n)      (((n)&0xFFFFFFFF)<<0)
#define SYS_CTRL_CFG_CPU_S0_RESET_ADDR_LSB     (0)
#define SYS_CTRL_CFG_CPU_S0_RESET_ADDR_MASK    (0xFFFFFFFF<<0)

//cfg_cpu_sys_ctrl
#define SYS_CTRL_CFG_CPU_SYS_MATRIX_REMAP(n)      (((n)&15)<<0)
#define SYS_CTRL_CFG_CPU_SYS_MATRIX_REMAP_LSB     (0)
#define SYS_CTRL_CFG_CPU_SYS_MATRIX_REMAP_MASK    (15<<0)
#define SYS_CTRL_CFG_CPU_SYS_FLASH_CLK_SEL      (1<<4)
#define SYS_CTRL_CFG_CPU_SYS_FLASH_CLK_SEL_POS  (4)
#define SYS_CTRL_CFG_CPU_SYS_UART0_CLK_SEL      (1<<5)
#define SYS_CTRL_CFG_CPU_SYS_UART0_CLK_SEL_POS  (5)
#define SYS_CTRL_CFG_CPU_SYS_UART1_CLK_SEL      (1<<6)
#define SYS_CTRL_CFG_CPU_SYS_UART1_CLK_SEL_POS  (6)
#define SYS_CTRL_CFG_CPU_SYS_UART2_CLK_SEL      (1<<7)
#define SYS_CTRL_CFG_CPU_SYS_UART2_CLK_SEL_POS  (7)

//cfg_rtc1_pu_dcdc_resetn_bypass
#define SYS_CTRL_CFG_DCDC_RF_DCDC_CLK_LPO_SEL_SW      (1<<1)
#define SYS_CTRL_CFG_DCDC_RF_DCDC_CLK_LPO_SEL_SW_POS  (1)
#define SYS_CTRL_CFG_DCDC_RF_DCDC_CLK_LPO_SEL      (1<<2)
#define SYS_CTRL_CFG_DCDC_RF_DCDC_CLK_LPO_SEL_POS  (2)

//cfg_sdio_iomux_sel
#define SYS_CTRL_CFG_SDIO_IOMUX_BYPASS_SEL      (1<<0)
#define SYS_CTRL_CFG_SDIO_IOMUX_BYPASS_SEL_POS  (0)
#define SYS_CTRL_CFG_GPIO_AWAKE_MUX_SEL(n)      (((n)&0x7FFF)<<1)
#define SYS_CTRL_CFG_GPIO_AWAKE_MUX_SEL_LSB     (1)
#define SYS_CTRL_CFG_GPIO_AWAKE_MUX_SEL_MASK    (0x7FFF<<1)
#define SYS_CTRL_CFG_SDIO_CLK_PULSE_BIT(n)      (((n)&3)<<16)
#define SYS_CTRL_CFG_SDIO_CLK_PULSE_BIT_LSB     (16)
#define SYS_CTRL_CFG_SDIO_CLK_PULSE_BIT_MASK    (3<<16)

//cfg_mem_cpu_sys_1pram
#define SYS_CTRL_CFG_MEM_CPU_SYS_1PRAM(n)      (((n)&0xFFFF)<<0)
#define SYS_CTRL_CFG_MEM_CPU_SYS_1PRAM_LSB     (0)
#define SYS_CTRL_CFG_MEM_CPU_SYS_1PRAM_MASK    (0xFFFF<<0)

//bt_hclk_div
#define SYS_CTRL_CFG_TOP_BT_HCLK_DIV_DENOM(n)      (((n)&0xFF)<<0)
#define SYS_CTRL_CFG_TOP_BT_HCLK_DIV_DENOM_LSB     (0)
#define SYS_CTRL_CFG_TOP_BT_HCLK_DIV_DENOM_MASK    (0xFF<<0)
#define SYS_CTRL_CFG_TOP_BT_HCLK_DIV_UPDATE      (1<<8)
#define SYS_CTRL_CFG_TOP_BT_HCLK_DIV_UPDATE_POS  (8)

//top_tports_bits_sel0
#define SYS_CTRL_CFG_TOP_TPORTS_BIT_SEL0(n)      (((n)&0xFFFFFFFF)<<0)
#define SYS_CTRL_CFG_TOP_TPORTS_BIT_SEL0_LSB     (0)
#define SYS_CTRL_CFG_TOP_TPORTS_BIT_SEL0_MASK    (0xFFFFFFFF<<0)

//top_tports_bits_sel1
#define SYS_CTRL_CFG_TOP_TPORTS_BIT_SEL1(n)      (((n)&0xFFFFFFFF)<<0)
#define SYS_CTRL_CFG_TOP_TPORTS_BIT_SEL1_LSB     (0)
#define SYS_CTRL_CFG_TOP_TPORTS_BIT_SEL1_MASK    (0xFFFFFFFF<<0)

//top_tports_bits_sel2
#define SYS_CTRL_CFG_TOP_TPORTS_BIT_SEL2(n)      (((n)&0xFFFFFFFF)<<0)
#define SYS_CTRL_CFG_TOP_TPORTS_BIT_SEL2_LSB     (0)
#define SYS_CTRL_CFG_TOP_TPORTS_BIT_SEL2_MASK    (0xFFFFFFFF<<0)

//top_tports_bits_sel3
#define SYS_CTRL_CFG_TOP_TPORTS_BIT_SEL3(n)      (((n)&0xFFFFFFFF)<<0)
#define SYS_CTRL_CFG_TOP_TPORTS_BIT_SEL3_LSB     (0)
#define SYS_CTRL_CFG_TOP_TPORTS_BIT_SEL3_MASK    (0xFFFFFFFF<<0)

//cpu_s1_reset_addr
#define SYS_CTRL_CFG_CPU_S1_RESET_ADDR(n)      (((n)&0xFFFFFFFF)<<0)
#define SYS_CTRL_CFG_CPU_S1_RESET_ADDR_LSB     (0)
#define SYS_CTRL_CFG_CPU_S1_RESET_ADDR_MASK    (0xFFFFFFFF<<0)

//hclk_manual_enable
#define SYS_CTRL_HCLK_CPU_SYS_MANUAL_ENABLE      (1<<0)
#define SYS_CTRL_HCLK_CPU_SYS_MANUAL_ENABLE_POS  (0)
#define SYS_CTRL_HCLK_BT_SYS_MANUAL_ENABLE      (1<<1)
#define SYS_CTRL_HCLK_BT_SYS_MANUAL_ENABLE_POS  (1)
#define SYS_CTRL_HCLK_BT_FREE_MANUAL_ENABLE      (1<<2)
#define SYS_CTRL_HCLK_BT_FREE_MANUAL_ENABLE_POS  (2)
#define SYS_CTRL_HCLK_WIFI_SYS_MANUAL_ENABLE      (1<<3)
#define SYS_CTRL_HCLK_WIFI_SYS_MANUAL_ENABLE_POS  (3)
#define SYS_CTRL_HCLK_TOP_VCORE_ENABLE      (1<<4)
#define SYS_CTRL_HCLK_TOP_VCORE_ENABLE_POS  (4)

//hclk_manual_disable
#define SYS_CTRL_HCLK_CPU_SYS_MANUAL_DISABLE      (1<<0)
#define SYS_CTRL_HCLK_CPU_SYS_MANUAL_DISABLE_POS  (0)
#define SYS_CTRL_HCLK_BT_SYS_MANUAL_DISABLE      (1<<1)
#define SYS_CTRL_HCLK_BT_SYS_MANUAL_DISABLE_POS  (1)
#define SYS_CTRL_HCLK_BT_FREE_MANUAL_DISABLE      (1<<2)
#define SYS_CTRL_HCLK_BT_FREE_MANUAL_DISABLE_POS  (2)
#define SYS_CTRL_HCLK_WIFI_SYS_MANUAL_DISABLE      (1<<3)
#define SYS_CTRL_HCLK_WIFI_SYS_MANUAL_DISABLE_POS  (3)
#define SYS_CTRL_HCLK_TOP_VCORE_MANUAL_DISABLE      (1<<4)
#define SYS_CTRL_HCLK_TOP_VCORE_MANUAL_DISABLE_POS  (4)

//fclk_manual_enable
#define SYS_CTRL_FCLK_CPU_SYS_MANUAL_ENABLE      (1<<0)
#define SYS_CTRL_FCLK_CPU_SYS_MANUAL_ENABLE_POS  (0)

//fclk_manual_disable
#define SYS_CTRL_FCLK_CPU_SYS_MANUAL_DISABLE      (1<<0)
#define SYS_CTRL_FCLK_CPU_SYS_MANUAL_DISABLE_POS  (0)

//others_manual_enable
#define SYS_CTRL_CLK_26M_CPU_SYS_MANUAL_ENABLE      (1<<0)
#define SYS_CTRL_CLK_26M_CPU_SYS_MANUAL_ENABLE_POS  (0)
#define SYS_CTRL_CLK_52M_CPU_SYS_MANUAL_ENABLE      (1<<1)
#define SYS_CTRL_CLK_52M_CPU_SYS_MANUAL_ENABLE_POS  (1)
#define SYS_CTRL_CLK_32K_CPU_SYS_MANUAL_ENABLE      (1<<2)
#define SYS_CTRL_CLK_32K_CPU_SYS_MANUAL_ENABLE_POS  (2)
#define SYS_CTRL_CLK_26M_BT_SYS_MANUAL_ENABLE      (1<<3)
#define SYS_CTRL_CLK_26M_BT_SYS_MANUAL_ENABLE_POS  (3)
#define SYS_CTRL_CLK_52M_BT_SYS_MANUAL_ENABLE      (1<<4)
#define SYS_CTRL_CLK_52M_BT_SYS_MANUAL_ENABLE_POS  (4)
#define SYS_CTRL_CLK_32K_BT_SYS_MANUAL_ENABLE      (1<<5)
#define SYS_CTRL_CLK_32K_BT_SYS_MANUAL_ENABLE_POS  (5)
#define SYS_CTRL_CLK_26M_WIFI_SYS_MANUAL_ENABLE      (1<<6)
#define SYS_CTRL_CLK_26M_WIFI_SYS_MANUAL_ENABLE_POS  (6)
#define SYS_CTRL_CLK_52M_WIFI_SYS_MANUAL_ENABLE      (1<<7)
#define SYS_CTRL_CLK_52M_WIFI_SYS_MANUAL_ENABLE_POS  (7)
#define SYS_CTRL_CLK_32K_WIFI_SYS_MANUAL_ENABLE      (1<<8)
#define SYS_CTRL_CLK_32K_WIFI_SYS_MANUAL_ENABLE_POS  (8)
#define SYS_CTRL_CLK_FLASH_MANUAL_ENABLE      (1<<9)
#define SYS_CTRL_CLK_FLASH_MANUAL_ENABLE_POS  (9)

//others_manual_disable
#define SYS_CTRL_CLK_26M_CPU_SYS_MANUAL_DISABLE      (1<<0)
#define SYS_CTRL_CLK_26M_CPU_SYS_MANUAL_DISABLE_POS  (0)
#define SYS_CTRL_CLK_52M_CPU_SYS_MANUAL_DISABLE      (1<<1)
#define SYS_CTRL_CLK_52M_CPU_SYS_MANUAL_DISABLE_POS  (1)
#define SYS_CTRL_CLK_32K_CPU_SYS_MANUAL_DISABLE      (1<<2)
#define SYS_CTRL_CLK_32K_CPU_SYS_MANUAL_DISABLE_POS  (2)
#define SYS_CTRL_CLK_26M_BT_SYS_MANUAL_DISABLE      (1<<3)
#define SYS_CTRL_CLK_26M_BT_SYS_MANUAL_DISABLE_POS  (3)
#define SYS_CTRL_CLK_52M_BT_SYS_MANUAL_DISABLE      (1<<4)
#define SYS_CTRL_CLK_52M_BT_SYS_MANUAL_DISABLE_POS  (4)
#define SYS_CTRL_CLK_32K_BT_SYS_MANUAL_DISABLE      (1<<5)
#define SYS_CTRL_CLK_32K_BT_SYS_MANUAL_DISABLE_POS  (5)
#define SYS_CTRL_CLK_26M_WIFI_SYS_MANUAL_DISABLE      (1<<6)
#define SYS_CTRL_CLK_26M_WIFI_SYS_MANUAL_DISABLE_POS  (6)
#define SYS_CTRL_CLK_52M_WIFI_SYS_MANUAL_DISABLE      (1<<7)
#define SYS_CTRL_CLK_52M_WIFI_SYS_MANUAL_DISABLE_POS  (7)
#define SYS_CTRL_CLK_32K_WIFI_SYS_MANUAL_DISABLE      (1<<8)
#define SYS_CTRL_CLK_32K_WIFI_SYS_MANUAL_DISABLE_POS  (8)
#define SYS_CTRL_CLK_FLASH_MANUAL_DISABLE      (1<<9)
#define SYS_CTRL_CLK_FLASH_MANUAL_DISABLE_POS  (9)

//aon_clk_manual_enable
#define SYS_CTRL_CLK_26M_AON_SYS_MANUAL_ENABLE      (1<<0)
#define SYS_CTRL_CLK_26M_AON_SYS_MANUAL_ENABLE_POS  (0)
#define SYS_CTRL_CLK_TIMER2_MANUAL_ENABLE      (1<<1)
#define SYS_CTRL_CLK_TIMER2_MANUAL_ENABLE_POS  (1)
#define SYS_CTRL_CLK_32K_AON_SYS_MANUAL_ENABLE      (1<<2)
#define SYS_CTRL_CLK_32K_AON_SYS_MANUAL_ENABLE_POS  (2)
#define SYS_CTRL_CLK_32K_BT_AON_MANUAL_ENABLE      (1<<3)
#define SYS_CTRL_CLK_32K_BT_AON_MANUAL_ENABLE_POS  (3)
#define SYS_CTRL_CLK_32K_WIFI_AON_MANUAL_ENABLE      (1<<4)
#define SYS_CTRL_CLK_32K_WIFI_AON_MANUAL_ENABLE_POS  (4)
#define SYS_CTRL_CLK_RTC_WDG2_MANUAL_ENABLE      (1<<5)
#define SYS_CTRL_CLK_RTC_WDG2_MANUAL_ENABLE_POS  (5)
#define SYS_CTRL_CLK_CM_RF_INTF_MANUAL_ENABLE      (1<<6)
#define SYS_CTRL_CLK_CM_RF_INTF_MANUAL_ENABLE_POS  (6)
#define SYS_CTRL_CLK_PMU_TOP_MANUAL_ENABLE      (1<<7)
#define SYS_CTRL_CLK_PMU_TOP_MANUAL_ENABLE_POS  (7)
#define SYS_CTRL_CLK_AON_PWM_MANUAL_ENABLE      (1<<8)
#define SYS_CTRL_CLK_AON_PWM_MANUAL_ENABLE_POS  (8)
#define SYS_CTRL_PCLK_SYS_CTRL_MANUAL_ENABLE      (1<<9)
#define SYS_CTRL_PCLK_SYS_CTRL_MANUAL_ENABLE_POS  (9)
#define SYS_CTRL_PCLK_TIMER2_MANUAL_ENABLE      (1<<10)
#define SYS_CTRL_PCLK_TIMER2_MANUAL_ENABLE_POS  (10)
#define SYS_CTRL_PCLK_ANALOG_REG1_MANUAL_ENABLE      (1<<11)
#define SYS_CTRL_PCLK_ANALOG_REG1_MANUAL_ENABLE_POS  (11)
#define SYS_CTRL_PCLK_PSI_MST_MANUAL_ENABLE      (1<<12)
#define SYS_CTRL_PCLK_PSI_MST_MANUAL_ENABLE_POS  (12)
#define SYS_CTRL_PCLK_IOMUX_MANUAL_ENABLE      (1<<13)
#define SYS_CTRL_PCLK_IOMUX_MANUAL_ENABLE_POS  (13)
#define SYS_CTRL_PCLK_CM_RF_INTF_MANUAL_ENABLE      (1<<14)
#define SYS_CTRL_PCLK_CM_RF_INTF_MANUAL_ENABLE_POS  (14)
#define SYS_CTRL_PCLK_PWR_CTRL_MANUAL_ENABLE      (1<<15)
#define SYS_CTRL_PCLK_PWR_CTRL_MANUAL_ENABLE_POS  (15)
#define SYS_CTRL_PCLK_AON_PWM_MANUAL_ENABLE      (1<<16)
#define SYS_CTRL_PCLK_AON_PWM_MANUAL_ENABLE_POS  (16)
#define SYS_CTRL_PCLK_WDG2_MANUAL_ENABLE      (1<<17)
#define SYS_CTRL_PCLK_WDG2_MANUAL_ENABLE_POS  (17)
#define SYS_CTRL_PCLK_WCN_AON_MANUAL_ENABLE      (1<<18)
#define SYS_CTRL_PCLK_WCN_AON_MANUAL_ENABLE_POS  (18)
#define SYS_CTRL_PCLK_AON_SYS_CTRL_MANUAL_ENABLE      (1<<19)
#define SYS_CTRL_PCLK_AON_SYS_CTRL_MANUAL_ENABLE_POS  (19)

//aon_clk_manual_disable
#define SYS_CTRL_CLK_26M_AON_SYS_MANUAL_DISABLE      (1<<0)
#define SYS_CTRL_CLK_26M_AON_SYS_MANUAL_DISABLE_POS  (0)
#define SYS_CTRL_CLK_TIMER2_MANUAL_DISABLE      (1<<1)
#define SYS_CTRL_CLK_TIMER2_MANUAL_DISABLE_POS  (1)
#define SYS_CTRL_CLK_32K_AON_SYS_MANUAL_DISABLE      (1<<2)
#define SYS_CTRL_CLK_32K_AON_SYS_MANUAL_DISABLE_POS  (2)
#define SYS_CTRL_CLK_32K_BT_AON_MANUAL_DISABLE      (1<<3)
#define SYS_CTRL_CLK_32K_BT_AON_MANUAL_DISABLE_POS  (3)
#define SYS_CTRL_CLK_32K_WIFI_AON_MANUAL_DISABLE      (1<<4)
#define SYS_CTRL_CLK_32K_WIFI_AON_MANUAL_DISABLE_POS  (4)
#define SYS_CTRL_CLK_RTC_WDG2_MANUAL_DISABLE      (1<<5)
#define SYS_CTRL_CLK_RTC_WDG2_MANUAL_DISABLE_POS  (5)
#define SYS_CTRL_CLK_CM_RF_INTF_MANUAL_DISABLE      (1<<6)
#define SYS_CTRL_CLK_CM_RF_INTF_MANUAL_DISABLE_POS  (6)
#define SYS_CTRL_CLK_PMU_TOP_MANUAL_DISABLE      (1<<7)
#define SYS_CTRL_CLK_PMU_TOP_MANUAL_DISABLE_POS  (7)
#define SYS_CTRL_CLK_AON_PWM_MANUAL_DISABLE      (1<<8)
#define SYS_CTRL_CLK_AON_PWM_MANUAL_DISABLE_POS  (8)
#define SYS_CTRL_PCLK_SYS_CTRL_MANUAL_DISABLE      (1<<9)
#define SYS_CTRL_PCLK_SYS_CTRL_MANUAL_DISABLE_POS  (9)
#define SYS_CTRL_PCLK_TIMER2_MANUAL_DISABLE      (1<<10)
#define SYS_CTRL_PCLK_TIMER2_MANUAL_DISABLE_POS  (10)
#define SYS_CTRL_PCLK_ANALOG_REG1_MANUAL_DISABLE      (1<<11)
#define SYS_CTRL_PCLK_ANALOG_REG1_MANUAL_DISABLE_POS  (11)
#define SYS_CTRL_PCLK_PSI_MST_MANUAL_DISABLE      (1<<12)
#define SYS_CTRL_PCLK_PSI_MST_MANUAL_DISABLE_POS  (12)
#define SYS_CTRL_PCLK_IOMUX_MANUAL_DISABLE      (1<<13)
#define SYS_CTRL_PCLK_IOMUX_MANUAL_DISABLE_POS  (13)
#define SYS_CTRL_PCLK_CM_RF_INTF_MANUAL_DISABLE      (1<<14)
#define SYS_CTRL_PCLK_CM_RF_INTF_MANUAL_DISABLE_POS  (14)
#define SYS_CTRL_PCLK_PWR_CTRL_MANUAL_DISABLE      (1<<15)
#define SYS_CTRL_PCLK_PWR_CTRL_MANUAL_DISABLE_POS  (15)
#define SYS_CTRL_PCLK_AON_PWM_MANUAL_DISABLE      (1<<16)
#define SYS_CTRL_PCLK_AON_PWM_MANUAL_DISABLE_POS  (16)
#define SYS_CTRL_PCLK_WDG2_MANUAL_DISABLE      (1<<17)
#define SYS_CTRL_PCLK_WDG2_MANUAL_DISABLE_POS  (17)
#define SYS_CTRL_PCLK_WCN_AON_MANUAL_DISABLE      (1<<18)
#define SYS_CTRL_PCLK_WCN_AON_MANUAL_DISABLE_POS  (18)
#define SYS_CTRL_PCLK_AON_SYS_CTRL_MANUAL_DISABLE      (1<<19)
#define SYS_CTRL_PCLK_AON_SYS_CTRL_MANUAL_DISABLE_POS  (19)

//global_soft_resetn_set
#define SYS_CTRL_GLOBAL_SOFT_RESETN_SET      (1<<0)
#define SYS_CTRL_GLOBAL_SOFT_RESETN_SET_POS  (0)

//global_soft_resetn_clr
#define SYS_CTRL_GLOBAL_SOFT_RESETN_CLEAR      (1<<0)
#define SYS_CTRL_GLOBAL_SOFT_RESETN_CLEAR_POS  (0)

//hclk_soft_resetn_set
#define SYS_CTRL_HRESETN_CPU_SYS_SET      (1<<0)
#define SYS_CTRL_HRESETN_CPU_SYS_SET_POS  (0)
#define SYS_CTRL_HRESETN_BT_SYS_SET      (1<<1)
#define SYS_CTRL_HRESETN_BT_SYS_SET_POS  (1)
#define SYS_CTRL_HRESETN_BT_FREE_SET      (1<<2)
#define SYS_CTRL_HRESETN_BT_FREE_SET_POS  (2)
#define SYS_CTRL_HRESETN_WIFI_SYS_SET      (1<<3)
#define SYS_CTRL_HRESETN_WIFI_SYS_SET_POS  (3)
#define SYS_CTRL_HRESETN_AON_MERGE_SET      (1<<4)
#define SYS_CTRL_HRESETN_AON_MERGE_SET_POS  (4)
#define SYS_CTRL_HRESETN_CPU_P_SET      (1<<5)
#define SYS_CTRL_HRESETN_CPU_P_SET_POS  (5)
#define SYS_CTRL_HRESETN_CPU_S0_SET      (1<<6)
#define SYS_CTRL_HRESETN_CPU_S0_SET_POS  (6)
#define SYS_CTRL_HRESETN_CPU_S1_SET      (1<<7)
#define SYS_CTRL_HRESETN_CPU_S1_SET_POS  (7)

//hclk_soft_resetn_clr
#define SYS_CTRL_HRESETN_CPU_SYS_CLEAR      (1<<0)
#define SYS_CTRL_HRESETN_CPU_SYS_CLEAR_POS  (0)
#define SYS_CTRL_HRESETN_BT_SYS_CLEAR      (1<<1)
#define SYS_CTRL_HRESETN_BT_SYS_CLEAR_POS  (1)
#define SYS_CTRL_HRESETN_BT_FREE_CLEAR      (1<<2)
#define SYS_CTRL_HRESETN_BT_FREE_CLEAR_POS  (2)
#define SYS_CTRL_HRESETN_WIFI_SYS_CLEAR      (1<<3)
#define SYS_CTRL_HRESETN_WIFI_SYS_CLEAR_POS  (3)
#define SYS_CTRL_HRESETN_AON_MERGE_CLEAR      (1<<4)
#define SYS_CTRL_HRESETN_AON_MERGE_CLEAR_POS  (4)
#define SYS_CTRL_HRESETN_CPU_P_CLEAR      (1<<5)
#define SYS_CTRL_HRESETN_CPU_P_CLEAR_POS  (5)
#define SYS_CTRL_HRESETN_CPU_S0_CLEAR      (1<<6)
#define SYS_CTRL_HRESETN_CPU_S0_CLEAR_POS  (6)
#define SYS_CTRL_HRESETN_CPU_S1_CLEAR      (1<<7)
#define SYS_CTRL_HRESETN_CPU_S1_CLEAR_POS  (7)

//fclk_soft_resetn_set
#define SYS_CTRL_FRESETN_CPU_SYS_SET      (1<<0)
#define SYS_CTRL_FRESETN_CPU_SYS_SET_POS  (0)

//fclk_soft_resetn_clr
#define SYS_CTRL_FRESETN_CPU_SYS_CLEAR      (1<<0)
#define SYS_CTRL_FRESETN_CPU_SYS_CLEAR_POS  (0)

//others_soft_resetn_set
#define SYS_CTRL_RESETN_26M_CPU_SYS_SET      (1<<0)
#define SYS_CTRL_RESETN_26M_CPU_SYS_SET_POS  (0)
#define SYS_CTRL_RESETN_52M_CPU_SYS_SET      (1<<1)
#define SYS_CTRL_RESETN_52M_CPU_SYS_SET_POS  (1)
#define SYS_CTRL_RESETN_32K_CPU_SYS_SET      (1<<2)
#define SYS_CTRL_RESETN_32K_CPU_SYS_SET_POS  (2)
#define SYS_CTRL_RESETN_26M_BT_SYS_SET      (1<<3)
#define SYS_CTRL_RESETN_26M_BT_SYS_SET_POS  (3)
#define SYS_CTRL_RESETN_52M_BT_SYS_SET      (1<<4)
#define SYS_CTRL_RESETN_52M_BT_SYS_SET_POS  (4)
#define SYS_CTRL_RESETN_32K_BT_SYS_SET      (1<<5)
#define SYS_CTRL_RESETN_32K_BT_SYS_SET_POS  (5)
#define SYS_CTRL_RESETN_32K_WIFI_SYS_SET      (1<<6)
#define SYS_CTRL_RESETN_32K_WIFI_SYS_SET_POS  (6)
#define SYS_CTRL_RESETN_BT_SYS_SET      (1<<14)
#define SYS_CTRL_RESETN_BT_SYS_SET_POS  (14)
#define SYS_CTRL_RESETN_WIFI_SYS_SET      (1<<15)
#define SYS_CTRL_RESETN_WIFI_SYS_SET_POS  (15)

//others_soft_resetn_clr
#define SYS_CTRL_RESETN_26M_CPU_SYS_CLEAR      (1<<0)
#define SYS_CTRL_RESETN_26M_CPU_SYS_CLEAR_POS  (0)
#define SYS_CTRL_RESETN_52M_CPU_SYS_CLEAR      (1<<1)
#define SYS_CTRL_RESETN_52M_CPU_SYS_CLEAR_POS  (1)
#define SYS_CTRL_RESETN_32K_CPU_SYS_CLEAR      (1<<2)
#define SYS_CTRL_RESETN_32K_CPU_SYS_CLEAR_POS  (2)
#define SYS_CTRL_RESETN_26M_BT_SYS_CLEAR      (1<<3)
#define SYS_CTRL_RESETN_26M_BT_SYS_CLEAR_POS  (3)
#define SYS_CTRL_RESETN_52M_BT_SYS_CLEAR      (1<<4)
#define SYS_CTRL_RESETN_52M_BT_SYS_CLEAR_POS  (4)
#define SYS_CTRL_RESETN_32K_BT_SYS_CLEAR      (1<<5)
#define SYS_CTRL_RESETN_32K_BT_SYS_CLEAR_POS  (5)
#define SYS_CTRL_RESETN_32K_WIFI_SYS_CLEAR      (1<<6)
#define SYS_CTRL_RESETN_32K_WIFI_SYS_CLEAR_POS  (6)
#define SYS_CTRL_RESETN_BT_SYS_CLEAR      (1<<14)
#define SYS_CTRL_RESETN_BT_SYS_CLEAR_POS  (14)
#define SYS_CTRL_RESETN_WIFI_SYS_CLEAR      (1<<15)
#define SYS_CTRL_RESETN_WIFI_SYS_CLEAR_POS  (15)

//aon_soft_resetn_set
#define SYS_CTRL_RESETN_26M_AON_SYS_SET      (1<<0)
#define SYS_CTRL_RESETN_26M_AON_SYS_SET_POS  (0)
#define SYS_CTRL_RESETN_TIMER2_SET      (1<<1)
#define SYS_CTRL_RESETN_TIMER2_SET_POS  (1)
#define SYS_CTRL_RESETN_32K_AON_SYS_SET      (1<<2)
#define SYS_CTRL_RESETN_32K_AON_SYS_SET_POS  (2)
#define SYS_CTRL_RESETN_32K_BT_AON_SET      (1<<3)
#define SYS_CTRL_RESETN_32K_BT_AON_SET_POS  (3)
#define SYS_CTRL_RESETN_32K_WIFI_AON_SET      (1<<4)
#define SYS_CTRL_RESETN_32K_WIFI_AON_SET_POS  (4)
#define SYS_CTRL_RESETN_RTC_WDG2_SET      (1<<5)
#define SYS_CTRL_RESETN_RTC_WDG2_SET_POS  (5)
#define SYS_CTRL_RESETN_CM_RF_INTF_SET      (1<<6)
#define SYS_CTRL_RESETN_CM_RF_INTF_SET_POS  (6)
#define SYS_CTRL_RESETN_PMU_TOP_SET      (1<<7)
#define SYS_CTRL_RESETN_PMU_TOP_SET_POS  (7)
#define SYS_CTRL_RESETN_AON_PWM_SET      (1<<8)
#define SYS_CTRL_RESETN_AON_PWM_SET_POS  (8)
#define SYS_CTRL_RESETN_PWR_CTRL_SET      (1<<9)
#define SYS_CTRL_RESETN_PWR_CTRL_SET_POS  (9)
#define SYS_CTRL_PRESETN_PMU_PSI_SLV_SET      (1<<10)
#define SYS_CTRL_PRESETN_PMU_PSI_SLV_SET_POS  (10)
#define SYS_CTRL_PRESETN_SYS_CTRL_SET      (1<<11)
#define SYS_CTRL_PRESETN_SYS_CTRL_SET_POS  (11)
#define SYS_CTRL_PRESETN_TIMER2_SET      (1<<12)
#define SYS_CTRL_PRESETN_TIMER2_SET_POS  (12)
#define SYS_CTRL_PRESETN_ANALOG_REG1_SET      (1<<13)
#define SYS_CTRL_PRESETN_ANALOG_REG1_SET_POS  (13)
#define SYS_CTRL_PRESETN_PSI_MST_SET      (1<<14)
#define SYS_CTRL_PRESETN_PSI_MST_SET_POS  (14)
#define SYS_CTRL_PRESETN_IOMUX_SET      (1<<15)
#define SYS_CTRL_PRESETN_IOMUX_SET_POS  (15)
#define SYS_CTRL_PRESETN_CM_RF_INTF_SET      (1<<16)
#define SYS_CTRL_PRESETN_CM_RF_INTF_SET_POS  (16)
#define SYS_CTRL_PRESETN_PWR_CTRL_SET      (1<<17)
#define SYS_CTRL_PRESETN_PWR_CTRL_SET_POS  (17)
#define SYS_CTRL_PRESETN_AON_PWM_SET      (1<<18)
#define SYS_CTRL_PRESETN_AON_PWM_SET_POS  (18)
#define SYS_CTRL_PRESETN_WDG2_SET       (1<<19)
#define SYS_CTRL_PRESETN_WDG2_SET_POS   (19)
#define SYS_CTRL_PRESETN_WCN_AON_SET      (1<<20)
#define SYS_CTRL_PRESETN_WCN_AON_SET_POS  (20)
#define SYS_CTRL_PRESETN_AON_SYS_CTRL_SET      (1<<21)
#define SYS_CTRL_PRESETN_AON_SYS_CTRL_SET_POS  (21)
#define SYS_CTRL_RESETN_WCN_AON_SET      (1<<31)
#define SYS_CTRL_RESETN_WCN_AON_SET_POS  (31)

//aon_soft_resetn_clr
#define SYS_CTRL_RESETN_26M_AON_SYS_CLEAR      (1<<0)
#define SYS_CTRL_RESETN_26M_AON_SYS_CLEAR_POS  (0)
#define SYS_CTRL_RESETN_TIMER2_CLEAR      (1<<1)
#define SYS_CTRL_RESETN_TIMER2_CLEAR_POS  (1)
#define SYS_CTRL_RESETN_32K_AON_SYS_CLEAR      (1<<2)
#define SYS_CTRL_RESETN_32K_AON_SYS_CLEAR_POS  (2)
#define SYS_CTRL_RESETN_32K_BT_AON_CLEAR      (1<<3)
#define SYS_CTRL_RESETN_32K_BT_AON_CLEAR_POS  (3)
#define SYS_CTRL_RESETN_32K_WIFI_AON_CLEAR      (1<<4)
#define SYS_CTRL_RESETN_32K_WIFI_AON_CLEAR_POS  (4)
#define SYS_CTRL_RESETN_RTC_WDG2_CLEAR      (1<<5)
#define SYS_CTRL_RESETN_RTC_WDG2_CLEAR_POS  (5)
#define SYS_CTRL_RESETN_CM_RF_INTF_CLEAR      (1<<6)
#define SYS_CTRL_RESETN_CM_RF_INTF_CLEAR_POS  (6)
#define SYS_CTRL_RESETN_PMU_TOP_CLEAR      (1<<7)
#define SYS_CTRL_RESETN_PMU_TOP_CLEAR_POS  (7)
#define SYS_CTRL_RESETN_AON_PWM_CLEAR      (1<<8)
#define SYS_CTRL_RESETN_AON_PWM_CLEAR_POS  (8)
#define SYS_CTRL_RESETN_PWR_CTRL_CLEAR      (1<<9)
#define SYS_CTRL_RESETN_PWR_CTRL_CLEAR_POS  (9)
#define SYS_CTRL_PRESETN_PMU_PSI_SLV_CLEAR      (1<<10)
#define SYS_CTRL_PRESETN_PMU_PSI_SLV_CLEAR_POS  (10)
#define SYS_CTRL_PRESETN_SYS_CTRL_CLEAR      (1<<11)
#define SYS_CTRL_PRESETN_SYS_CTRL_CLEAR_POS  (11)
#define SYS_CTRL_PRESETN_TIMER2_CLEAR      (1<<12)
#define SYS_CTRL_PRESETN_TIMER2_CLEAR_POS  (12)
#define SYS_CTRL_PRESETN_ANALOG_REG1_CLEAR      (1<<13)
#define SYS_CTRL_PRESETN_ANALOG_REG1_CLEAR_POS  (13)
#define SYS_CTRL_PRESETN_PSI_MST_CLEAR      (1<<14)
#define SYS_CTRL_PRESETN_PSI_MST_CLEAR_POS  (14)
#define SYS_CTRL_PRESETN_IOMUX_CLEAR      (1<<15)
#define SYS_CTRL_PRESETN_IOMUX_CLEAR_POS  (15)
#define SYS_CTRL_PRESETN_CM_RF_INTF_CLEAR      (1<<16)
#define SYS_CTRL_PRESETN_CM_RF_INTF_CLEAR_POS  (16)
#define SYS_CTRL_PRESETN_PWR_CTRL_CLEAR      (1<<17)
#define SYS_CTRL_PRESETN_PWR_CTRL_CLEAR_POS  (17)
#define SYS_CTRL_PRESETN_AON_PWM_CLEAR      (1<<18)
#define SYS_CTRL_PRESETN_AON_PWM_CLEAR_POS  (18)
#define SYS_CTRL_PRESETN_WDG2_CLEAR      (1<<19)
#define SYS_CTRL_PRESETN_WDG2_CLEAR_POS  (19)
#define SYS_CTRL_PRESETN_WCN_AON_CLEAR      (1<<20)
#define SYS_CTRL_PRESETN_WCN_AON_CLEAR_POS  (20)
#define SYS_CTRL_PRESETN_AON_SYS_CTRL_CLEAR      (1<<21)
#define SYS_CTRL_PRESETN_AON_SYS_CTRL_CLEAR_POS  (21)
#define SYS_CTRL_RESETN_WCN_AON_CLEAR      (1<<31)
#define SYS_CTRL_RESETN_WCN_AON_CLEAR_POS  (31)

//boot_mode
#define SYS_CTRL_HW_BOOT_MODE(n)        (((n)&15)<<0)
#define SYS_CTRL_HW_BOOT_MODE_LSB       (0)
#define SYS_CTRL_HW_BOOT_MODE_MASK      (15<<0)
#define SYS_CTRL_SW_BOOT_MODE(n)        (((n)&15)<<4)
#define SYS_CTRL_SW_BOOT_MODE_LSB       (4)
#define SYS_CTRL_SW_BOOT_MODE_MASK      (15<<4)

//wdg_reset_en
#define SYS_CTRL_WDG0_RST_EN            (1<<0)
#define SYS_CTRL_WDG0_RST_EN_POS        (0)
#define SYS_CTRL_WDG1_RST_EN            (1<<1)
#define SYS_CTRL_WDG1_RST_EN_POS        (1)
#define SYS_CTRL_WDG2_RST_EN            (1<<2)
#define SYS_CTRL_WDG2_RST_EN_POS        (2)
#define SYS_CTRL_CPU_P_SYSRST_EN        (1<<3)
#define SYS_CTRL_CPU_P_SYSRST_EN_POS    (3)
#define SYS_CTRL_CPU_S0_SYSRST_EN       (1<<4)
#define SYS_CTRL_CPU_S0_SYSRST_EN_POS   (4)
#define SYS_CTRL_CPU_S1_SYSRST_EN       (1<<5)
#define SYS_CTRL_CPU_S1_SYSRST_EN_POS   (5)

//reserved_reg0
#define SYS_CTRL_SW_RES_REG0(n)         (((n)&0xFFFFFFFF)<<0)
#define SYS_CTRL_SW_RES_REG0_LSB        (0)
#define SYS_CTRL_SW_RES_REG0_MASK       (0xFFFFFFFF<<0)

//reserved_reg1
#define SYS_CTRL_SW_RES_REG1(n)         (((n)&0xFFFFFFFF)<<0)
#define SYS_CTRL_SW_RES_REG1_LSB        (0)
#define SYS_CTRL_SW_RES_REG1_MASK       (0xFFFFFFFF<<0)
//sw defined fields
#define ASC_WIFIFWCTRL_XMDM_ADDR_LSB    (0)
#define ASC_WIFIFWCTRL_XMDM_ADDR_WIDTH  (24)
#define ASC_WIFIFWCTRL_XMDM_ADDR_MASK   (((0x01UL << ASC_WIFIFWCTRL_XMDM_ADDR_WIDTH) - 1) << ASC_WIFIFWCTRL_XMDM_ADDR_LSB)
#define ASC_WIFIFWCTRL_BOOT_ARG_LSB     (24)
#define ASC_WIFIFWCTRL_BOOT_ARG_WIDTH   (8)
#define ASC_WIFIFWCTRL_BOOT_ARG_MASK    (((0x01UL << ASC_WIFIFWCTRL_BOOT_ARG_WIDTH) - 1) << ASC_WIFIFWCTRL_BOOT_ARG_LSB)

//reserved_reg2
#define SYS_CTRL_SW_RES_REG2(n)         (((n)&0xFFFFFFFF)<<0)
#define SYS_CTRL_SW_RES_REG2_LSB        (0)
#define SYS_CTRL_SW_RES_REG2_MASK       (0xFFFFFFFF<<0)
//sw defined fields
#define ASC_BOOTENTRY_ADDR_LSB          (0)
#define ASC_BOOTENTRY_ADDR_WIDTH        (28)
#define ASC_BOOTENTRY_ADDR_MASK         (((0x01UL << ASC_BOOTENTRY_ADDR_WIDTH) - 1) << ASC_BOOTENTRY_ADDR_LSB)
#define ASC_BOOTENTRY_ADDR_VALID_POS    (31)
#define ASC_BOOTENTRY_ADDR_VALID_BIT    (0x01UL << ASC_BOOTENTRY_ADDR_VALID_POS)

//reserved_reg3
#define SYS_CTRL_SW_RES_REG3(n)         (((n)&0xFFFFFFFF)<<0)
#define SYS_CTRL_SW_RES_REG3_LSB        (0)
#define SYS_CTRL_SW_RES_REG3_MASK       (0xFFFFFFFF<<0)
//sw defined fields
#define ASC_BOOTSTACK_ADDR_LSB          (0)
#define ASC_BOOTSTACK_ADDR_WIDTH        (28)
#define ASC_BOOTSTACK_ADDR_MASK         (((0x01UL << ASC_BOOTSTACK_ADDR_WIDTH) - 1) << ASC_BOOTSTACK_ADDR_LSB)
#define ASC_BOOTSTACK_ADDR_VALID_POS    (31)
#define ASC_BOOTSTACK_ADDR_VALID_BIT    (0x01UL << ASC_BOOTSTACK_ADDR_VALID_POS)

//reserved_reg4
#define SYS_CTRL_SW_RES_REG4(n)         (((n)&0xFFFFFFFF)<<0)
#define SYS_CTRL_SW_RES_REG4_LSB        (0)
#define SYS_CTRL_SW_RES_REG4_MASK       (0xFFFFFFFF<<0)

//reserved_reg5
#define SYS_CTRL_SW_RES_REG5(n)         (((n)&0xFFFFFFFF)<<0)
#define SYS_CTRL_SW_RES_REG5_LSB        (0)
#define SYS_CTRL_SW_RES_REG5_MASK       (0xFFFFFFFF<<0)

//reserved_reg6
#define SYS_CTRL_SW_RES_REG6(n)         (((n)&0xFFFFFFFF)<<0)
#define SYS_CTRL_SW_RES_REG6_LSB        (0)
#define SYS_CTRL_SW_RES_REG6_MASK       (0xFFFFFFFF<<0)

//reserved_reg7
#define SYS_CTRL_SW_RES_REG7(n)         (((n)&0xFFFFFFFF)<<0)
#define SYS_CTRL_SW_RES_REG7_LSB        (0)
#define SYS_CTRL_SW_RES_REG7_MASK       (0xFFFFFFFF<<0)

//reserved_reg8
#define SYS_CTRL_SW_RES_REG8(n)         (((n)&0xFFFFFFFF)<<0)
#define SYS_CTRL_SW_RES_REG8_LSB        (0)
#define SYS_CTRL_SW_RES_REG8_MASK       (0xFFFFFFFF<<0)
//sw defined fields
#define ASC_CPUS0STACK_ADDR_LSB         (0)
#define ASC_CPUS0STACK_ADDR_WIDTH       (28)
#define ASC_CPUS0STACK_ADDR_MASK        (((0x01UL << ASC_CPUS0STACK_ADDR_WIDTH) - 1) << ASC_CPUS0STACK_ADDR_LSB)
#define ASC_CPUS0STACK_ADDR_VALID_POS   (31)
#define ASC_CPUS0STACK_ADDR_VALID_BIT   (0x01UL << ASC_CPUS0STACK_ADDR_VALID_POS)

//reserved_reg9
#define SYS_CTRL_SW_RES_REG9(n)         (((n)&0xFFFFFFFF)<<0)
#define SYS_CTRL_SW_RES_REG9_LSB        (0)
#define SYS_CTRL_SW_RES_REG9_MASK       (0xFFFFFFFF<<0)
//sw defined fields
#define ASC_CPUS0ENTRY_ADDR_LSB         (0)
#define ASC_CPUS0ENTRY_ADDR_WIDTH       (28)
#define ASC_CPUS0ENTRY_ADDR_MASK        (((0x01UL << ASC_CPUS0ENTRY_ADDR_WIDTH) - 1) << ASC_CPUS0ENTRY_ADDR_LSB)
#define ASC_CPUS0ENTRY_ADDR_VALID_POS   (31)
#define ASC_CPUS0ENTRY_ADDR_VALID_BIT   (0x01UL << ASC_CPUS0ENTRY_ADDR_VALID_POS)

//reserved_reg10
#define SYS_CTRL_SW_RES_REG10(n)        (((n)&0xFFFFFFFF)<<0)
#define SYS_CTRL_SW_RES_REG10_LSB       (0)
#define SYS_CTRL_SW_RES_REG10_MASK      (0xFFFFFFFF<<0)
//sw defined fields
#define ASC_CPUS1STACK_ADDR_LSB         (0)
#define ASC_CPUS1STACK_ADDR_WIDTH       (28)
#define ASC_CPUS1STACK_ADDR_MASK        (((0x01UL << ASC_CPUS1STACK_ADDR_WIDTH) - 1) << ASC_CPUS1STACK_ADDR_LSB)
#define ASC_CPUS1STACK_ADDR_VALID_POS   (31)
#define ASC_CPUS1STACK_ADDR_VALID_BIT   (0x01UL << ASC_CPUS1STACK_ADDR_VALID_POS)

//reserved_reg11
#define SYS_CTRL_SW_RES_REG11(n)        (((n)&0xFFFFFFFF)<<0)
#define SYS_CTRL_SW_RES_REG11_LSB       (0)
#define SYS_CTRL_SW_RES_REG11_MASK      (0xFFFFFFFF<<0)
//sw defined fields
#define ASC_CPUS1ENTRY_ADDR_LSB         (0)
#define ASC_CPUS1ENTRY_ADDR_WIDTH       (28)
#define ASC_CPUS1ENTRY_ADDR_MASK        (((0x01UL << ASC_CPUS1ENTRY_ADDR_WIDTH) - 1) << ASC_CPUS1ENTRY_ADDR_LSB)
#define ASC_CPUS1ENTRY_ADDR_VALID_POS   (31)
#define ASC_CPUS1ENTRY_ADDR_VALID_BIT   (0x01UL << ASC_CPUS1ENTRY_ADDR_VALID_POS)

//reserved_reg12
#define SYS_CTRL_SW_RES_REG12(n)        (((n)&0xFFFFFFFF)<<0)
#define SYS_CTRL_SW_RES_REG12_LSB       (0)
#define SYS_CTRL_SW_RES_REG12_MASK      (0xFFFFFFFF<<0)

//reserved_reg13
#define SYS_CTRL_SW_RES_REG13(n)        (((n)&0xFFFFFFFF)<<0)
#define SYS_CTRL_SW_RES_REG13_LSB       (0)
#define SYS_CTRL_SW_RES_REG13_MASK      (0xFFFFFFFF<<0)

//reserved_reg14
#define SYS_CTRL_SW_RES_REG14(n)        (((n)&0xFFFFFFFF)<<0)
#define SYS_CTRL_SW_RES_REG14_LSB       (0)
#define SYS_CTRL_SW_RES_REG14_MASK      (0xFFFFFFFF<<0)

//reserved_reg15
#define SYS_CTRL_SW_RES_REG15(n)        (((n)&0xFFFFFFFF)<<0)
#define SYS_CTRL_SW_RES_REG15_LSB       (0)
#define SYS_CTRL_SW_RES_REG15_MASK      (0xFFFFFFFF<<0)

/* ================================================================================ */
/* ================                  Power Control                 ================ */
/* ================================================================================ */
typedef struct {
  __IO uint32_t                          cpu_sys_pwr_ctrl;             //0x00000000
  __IO uint32_t                          bt_core_pwr_ctrl;             //0x00000004
  __IO uint32_t                          wifi_core_pwr_ctrl;           //0x00000008
  __IO uint32_t Reserved_0000000C;                    //0x0000000C
  __IO uint32_t                          pwr_sys_ctrl;                 //0x00000010
  __IO uint32_t                          pwr_off_timmer_th1;           //0x00000014
  __IO uint32_t                          pwr_off_timmer_th2;           //0x00000018
  __IO uint32_t                          pwr_ctrl_delay1;              //0x0000001C
  __IO uint32_t                          pwr_ctrl_delay2;              //0x00000020
  __IO uint32_t                          pwr_sys_delay1;               //0x00000024
  __IO uint32_t                          pwr_sys_delay2;               //0x00000028
  __IO uint32_t Reserved_0000002C;                    //0x0000002C
  __IO uint32_t                          pwr_ctrl_state1;              //0x00000030
  __IO uint32_t                          pwr_ctrl_state2;              //0x00000034
  __IO uint32_t                          pwr_ctrl_soft_mode1;          //0x00000038
  __IO uint32_t Reserved_0000003C[2];                 //0x0000003C
  __IO uint32_t                          pwr_ctrl_irq_ctrl;            //0x00000044
  __IO uint32_t                          pwr_ctrl_irq_status;          //0x00000048
  __IO uint32_t                          mm_sys_pwr_ctrl;              //0x0000004C
  __IO uint32_t                          pwr_ctrl_soft_mode2;          //0x00000050
  __IO uint32_t                          vcore_sys_pwr_ctrl;           //0x00000054
  __IO uint32_t                          pwr_off_timmer_th3;           //0x00000058
  __IO uint32_t                          pwr_ctrl_mode;                //0x0000005C
  __IO uint32_t                          ret_ram_ctrl;                 //0x00000060
  __IO uint32_t                          pwr_ctrl_monitor;             //0x00000064
  __IO uint32_t                          pwr_ctrl_soft_mode3;          //0x00000068
} AIC_PWRCTRL_TypeDef;

static AIC_PWRCTRL_TypeDef * const AIC_PWRCTRL = ((AIC_PWRCTRL_TypeDef *)AIC_PWRCTRL_BASE);

//cpu_sys_pwr_ctrl
#define PWR_CTRL_CPU_SYS_AWAKE_SRC_EN(n)      (((n)&0x3FF)<<0)
#define PWR_CTRL_CPU_SYS_AWAKE_SRC_EN_LSB     (0)
#define PWR_CTRL_CPU_SYS_AWAKE_SRC_EN_MASK    (0x3FF<<0)
#define PWR_CTRL_CPU_SYS_SLP_SRC_EN(n)      (((n)&3)<<10)
#define PWR_CTRL_CPU_SYS_SLP_SRC_EN_LSB     (10)
#define PWR_CTRL_CPU_SYS_SLP_SRC_EN_MASK    (3<<10)
#define PWR_CTRL_CPU_SYS_SLP_SOFT_REQ      (1<<12)
#define PWR_CTRL_CPU_SYS_SLP_SOFT_REQ_POS  (12)
#define PWR_CTRL_CPU_SYS_SLP_REQ_VLD_CLR      (1<<13)
#define PWR_CTRL_CPU_SYS_SLP_REQ_VLD_CLR_POS  (13)
#define PWR_CTRL_PON_HWEN_CPU_SYS       (1<<15)
#define PWR_CTRL_PON_HWEN_CPU_SYS_POS   (15)
#define PWR_CTRL_POFF_HWEN_CPU_SYS      (1<<16)
#define PWR_CTRL_POFF_HWEN_CPU_SYS_POS  (16)
#define PWR_CTRL_PON_CPU_SYS            (1<<17)
#define PWR_CTRL_PON_CPU_SYS_POS        (17)
#define PWR_CTRL_POFF_CPU_SYS           (1<<18)
#define PWR_CTRL_POFF_CPU_SYS_POS       (18)
#define PWR_CTRL_TIMER_POFF_PWR_SYS_BY_CPU_SYS_EN      (1<<19)
#define PWR_CTRL_TIMER_POFF_PWR_SYS_BY_CPU_SYS_EN_POS  (19)
#define PWR_CTRL_PWR_SYS_PON_BY_CPU_SYS_EN      (1<<20)
#define PWR_CTRL_PWR_SYS_PON_BY_CPU_SYS_EN_POS  (20)
#define PWR_CTRL_PWR_SYS_POFF_BY_CPU_SYS_EN      (1<<21)
#define PWR_CTRL_PWR_SYS_POFF_BY_CPU_SYS_EN_POS  (21)
#define PWR_CTRL_CPU_SYS_SOFT_WAKEUP_REQ      (1<<22)
#define PWR_CTRL_CPU_SYS_SOFT_WAKEUP_REQ_POS  (22)
#define PWR_CTRL_CPU_SYS_AWAKE_REQ_VLD_CLR      (1<<23)
#define PWR_CTRL_CPU_SYS_AWAKE_REQ_VLD_CLR_POS  (23)
#define PWR_CTRL_CFG_CPU_SYS_SLP_REQ_MASK(n)      (((n)&7)<<24)
#define PWR_CTRL_CFG_CPU_SYS_SLP_REQ_MASK_LSB     (24)
#define PWR_CTRL_CFG_CPU_SYS_SLP_REQ_MASK_MASK    (7<<24)
#define PWR_CTRL_CFG_WIFI_CORE_SLEP_CPU_SYS_EN      (1<<27)
#define PWR_CTRL_CFG_WIFI_CORE_SLEP_CPU_SYS_EN_POS  (27)
#define PWR_CTRL_CFG_BT_CORE_SLEP_CPU_SYS_EN      (1<<28)
#define PWR_CTRL_CFG_BT_CORE_SLEP_CPU_SYS_EN_POS  (28)
#define PWR_CTRL_BT_SYS_SLP_CPU_SYS_SOFT_REQ      (1<<29)
#define PWR_CTRL_BT_SYS_SLP_CPU_SYS_SOFT_REQ_POS  (29)
#define PWR_CTRL_WIFI_SYS_SLP_CPU_SYS_SOFT_REQ      (1<<30)
#define PWR_CTRL_WIFI_SYS_SLP_CPU_SYS_SOFT_REQ_POS  (30)
#define PWR_CTRL_CPU_SYS_AWAKE_MODE      (1<<31)
#define PWR_CTRL_CPU_SYS_AWAKE_MODE_POS  (31)

//bt_core_pwr_ctrl
#define PWR_CTRL_BT_CORE_AWAKE_SRC_EN(n)      (((n)&0x3FF)<<0)
#define PWR_CTRL_BT_CORE_AWAKE_SRC_EN_LSB     (0)
#define PWR_CTRL_BT_CORE_AWAKE_SRC_EN_MASK    (0x3FF<<0)
#define PWR_CTRL_BT_CORE_SLP_SRC_EN(n)      (((n)&3)<<10)
#define PWR_CTRL_BT_CORE_SLP_SRC_EN_LSB     (10)
#define PWR_CTRL_BT_CORE_SLP_SRC_EN_MASK    (3<<10)
#define PWR_CTRL_BT_CORE_SLP_SOFT_REQ      (1<<12)
#define PWR_CTRL_BT_CORE_SLP_SOFT_REQ_POS  (12)
#define PWR_CTRL_BT_CORE_SLP_REQ_VLD_CLR      (1<<13)
#define PWR_CTRL_BT_CORE_SLP_REQ_VLD_CLR_POS  (13)
#define PWR_CTRL_PON_HWEN_BT_CORE       (1<<15)
#define PWR_CTRL_PON_HWEN_BT_CORE_POS   (15)
#define PWR_CTRL_POFF_HWEN_BT_CORE      (1<<16)
#define PWR_CTRL_POFF_HWEN_BT_CORE_POS  (16)
#define PWR_CTRL_PON_BT_CORE            (1<<17)
#define PWR_CTRL_PON_BT_CORE_POS        (17)
#define PWR_CTRL_POFF_BT_CORE           (1<<18)
#define PWR_CTRL_POFF_BT_CORE_POS       (18)
#define PWR_CTRL_TIMER_POFF_PWR_SYS_BY_BT_CORE_EN      (1<<19)
#define PWR_CTRL_TIMER_POFF_PWR_SYS_BY_BT_CORE_EN_POS  (19)
#define PWR_CTRL_PWR_SYS_PON_BY_BT_CORE_EN      (1<<20)
#define PWR_CTRL_PWR_SYS_PON_BY_BT_CORE_EN_POS  (20)
#define PWR_CTRL_PWR_SYS_POFF_BY_BT_CORE_EN      (1<<21)
#define PWR_CTRL_PWR_SYS_POFF_BY_BT_CORE_EN_POS  (21)
#define PWR_CTRL_BT_CORE_SOFT_WAKEUP_REQ      (1<<22)
#define PWR_CTRL_BT_CORE_SOFT_WAKEUP_REQ_POS  (22)
#define PWR_CTRL_BT_CORE_AWAKE_REQ_VLD_CLR      (1<<23)
#define PWR_CTRL_BT_CORE_AWAKE_REQ_VLD_CLR_POS  (23)
#define PWR_CTRL_BT_CORE_SOFT_WAKEUP_REQ_TO_BT      (1<<24)
#define PWR_CTRL_BT_CORE_SOFT_WAKEUP_REQ_TO_BT_POS  (24)
#define PWR_CTRL_BT_CORE_HW_CLR_CPU_SYS_SLP_EN      (1<<25)
#define PWR_CTRL_BT_CORE_HW_CLR_CPU_SYS_SLP_EN_POS  (25)
#define PWR_CTRL_BT_SYS_AWAKE_MODE      (1<<26)
#define PWR_CTRL_BT_SYS_AWAKE_MODE_POS  (26)

//wifi_core_pwr_ctrl
#define PWR_CTRL_WIFI_CORE_AWAKE_SRC_EN(n)      (((n)&0x3FF)<<0)
#define PWR_CTRL_WIFI_CORE_AWAKE_SRC_EN_LSB     (0)
#define PWR_CTRL_WIFI_CORE_AWAKE_SRC_EN_MASK    (0x3FF<<0)
#define PWR_CTRL_WIFI_CORE_SLP_SRC_EN(n)      (((n)&3)<<10)
#define PWR_CTRL_WIFI_CORE_SLP_SRC_EN_LSB     (10)
#define PWR_CTRL_WIFI_CORE_SLP_SRC_EN_MASK    (3<<10)
#define PWR_CTRL_WIFI_CORE_SLP_SOFT_REQ      (1<<12)
#define PWR_CTRL_WIFI_CORE_SLP_SOFT_REQ_POS  (12)
#define PWR_CTRL_WIFI_CORE_SLP_REQ_VLD_CLR      (1<<13)
#define PWR_CTRL_WIFI_CORE_SLP_REQ_VLD_CLR_POS  (13)
#define PWR_CTRL_PON_HWEN_WIFI_CORE      (1<<15)
#define PWR_CTRL_PON_HWEN_WIFI_CORE_POS  (15)
#define PWR_CTRL_POFF_HWEN_WIFI_CORE      (1<<16)
#define PWR_CTRL_POFF_HWEN_WIFI_CORE_POS  (16)
#define PWR_CTRL_PON_WIFI_CORE          (1<<17)
#define PWR_CTRL_PON_WIFI_CORE_POS      (17)
#define PWR_CTRL_POFF_WIFI_CORE         (1<<18)
#define PWR_CTRL_POFF_WIFI_CORE_POS     (18)
#define PWR_CTRL_TIMER_POFF_PWR_SYS_BY_WIFI_CORE_EN      (1<<19)
#define PWR_CTRL_TIMER_POFF_PWR_SYS_BY_WIFI_CORE_EN_POS  (19)
#define PWR_CTRL_PWR_SYS_PON_BY_WIFI_CORE_EN      (1<<20)
#define PWR_CTRL_PWR_SYS_PON_BY_WIFI_CORE_EN_POS  (20)
#define PWR_CTRL_PWR_SYS_POFF_BY_WIFI_CORE_EN      (1<<21)
#define PWR_CTRL_PWR_SYS_POFF_BY_WIFI_CORE_EN_POS  (21)
#define PWR_CTRL_WIFI_CORE_SOFT_WAKEUP_REQ      (1<<22)
#define PWR_CTRL_WIFI_CORE_SOFT_WAKEUP_REQ_POS  (22)
#define PWR_CTRL_WIFI_CORE_AWAKE_REQ_VLD_CLR      (1<<23)
#define PWR_CTRL_WIFI_CORE_AWAKE_REQ_VLD_CLR_POS  (23)
#define PWR_CTRL_WIFI_CORE_SOFT_WAKEUP_REQ_TO_WIFI      (1<<24)
#define PWR_CTRL_WIFI_CORE_SOFT_WAKEUP_REQ_TO_WIFI_POS  (24)
#define PWR_CTRL_WIFI_CORE_HW_CLR_CPU_SYS_SLP_EN      (1<<25)
#define PWR_CTRL_WIFI_CORE_HW_CLR_CPU_SYS_SLP_EN_POS  (25)
#define PWR_CTRL_WIFI_SYS_AWAKE_MODE      (1<<26)
#define PWR_CTRL_WIFI_SYS_AWAKE_MODE_POS  (26)

//pwr_sys_ctrl
#define PWR_CTRL_DEJITTER(n)            (((n)&0xFFFF)<<0)
#define PWR_CTRL_DEJITTER_LSB           (0)
#define PWR_CTRL_DEJITTER_MASK          (0xFFFF<<0)
#define PWR_CTRL_PWR_SYS_PON_SOFT       (1<<16)
#define PWR_CTRL_PWR_SYS_PON_SOFT_POS   (16)
#define PWR_CTRL_PWR_SYS_PON_SOFT_EN      (1<<17)
#define PWR_CTRL_PWR_SYS_PON_SOFT_EN_POS  (17)
#define PWR_CTRL_PU_PLL_SOFT            (1<<18)
#define PWR_CTRL_PU_PLL_SOFT_POS        (18)
#define PWR_CTRL_PU_PLL_SOFT_EN         (1<<19)
#define PWR_CTRL_PU_PLL_SOFT_EN_POS     (19)
#define PWR_CTRL_CHIP_SLP_SOFT          (1<<20)
#define PWR_CTRL_CHIP_SLP_SOFT_POS      (20)
#define PWR_CTRL_CHIP_SLP_SOFT_EN       (1<<21)
#define PWR_CTRL_CHIP_SLP_SOFT_EN_POS   (21)
#define PWR_CTRL_CG_PLL_SOFT            (1<<22)
#define PWR_CTRL_CG_PLL_SOFT_POS        (22)
#define PWR_CTRL_CG_PLL_SOFT_EN         (1<<23)
#define PWR_CTRL_CG_PLL_SOFT_EN_POS     (23)
#define PWR_CTRL_CLK_32K_52M_SEL_SOFT      (1<<24)
#define PWR_CTRL_CLK_32K_52M_SEL_SOFT_POS  (24)
#define PWR_CTRL_CLK_32K_52M_SEL_SOFT_EN      (1<<25)
#define PWR_CTRL_CLK_32K_52M_SEL_SOFT_EN_POS  (25)
#define PWR_CTRL_CLK_32K_52M_SW_EN      (1<<26)
#define PWR_CTRL_CLK_32K_52M_SW_EN_POS  (26)
#define PWR_CTRL_PWR_SYS_POFF_HW_EN      (1<<27)
#define PWR_CTRL_PWR_SYS_POFF_HW_EN_POS  (27)
#define PWR_CTRL_XTAL_PD_EN             (1<<28)
#define PWR_CTRL_XTAL_PD_EN_POS         (28)
#define PWR_CTRL_PU_XTAL_SOFT           (1<<29)
#define PWR_CTRL_PU_XTAL_SOFT_POS       (29)
#define PWR_CTRL_PU_XTAL_SOFT_EN        (1<<30)
#define PWR_CTRL_PU_XTAL_SOFT_EN_POS    (30)
#define PWR_CTRL_CHIP_SLEEP_HW_EN       (1<<31)
#define PWR_CTRL_CHIP_SLEEP_HW_EN_POS   (31)

//pwr_off_timmer_th1
#define PWR_CTRL_CPU_SYS_TIMER_TH(n)      (((n)&0xFFFF)<<0)
#define PWR_CTRL_CPU_SYS_TIMER_TH_LSB     (0)
#define PWR_CTRL_CPU_SYS_TIMER_TH_MASK    (0xFFFF<<0)
#define PWR_CTRL_PWR_SYS_TIMER_TH(n)      (((n)&0xFFFF)<<16)
#define PWR_CTRL_PWR_SYS_TIMER_TH_LSB     (16)
#define PWR_CTRL_PWR_SYS_TIMER_TH_MASK    (0xFFFF<<16)

//pwr_off_timmer_th2
#define PWR_CTRL_WIFI_CORE_TIMER_TH(n)      (((n)&0xFFFF)<<0)
#define PWR_CTRL_WIFI_CORE_TIMER_TH_LSB     (0)
#define PWR_CTRL_WIFI_CORE_TIMER_TH_MASK    (0xFFFF<<0)
#define PWR_CTRL_BT_CORE_TIMER_TH(n)      (((n)&0xFFFF)<<16)
#define PWR_CTRL_BT_CORE_TIMER_TH_LSB     (16)
#define PWR_CTRL_BT_CORE_TIMER_TH_MASK    (0xFFFF<<16)

//pwr_ctrl_delay1
#define PWR_CTRL_PWR_CTRL_PRE_DELAY(n)      (((n)&0xFFFF)<<0)
#define PWR_CTRL_PWR_CTRL_PRE_DELAY_LSB     (0)
#define PWR_CTRL_PWR_CTRL_PRE_DELAY_MASK    (0xFFFF<<0)
#define PWR_CTRL_PWR_CTRL_DELAY(n)      (((n)&0xFFFF)<<16)
#define PWR_CTRL_PWR_CTRL_DELAY_LSB     (16)
#define PWR_CTRL_PWR_CTRL_DELAY_MASK    (0xFFFF<<16)

//pwr_ctrl_delay2
#define PWR_CTRL_PWR_CTRL_STATE_DELAY(n)      (((n)&0xFF)<<0)
#define PWR_CTRL_PWR_CTRL_STATE_DELAY_LSB     (0)
#define PWR_CTRL_PWR_CTRL_STATE_DELAY_MASK    (0xFF<<0)
#define PWR_CTRL_PWR_SYS_XTAL_CLOSE_DELAY(n)      (((n)&0xFF)<<8)
#define PWR_CTRL_PWR_SYS_XTAL_CLOSE_DELAY_LSB     (8)
#define PWR_CTRL_PWR_SYS_XTAL_CLOSE_DELAY_MASK    (0xFF<<8)
#define PWR_CTRL_PWR_SYS_XTAL_OPEN_DELAY(n)      (((n)&0xFF)<<16)
#define PWR_CTRL_PWR_SYS_XTAL_OPEN_DELAY_LSB     (16)
#define PWR_CTRL_PWR_SYS_XTAL_OPEN_DELAY_MASK    (0xFF<<16)
#define PWR_CTRL_PWR_SYS_PUPD_XTAL_DELAY(n)      (((n)&0xFF)<<24)
#define PWR_CTRL_PWR_SYS_PUPD_XTAL_DELAY_LSB     (24)
#define PWR_CTRL_PWR_SYS_PUPD_XTAL_DELAY_MASK    (0xFF<<24)

//pwr_sys_delay1
#define PWR_CTRL_PWR_SYS_DP_OPEN_DELAY(n)      (((n)&0xFF)<<0)
#define PWR_CTRL_PWR_SYS_DP_OPEN_DELAY_LSB     (0)
#define PWR_CTRL_PWR_SYS_DP_OPEN_DELAY_MASK    (0xFF<<0)
#define PWR_CTRL_PWR_SYS_DP_CLOSE_DELAY(n)      (((n)&0xFF)<<8)
#define PWR_CTRL_PWR_SYS_DP_CLOSE_DELAY_LSB     (8)
#define PWR_CTRL_PWR_SYS_DP_CLOSE_DELAY_MASK    (0xFF<<8)
#define PWR_CTRL_PWR_SYS_CG_OPEN_DELAY(n)      (((n)&0xFF)<<16)
#define PWR_CTRL_PWR_SYS_CG_OPEN_DELAY_LSB     (16)
#define PWR_CTRL_PWR_SYS_CG_OPEN_DELAY_MASK    (0xFF<<16)
#define PWR_CTRL_PWR_SYS_CG_CLOSE_DELAY(n)      (((n)&0xFF)<<24)
#define PWR_CTRL_PWR_SYS_CG_CLOSE_DELAY_LSB     (24)
#define PWR_CTRL_PWR_SYS_CG_CLOSE_DELAY_MASK    (0xFF<<24)

//pwr_sys_delay2
#define PWR_CTRL_PWR_SYS_PWR_OPEN_DELAY(n)      (((n)&0xFF)<<0)
#define PWR_CTRL_PWR_SYS_PWR_OPEN_DELAY_LSB     (0)
#define PWR_CTRL_PWR_SYS_PWR_OPEN_DELAY_MASK    (0xFF<<0)
#define PWR_CTRL_PWR_SYS_PWR_CLOSE_DELAY(n)      (((n)&0xFF)<<8)
#define PWR_CTRL_PWR_SYS_PWR_CLOSE_DELAY_LSB     (8)
#define PWR_CTRL_PWR_SYS_PWR_CLOSE_DELAY_MASK    (0xFF<<8)
#define PWR_CTRL_PWR_SYS_PLL_OPEN_DELAY(n)      (((n)&0xFF)<<16)
#define PWR_CTRL_PWR_SYS_PLL_OPEN_DELAY_LSB     (16)
#define PWR_CTRL_PWR_SYS_PLL_OPEN_DELAY_MASK    (0xFF<<16)
#define PWR_CTRL_PWR_SYS_PLL_CLOSE_DELAY(n)      (((n)&0xFF)<<24)
#define PWR_CTRL_PWR_SYS_PLL_CLOSE_DELAY_LSB     (24)
#define PWR_CTRL_PWR_SYS_PLL_CLOSE_DELAY_MASK    (0xFF<<24)

//pwr_ctrl_state1
#define PWR_CTRL_PON_STAB_WIFI_CORE      (1<<1)
#define PWR_CTRL_PON_STAB_WIFI_CORE_POS  (1)
#define PWR_CTRL_PON_STAB_BT_CORE       (1<<2)
#define PWR_CTRL_PON_STAB_BT_CORE_POS   (2)
#define PWR_CTRL_PON_STAB_CPU_SYS       (1<<3)
#define PWR_CTRL_PON_STAB_CPU_SYS_POS   (3)
#define PWR_CTRL_POFF_STAB_WIFI_CORE      (1<<5)
#define PWR_CTRL_POFF_STAB_WIFI_CORE_POS  (5)
#define PWR_CTRL_POFF_STAB_BT_CORE      (1<<6)
#define PWR_CTRL_POFF_STAB_BT_CORE_POS  (6)
#define PWR_CTRL_POFF_STAB_CPU_SYS      (1<<7)
#define PWR_CTRL_POFF_STAB_CPU_SYS_POS  (7)
#define PWR_CTRL_STATE_WIFI_CORE(n)      (((n)&15)<<8)
#define PWR_CTRL_STATE_WIFI_CORE_LSB     (8)
#define PWR_CTRL_STATE_WIFI_CORE_MASK    (15<<8)
#define PWR_CTRL_STATE_BT_CORE(n)       (((n)&15)<<12)
#define PWR_CTRL_STATE_BT_CORE_LSB      (12)
#define PWR_CTRL_STATE_BT_CORE_MASK     (15<<12)
#define PWR_CTRL_STATE_CPU_SYS(n)       (((n)&15)<<16)
#define PWR_CTRL_STATE_CPU_SYS_LSB      (16)
#define PWR_CTRL_STATE_CPU_SYS_MASK     (15<<16)
#define PWR_CTRL_WIFI_CORE_CUR_STATE(n)      (((n)&3)<<20)
#define PWR_CTRL_WIFI_CORE_CUR_STATE_LSB     (20)
#define PWR_CTRL_WIFI_CORE_CUR_STATE_MASK    (3<<20)
#define PWR_CTRL_BT_CORE_CUR_STATE(n)      (((n)&3)<<22)
#define PWR_CTRL_BT_CORE_CUR_STATE_LSB     (22)
#define PWR_CTRL_BT_CORE_CUR_STATE_MASK    (3<<22)
#define PWR_CTRL_CPU_SYS_CUR_STATE(n)      (((n)&3)<<24)
#define PWR_CTRL_CPU_SYS_CUR_STATE_LSB     (24)
#define PWR_CTRL_CPU_SYS_CUR_STATE_MASK    (3<<24)
#define PWR_CTRL_PWR_SYS_CUR_STATE(n)      (((n)&15)<<26)
#define PWR_CTRL_PWR_SYS_CUR_STATE_LSB     (26)
#define PWR_CTRL_PWR_SYS_CUR_STATE_MASK    (15<<26)
#define PWR_CTRL_VCORE_SYS_CUR_STATE(n)      (((n)&3)<<30)
#define PWR_CTRL_VCORE_SYS_CUR_STATE_LSB     (30)
#define PWR_CTRL_VCORE_SYS_CUR_STATE_MASK    (3<<30)

//pwr_ctrl_state2
#define PWR_CTRL_PON_STAB_VCORE_SYS      (1<<0)
#define PWR_CTRL_PON_STAB_VCORE_SYS_POS  (0)
#define PWR_CTRL_PON_STAB_MM_SYS        (1<<3)
#define PWR_CTRL_PON_STAB_MM_SYS_POS    (3)
#define PWR_CTRL_POFF_STAB_VCORE_SYS      (1<<4)
#define PWR_CTRL_POFF_STAB_VCORE_SYS_POS  (4)
#define PWR_CTRL_POFF_STAB_MM_SYS       (1<<7)
#define PWR_CTRL_POFF_STAB_MM_SYS_POS   (7)
#define PWR_CTRL_STATE_MM_SYS(n)        (((n)&15)<<16)
#define PWR_CTRL_STATE_MM_SYS_LSB       (16)
#define PWR_CTRL_STATE_MM_SYS_MASK      (15<<16)
#define PWR_CTRL_STATE_VCORE_SYS(n)      (((n)&15)<<20)
#define PWR_CTRL_STATE_VCORE_SYS_LSB     (20)
#define PWR_CTRL_STATE_VCORE_SYS_MASK    (15<<20)
#define PWR_CTRL_PU_PLL_O               (1<<24)
#define PWR_CTRL_PU_PLL_O_POS           (24)
#define PWR_CTRL_CG_PLL_O               (1<<25)
#define PWR_CTRL_CG_PLL_O_POS           (25)
#define PWR_CTRL_CHIP_SLP_O             (1<<26)
#define PWR_CTRL_CHIP_SLP_O_POS         (26)
#define PWR_CTRL_PWR_CTRL_PU_XTAL       (1<<27)
#define PWR_CTRL_PWR_CTRL_PU_XTAL_POS   (27)
#define PWR_CTRL_SYS_CLK_SLOW_SEL       (1<<28)
#define PWR_CTRL_SYS_CLK_SLOW_SEL_POS   (28)
#define PWR_CTRL_SLOW_CLK_SLOW_SEL      (1<<29)
#define PWR_CTRL_SLOW_CLK_SLOW_SEL_POS  (29)
#define PWR_CTRL_PWR_SYS_PON            (1<<30)
#define PWR_CTRL_PWR_SYS_PON_POS        (30)

//pwr_ctrl_soft_mode1
#define PWR_CTRL_CPU_SYS_PWR_CTRL_SOFT(n)      (((n)&0x3F)<<0)
#define PWR_CTRL_CPU_SYS_PWR_CTRL_SOFT_LSB     (0)
#define PWR_CTRL_CPU_SYS_PWR_CTRL_SOFT_MASK    (0x3F<<0)
#define PWR_CTRL_BT_CORE_PWR_CTRL_SOFT(n)      (((n)&0x3F)<<6)
#define PWR_CTRL_BT_CORE_PWR_CTRL_SOFT_LSB     (6)
#define PWR_CTRL_BT_CORE_PWR_CTRL_SOFT_MASK    (0x3F<<6)
#define PWR_CTRL_WIFI_CORE_PWR_CTRL_SOFT(n)      (((n)&0x3F)<<12)
#define PWR_CTRL_WIFI_CORE_PWR_CTRL_SOFT_LSB     (12)
#define PWR_CTRL_WIFI_CORE_PWR_CTRL_SOFT_MASK    (0x3F<<12)
#define PWR_CTRL_PWR_CTRL_CLK_32K_DIV_TH(n)      (((n)&0xFF)<<24)
#define PWR_CTRL_PWR_CTRL_CLK_32K_DIV_TH_LSB     (24)
#define PWR_CTRL_PWR_CTRL_CLK_32K_DIV_TH_MASK    (0xFF<<24)

//pwr_ctrl_irq_ctrl
#define PWR_CTRL_AWAKE_STATE_CLR(n)      (((n)&0x3FF)<<0)
#define PWR_CTRL_AWAKE_STATE_CLR_LSB     (0)
#define PWR_CTRL_AWAKE_STATE_CLR_MASK    (0x3FF<<0)
#define PWR_CTRL_SLP_STATE_CLR(n)       (((n)&15)<<10)
#define PWR_CTRL_SLP_STATE_CLR_LSB      (10)
#define PWR_CTRL_SLP_STATE_CLR_MASK     (15<<10)
#define PWR_CTRL_AWAKE_STATE_MASK(n)      (((n)&0x3FF)<<16)
#define PWR_CTRL_AWAKE_STATE_MASK_LSB     (16)
#define PWR_CTRL_AWAKE_STATE_MASK_MASK    (0x3FF<<16)
#define PWR_CTRL_SLP_STATE_MASK(n)      (((n)&15)<<26)
#define PWR_CTRL_SLP_STATE_MASK_LSB     (26)
#define PWR_CTRL_SLP_STATE_MASK_MASK    (15<<26)
#define PWR_CTRL_PWR_CTRL_IRQ_EN        (1<<31)
#define PWR_CTRL_PWR_CTRL_IRQ_EN_POS    (31)

//pwr_ctrl_irq_status
#define PWR_CTRL_AWAKE_POS_PULSE_RAW_STATE(n)      (((n)&0x3FF)<<0)
#define PWR_CTRL_AWAKE_POS_PULSE_RAW_STATE_LSB     (0)
#define PWR_CTRL_AWAKE_POS_PULSE_RAW_STATE_MASK    (0x3FF<<0)
#define PWR_CTRL_SLP_POS_PULSE_RAW_STATE(n)      (((n)&15)<<10)
#define PWR_CTRL_SLP_POS_PULSE_RAW_STATE_LSB     (10)
#define PWR_CTRL_SLP_POS_PULSE_RAW_STATE_MASK    (15<<10)
#define PWR_CTRL_VCORE_SYS_AWAKE_RAW_STATUS      (1<<14)
#define PWR_CTRL_VCORE_SYS_AWAKE_RAW_STATUS_POS  (14)
#define PWR_CTRL_CPU_SYS_AWAKE_RAW_STATUS      (1<<15)
#define PWR_CTRL_CPU_SYS_AWAKE_RAW_STATUS_POS  (15)
#define PWR_CTRL_AWAKE_POS_PULSE_STATE_MASKED(n)      (((n)&0x3FF)<<16)
#define PWR_CTRL_AWAKE_POS_PULSE_STATE_MASKED_LSB     (16)
#define PWR_CTRL_AWAKE_POS_PULSE_STATE_MASKED_MASK    (0x3FF<<16)
#define PWR_CTRL_SLP_POS_PULSE_STATE_MASKED(n)      (((n)&15)<<26)
#define PWR_CTRL_SLP_POS_PULSE_STATE_MASKED_LSB     (26)
#define PWR_CTRL_SLP_POS_PULSE_STATE_MASKED_MASK    (15<<26)
#define PWR_CTRL_BT_CORE_AWAKE_RAW_STATUS      (1<<30)
#define PWR_CTRL_BT_CORE_AWAKE_RAW_STATUS_POS  (30)
#define PWR_CTRL_WIFI_CORE_AWAKE_RAW_STATUS      (1<<31)
#define PWR_CTRL_WIFI_CORE_AWAKE_RAW_STATUS_POS  (31)

//mm_sys_pwr_ctrl
#define PWR_CTRL_PON_MM_SYS             (1<<17)
#define PWR_CTRL_PON_MM_SYS_POS         (17)
#define PWR_CTRL_POFF_MM_SYS            (1<<18)
#define PWR_CTRL_POFF_MM_SYS_POS        (18)

//pwr_ctrl_soft_mode2
#define PWR_CTRL_MM_SYS_PWR_CTRL_SOFT(n)      (((n)&0x3F)<<0)
#define PWR_CTRL_MM_SYS_PWR_CTRL_SOFT_LSB     (0)
#define PWR_CTRL_MM_SYS_PWR_CTRL_SOFT_MASK    (0x3F<<0)
#define PWR_CTRL_VCORE_SYS_PWR_CTRL_SOFT(n)      (((n)&0x3F)<<6)
#define PWR_CTRL_VCORE_SYS_PWR_CTRL_SOFT_LSB     (6)
#define PWR_CTRL_VCORE_SYS_PWR_CTRL_SOFT_MASK    (0x3F<<6)
#define PWR_CTRL_SLP_MODE_SEL_BT_CORE      (1<<14)
#define PWR_CTRL_SLP_MODE_SEL_BT_CORE_POS  (14)
#define PWR_CTRL_SLP_MODE_SEL_CPU_SYS      (1<<15)
#define PWR_CTRL_SLP_MODE_SEL_CPU_SYS_POS  (15)
#define PWR_CTRL_SLP_MODE_SEL_MM_SYS      (1<<16)
#define PWR_CTRL_SLP_MODE_SEL_MM_SYS_POS  (16)
#define PWR_CTRL_SLP_MODE_SEL_VCORE_SYS      (1<<17)
#define PWR_CTRL_SLP_MODE_SEL_VCORE_SYS_POS  (17)
#define PWR_CTRL_SLP_MODE_SEL_WIFI_CORE      (1<<18)
#define PWR_CTRL_SLP_MODE_SEL_WIFI_CORE_POS  (18)
#define PWR_CTRL_CPU_SYS_SLP_REQ_MASK_D(n)      (((n)&7)<<19)
#define PWR_CTRL_CPU_SYS_SLP_REQ_MASK_D_LSB     (19)
#define PWR_CTRL_CPU_SYS_SLP_REQ_MASK_D_MASK    (7<<19)
#define PWR_CTRL_CFG_IO_MMSYS_EN_SOFT      (1<<22)
#define PWR_CTRL_CFG_IO_MMSYS_EN_SOFT_POS  (22)
#define PWR_CTRL_CFG_IO_MMSYS_EN        (1<<23)
#define PWR_CTRL_CFG_IO_MMSYS_EN_POS    (23)
#define PWR_CTRL_CFG_IO_CPUSYS_EN_SOFT      (1<<24)
#define PWR_CTRL_CFG_IO_CPUSYS_EN_SOFT_POS  (24)
#define PWR_CTRL_CFG_IO_CPUSYS_EN       (1<<25)
#define PWR_CTRL_CFG_IO_CPUSYS_EN_POS   (25)
#define PWR_CTRL_RTC_SLP_OUT_DONE_MODE_EN      (1<<26)
#define PWR_CTRL_RTC_SLP_OUT_DONE_MODE_EN_POS  (26)

//vcore_sys_pwr_ctrl
#define PWR_CTRL_VCORE_SYS_AWAKE_SRC_EN(n)      (((n)&0x3FF)<<0)
#define PWR_CTRL_VCORE_SYS_AWAKE_SRC_EN_LSB     (0)
#define PWR_CTRL_VCORE_SYS_AWAKE_SRC_EN_MASK    (0x3FF<<0)
#define PWR_CTRL_VCORE_SYS_SLP_SRC_EN(n)      (((n)&3)<<10)
#define PWR_CTRL_VCORE_SYS_SLP_SRC_EN_LSB     (10)
#define PWR_CTRL_VCORE_SYS_SLP_SRC_EN_MASK    (3<<10)
#define PWR_CTRL_VCORE_SYS_SLP_SOFT_REQ      (1<<12)
#define PWR_CTRL_VCORE_SYS_SLP_SOFT_REQ_POS  (12)
#define PWR_CTRL_VCORE_SYS_SLP_REQ_VLD_CLR      (1<<13)
#define PWR_CTRL_VCORE_SYS_SLP_REQ_VLD_CLR_POS  (13)
#define PWR_CTRL_PON_HWEN_VCORE_SYS      (1<<15)
#define PWR_CTRL_PON_HWEN_VCORE_SYS_POS  (15)
#define PWR_CTRL_POFF_HWEN_VCORE_SYS      (1<<16)
#define PWR_CTRL_POFF_HWEN_VCORE_SYS_POS  (16)
#define PWR_CTRL_PON_VCORE_SYS          (1<<17)
#define PWR_CTRL_PON_VCORE_SYS_POS      (17)
#define PWR_CTRL_POFF_VCORE_SYS         (1<<18)
#define PWR_CTRL_POFF_VCORE_SYS_POS     (18)
#define PWR_CTRL_TIMER_POFF_PWR_SYS_BY_VCORE_SYS_EN      (1<<19)
#define PWR_CTRL_TIMER_POFF_PWR_SYS_BY_VCORE_SYS_EN_POS  (19)
#define PWR_CTRL_PWR_SYS_PON_BY_VCORE_SYS_EN      (1<<20)
#define PWR_CTRL_PWR_SYS_PON_BY_VCORE_SYS_EN_POS  (20)
#define PWR_CTRL_PWR_SYS_POFF_BY_VCORE_SYS_EN      (1<<21)
#define PWR_CTRL_PWR_SYS_POFF_BY_VCORE_SYS_EN_POS  (21)
#define PWR_CTRL_VCORE_SYS_SOFT_WAKEUP_REQ      (1<<22)
#define PWR_CTRL_VCORE_SYS_SOFT_WAKEUP_REQ_POS  (22)
#define PWR_CTRL_VCORE_SYS_AWAKE_REQ_VLD_CLR      (1<<23)
#define PWR_CTRL_VCORE_SYS_AWAKE_REQ_VLD_CLR_POS  (23)
#define PWR_CTRL_VCORE_SYS_AWAKE_MODE      (1<<24)
#define PWR_CTRL_VCORE_SYS_AWAKE_MODE_POS  (24)

//pwr_off_timmer_th3
#define PWR_CTRL_VCORE_SYS_TIMER_TH(n)      (((n)&0xFFFF)<<0)
#define PWR_CTRL_VCORE_SYS_TIMER_TH_LSB     (0)
#define PWR_CTRL_VCORE_SYS_TIMER_TH_MASK    (0xFFFF<<0)

//pwr_ctrl_mode
#define PWR_CTRL_PWR_CTRL_MODE(n)       (((n)&0x7FFFFFFF)<<0)
#define PWR_CTRL_PWR_CTRL_MODE_LSB      (0)
#define PWR_CTRL_PWR_CTRL_MODE_MASK     (0x7FFFFFFF<<0)
#define PWR_CTRL_PWR_CTRL_MODE_UPDATE      (1<<31)
#define PWR_CTRL_PWR_CTRL_MODE_UPDATE_POS  (31)
//sw defined fields
#define PC_PWRMD_CPUSYS_SW_RECORD_LSB   (0)
#define PC_PWRMD_CPUSYS_SW_RECORD_WIDTH (2)
#define PC_PWRMD_CPUSYS_SW_RECORD_MASK  (((0x01UL << PC_PWRMD_CPUSYS_SW_RECORD_WIDTH) - 1) << PC_PWRMD_CPUSYS_SW_RECORD_LSB)
#define PC_PWRMD_FLASH_SMPLDLY_LSB      (2)
#define PC_PWRMD_FLASH_SMPLDLY_WIDTH    (3)
#define PC_PWRMD_FLASH_SMPLDLY_MASK     (((0x01UL << PC_PWRMD_FLASH_SMPLDLY_WIDTH) - 1) << PC_PWRMD_FLASH_SMPLDLY_LSB)
#define PC_PWRMD_FLASH_CLKSEL_FAST_POS  (5)
#define PC_PWRMD_FLASH_CLKSEL_FAST_BIT  (0x01UL << PC_PWRMD_FLASH_CLKSEL_FAST_POS)
#define PC_PWRMD_FLASH_CLKDIV_LSB       (6)
#define PC_PWRMD_FLASH_CLKDIV_WIDTH     (8)
#define PC_PWRMD_FLASH_CLKDIV_MASK      (((0x01UL << PC_PWRMD_FLASH_CLKDIV_WIDTH) - 1) << PC_PWRMD_FLASH_CLKDIV_LSB)
#define PC_PWRMD_PCLKDIV_DENOM_LSB      (14)
#define PC_PWRMD_PCLKDIV_DENOM_WIDTH    (8)
#define PC_PWRMD_PCLKDIV_DENOM_MASK     (((0x01UL << PC_PWRMD_PCLKDIV_DENOM_WIDTH) - 1) << PC_PWRMD_PCLKDIV_DENOM_LSB)

//ret_ram_ctrl
#define PWR_CTRL_CFG_RET_CTRL_CPU_SYS_RAM(n)      (((n)&15)<<0)
#define PWR_CTRL_CFG_RET_CTRL_CPU_SYS_RAM_LSB     (0)
#define PWR_CTRL_CFG_RET_CTRL_CPU_SYS_RAM_MASK    (15<<0)
#define PWR_CTRL_CFG_PWR_MUX_CPU_SYS_LRAM(n)      (((n)&15)<<4)
#define PWR_CTRL_CFG_PWR_MUX_CPU_SYS_LRAM_LSB     (4)
#define PWR_CTRL_CFG_PWR_MUX_CPU_SYS_LRAM_MASK    (15<<4)
#define PWR_CTRL_CFG_PWR_MUX_CPU_SYS_HRAM(n)      (((n)&15)<<8)
#define PWR_CTRL_CFG_PWR_MUX_CPU_SYS_HRAM_LSB     (8)
#define PWR_CTRL_CFG_PWR_MUX_CPU_SYS_HRAM_MASK    (15<<8)
#define PWR_CTRL_CFG_RET_CTRL_WIFI_CORE_RAM(n)      (((n)&15)<<12)
#define PWR_CTRL_CFG_RET_CTRL_WIFI_CORE_RAM_LSB     (12)
#define PWR_CTRL_CFG_RET_CTRL_WIFI_CORE_RAM_MASK    (15<<12)
#define PWR_CTRL_CFG_PWR_MUX_WIFI_CORE_RAM(n)      (((n)&15)<<16)
#define PWR_CTRL_CFG_PWR_MUX_WIFI_CORE_RAM_LSB     (16)
#define PWR_CTRL_CFG_PWR_MUX_WIFI_CORE_RAM_MASK    (15<<16)
#define PWR_CTRL_CFG_RET_CTRL_BT_CORE_RAM(n)      (((n)&15)<<20)
#define PWR_CTRL_CFG_RET_CTRL_BT_CORE_RAM_LSB     (20)
#define PWR_CTRL_CFG_RET_CTRL_BT_CORE_RAM_MASK    (15<<20)
#define PWR_CTRL_CFG_PWR_MUX_BT_CORE_RAM(n)      (((n)&15)<<24)
#define PWR_CTRL_CFG_PWR_MUX_BT_CORE_RAM_LSB     (24)
#define PWR_CTRL_CFG_PWR_MUX_BT_CORE_RAM_MASK    (15<<24)

//pwr_ctrl_monitor
#define PWR_CTRL_PWR_CTRL_DBG_MUX(n)      (((n)&15)<<0)
#define PWR_CTRL_PWR_CTRL_DBG_MUX_LSB     (0)
#define PWR_CTRL_PWR_CTRL_DBG_MUX_MASK    (15<<0)
#define PWR_CTRL_SLP_REQ_SEL(n)         (((n)&15)<<4)
#define PWR_CTRL_SLP_REQ_SEL_LSB        (4)
#define PWR_CTRL_SLP_REQ_SEL_MASK       (15<<4)
#define PWR_CTRL_AWAKE_REQ_MASK(n)      (((n)&15)<<8)
#define PWR_CTRL_AWAKE_REQ_MASK_LSB     (8)
#define PWR_CTRL_AWAKE_REQ_MASK_MASK    (15<<8)
#define PWR_CTRL_AWAKE_REQ_RAW_CLR(n)      (((n)&15)<<12)
#define PWR_CTRL_AWAKE_REQ_RAW_CLR_LSB     (12)
#define PWR_CTRL_AWAKE_REQ_RAW_CLR_MASK    (15<<12)
#define PWR_CTRL_AWAKE_VLD_STATE_MASKED(n)      (((n)&15)<<16)
#define PWR_CTRL_AWAKE_VLD_STATE_MASKED_LSB     (16)
#define PWR_CTRL_AWAKE_VLD_STATE_MASKED_MASK    (15<<16)
#define PWR_CTRL_AWAKE_REQ_SEL(n)       (((n)&15)<<20)
#define PWR_CTRL_AWAKE_REQ_SEL_LSB      (20)
#define PWR_CTRL_AWAKE_REQ_SEL_MASK     (15<<20)

//pwr_ctrl_soft_mode3
#define PWR_CTRL_BT_COREON_SOFT(n)      (((n)&3)<<0)
#define PWR_CTRL_BT_COREON_SOFT_LSB     (0)
#define PWR_CTRL_BT_COREON_SOFT_MASK    (3<<0)
#define PWR_CTRL_BT_HOLD_SOFT(n)        (((n)&3)<<2)
#define PWR_CTRL_BT_HOLD_SOFT_LSB       (2)
#define PWR_CTRL_BT_HOLD_SOFT_MASK      (3<<2)
#define PWR_CTRL_WF_COREON_SOFT(n)      (((n)&3)<<4)
#define PWR_CTRL_WF_COREON_SOFT_LSB     (4)
#define PWR_CTRL_WF_COREON_SOFT_MASK    (3<<4)
#define PWR_CTRL_WF_HOLD_SOFT(n)        (((n)&3)<<6)
#define PWR_CTRL_WF_HOLD_SOFT_LSB       (6)
#define PWR_CTRL_WF_HOLD_SOFT_MASK      (3<<6)
#define PWR_CTRL_CPU_COREON_SOFT(n)      (((n)&3)<<8)
#define PWR_CTRL_CPU_COREON_SOFT_LSB     (8)
#define PWR_CTRL_CPU_COREON_SOFT_MASK    (3<<8)
#define PWR_CTRL_CPU_HOLD_SOFT(n)       (((n)&3)<<10)
#define PWR_CTRL_CPU_HOLD_SOFT_LSB      (10)
#define PWR_CTRL_CPU_HOLD_SOFT_MASK     (3<<10)
#define PWR_CTRL_MM_COREON_SOFT(n)      (((n)&3)<<12)
#define PWR_CTRL_MM_COREON_SOFT_LSB     (12)
#define PWR_CTRL_MM_COREON_SOFT_MASK    (3<<12)
#define PWR_CTRL_MM_HOLD_SOFT(n)        (((n)&3)<<14)
#define PWR_CTRL_MM_HOLD_SOFT_LSB       (14)
#define PWR_CTRL_MM_HOLD_SOFT_MASK      (3<<14)
#define PWR_CTRL_TOP_COREON_SOFT(n)      (((n)&3)<<16)
#define PWR_CTRL_TOP_COREON_SOFT_LSB     (16)
#define PWR_CTRL_TOP_COREON_SOFT_MASK    (3<<16)
#define PWR_CTRL_TOP_HOLD_SOFT(n)       (((n)&3)<<18)
#define PWR_CTRL_TOP_HOLD_SOFT_LSB      (18)
#define PWR_CTRL_TOP_HOLD_SOFT_MASK     (3<<18)
#define PWR_CTRL_CM_COREON_SOFT(n)      (((n)&7)<<20)
#define PWR_CTRL_CM_COREON_SOFT_LSB     (20)
#define PWR_CTRL_CM_COREON_SOFT_MASK    (7<<20)
#define PWR_CTRL_CFG_RG_IRQ_TIMER2_H_AWAKE_EN(n)      (((n)&15)<<23)
#define PWR_CTRL_CFG_RG_IRQ_TIMER2_H_AWAKE_EN_LSB     (23)
#define PWR_CTRL_CFG_RG_IRQ_TIMER2_H_AWAKE_EN_MASK    (15<<23)
#define PWR_CTRL_CFG_RG_IRQ_UART_H_AWAKE_EN(n)      (((n)&15)<<27)
#define PWR_CTRL_CFG_RG_IRQ_UART_H_AWAKE_EN_LSB     (27)
#define PWR_CTRL_CFG_RG_IRQ_UART_H_AWAKE_EN_MASK    (15<<27)

// CPU_SYSCTRL
__STATIC_INLINE uint8_t cpusysctrl_cachebp_cache_bypass_getb(void)
{
    return (AIC_CPUSYSCTRL->cache_bypass & CPU_SYS_CTRL_CFG_CACHE_BYPASS) >> CPU_SYS_CTRL_CFG_CACHE_BYPASS_POS;
}

__STATIC_INLINE void cpusysctrl_cachebp_cache_bypass_setb(void)
{
    AIC_CPUSYSCTRL->cache_bypass |=  CPU_SYS_CTRL_CFG_CACHE_BYPASS;
}

__STATIC_INLINE void cpusysctrl_cachebp_cache_bypass_clrb(void)
{
    AIC_CPUSYSCTRL->cache_bypass &= ~CPU_SYS_CTRL_CFG_CACHE_BYPASS;
}

__STATIC_INLINE uint8_t cpusysctrl_cachebp_burst_incr_only_en_getb(void)
{
    return (AIC_CPUSYSCTRL->cache_bypass & CPU_SYS_CTRL_CFG_BURST_INCR_ONLY_EN) >> CPU_SYS_CTRL_CFG_BURST_INCR_ONLY_EN_POS;
}

__STATIC_INLINE void cpusysctrl_cachebp_burst_incr_only_en_setb(void)
{
    AIC_CPUSYSCTRL->cache_bypass |=  CPU_SYS_CTRL_CFG_BURST_INCR_ONLY_EN;
}

__STATIC_INLINE void cpusysctrl_cachebp_burst_incr_only_en_clrb(void)
{
    AIC_CPUSYSCTRL->cache_bypass &= ~CPU_SYS_CTRL_CFG_BURST_INCR_ONLY_EN;
}

__STATIC_INLINE uint8_t cpusysctrl_pclkdiv_denom_getf(void)
{
    return ((AIC_CPUSYSCTRL->pclk_div & CPU_SYS_CTRL_CFG_PCLK_DIV_DENOM_MASK) >> CPU_SYS_CTRL_CFG_PCLK_DIV_DENOM_LSB);
}

__STATIC_INLINE void cpusysctrl_pclkdiv_denom_setf(uint8_t div_denom)
{
    uint32_t local_val = AIC_CPUSYSCTRL->pclk_div & ~(CPU_SYS_CTRL_CFG_PCLK_DIV_DENOM_MASK);
    AIC_CPUSYSCTRL->pclk_div = local_val | CPU_SYS_CTRL_CFG_PCLK_DIV_DENOM(div_denom) | CPU_SYS_CTRL_CFG_PCLK_DIV_UPDATE;
}

__STATIC_INLINE uint32_t cpusysctrl_hclkme_get()
{
    return AIC_CPUSYSCTRL->hclk_manual_enable;
}

__STATIC_INLINE void cpusysctrl_hclkme_set(uint32_t enable_bits)
{
    AIC_CPUSYSCTRL->hclk_manual_enable = enable_bits;
}

__STATIC_INLINE uint32_t cpusysctrl_hclkmd_get()
{
    return AIC_CPUSYSCTRL->hclk_manual_disable;
}

__STATIC_INLINE void cpusysctrl_hclkmd_set(uint32_t disable_bits)
{
    AIC_CPUSYSCTRL->hclk_manual_disable = disable_bits;
}

__STATIC_INLINE uint32_t cpusysctrl_hclk1me_get()
{
    return AIC_CPUSYSCTRL->hclk1_manual_enable;
}

__STATIC_INLINE void cpusysctrl_hclk1me_set(uint32_t enable_bits)
{
    AIC_CPUSYSCTRL->hclk1_manual_enable = enable_bits;
}

__STATIC_INLINE uint32_t cpusysctrl_hclk1md_get()
{
    return AIC_CPUSYSCTRL->hclk1_manual_disable;
}

__STATIC_INLINE void cpusysctrl_hclk1md_set(uint32_t disable_bits)
{
    AIC_CPUSYSCTRL->hclk1_manual_disable = disable_bits;
}

__STATIC_INLINE uint32_t cpusysctrl_pclkme_get()
{
    return AIC_CPUSYSCTRL->pclk_manual_enable;
}

__STATIC_INLINE void cpusysctrl_pclkme_set(uint32_t enable_bits)
{
    AIC_CPUSYSCTRL->pclk_manual_enable = enable_bits;
}

__STATIC_INLINE uint32_t cpusysctrl_pclkmd_get()
{
    return AIC_CPUSYSCTRL->pclk_manual_disable;
}

__STATIC_INLINE void cpusysctrl_pclkmd_set(uint32_t disable_bits)
{
    AIC_CPUSYSCTRL->pclk_manual_disable = disable_bits;
}

__STATIC_INLINE uint32_t cpusysctrl_oclkme_get()
{
    return AIC_CPUSYSCTRL->others_manual_enable;
}

__STATIC_INLINE void cpusysctrl_oclkme_set(uint32_t enable_bits)
{
    AIC_CPUSYSCTRL->others_manual_enable = enable_bits;
}

__STATIC_INLINE uint32_t cpusysctrl_oclkmd_get()
{
    return AIC_CPUSYSCTRL->others_manual_disable;
}

__STATIC_INLINE void cpusysctrl_oclkmd_set(uint32_t disable_bits)
{
    AIC_CPUSYSCTRL->others_manual_disable = disable_bits;
}

__STATIC_INLINE uint32_t cpusysctrl_hclkrs_get()
{
    return AIC_CPUSYSCTRL->hclk_soft_resetn_set;
}

__STATIC_INLINE void cpusysctrl_hclkrs_set(uint32_t reset_bits)
{
    AIC_CPUSYSCTRL->hclk_soft_resetn_set = reset_bits;
}

__STATIC_INLINE uint32_t cpusysctrl_hclkrc_get()
{
    return AIC_CPUSYSCTRL->hclk_soft_resetn_clr;
}

__STATIC_INLINE void cpusysctrl_hclkrc_set(uint32_t reset_bits)
{
    AIC_CPUSYSCTRL->hclk_soft_resetn_clr = reset_bits;
}

__STATIC_INLINE uint32_t cpusysctrl_hclk1rs_get()
{
    return AIC_CPUSYSCTRL->hclk1_soft_resetn_set;
}

__STATIC_INLINE void cpusysctrl_hclk1rs_set(uint32_t reset_bits)
{
    AIC_CPUSYSCTRL->hclk1_soft_resetn_set = reset_bits;
}

__STATIC_INLINE uint32_t cpusysctrl_hclk1rc_get()
{
    return AIC_CPUSYSCTRL->hclk1_soft_resetn_clr;
}

__STATIC_INLINE void cpusysctrl_hclk1rc_set(uint32_t reset_bits)
{
    AIC_CPUSYSCTRL->hclk1_soft_resetn_clr = reset_bits;
}

__STATIC_INLINE uint32_t cpusysctrl_pclkrs_get()
{
    return AIC_CPUSYSCTRL->pclk_soft_resetn_set;
}

__STATIC_INLINE void cpusysctrl_pclkrs_set(uint32_t reset_bits)
{
    AIC_CPUSYSCTRL->pclk_soft_resetn_set = reset_bits;
}

__STATIC_INLINE uint32_t cpusysctrl_pclkrc_get()
{
    return AIC_CPUSYSCTRL->pclk_soft_resetn_clr;
}

__STATIC_INLINE void cpusysctrl_pclkrc_set(uint32_t reset_bits)
{
    AIC_CPUSYSCTRL->pclk_soft_resetn_clr = reset_bits;
}

__STATIC_INLINE uint32_t cpusysctrl_oclkrs_get()
{
    return AIC_CPUSYSCTRL->others_soft_resetn_set;
}

__STATIC_INLINE void cpusysctrl_oclkrs_set(uint32_t reset_bits)
{
    AIC_CPUSYSCTRL->others_soft_resetn_set = reset_bits;
}

__STATIC_INLINE void cpusysctrl_oclkrs_usbcset_setb(void)
{
    AIC_CPUSYSCTRL->others_soft_resetn_set = CPU_SYS_CTRL_RESETN_USBC_SET;
}

__STATIC_INLINE uint32_t cpusysctrl_oclkrc_get()
{
    return AIC_CPUSYSCTRL->others_soft_resetn_clr;
}

__STATIC_INLINE void cpusysctrl_oclkrc_set(uint32_t reset_bits)
{
    AIC_CPUSYSCTRL->others_soft_resetn_clr = reset_bits;
}

__STATIC_INLINE void cpusysctrl_oclkrc_usbcclr_setb(void)
{
    AIC_CPUSYSCTRL->others_soft_resetn_clr = CPU_SYS_CTRL_RESETN_USBC_CLEAR;
}

// MM_SYSCTRL

// AON_SYSCTRL
__STATIC_INLINE uint16_t aonsysctrl_chipid_chip_id_getf(void)
{
    return ((AIC_AONSYSCTRL->chip_id & SYS_CTRL_CHIP_ID(0xFFFF)) >> SYS_CTRL_CHIP_ID_LSB);
}

__STATIC_INLINE uint8_t aonsysctrl_chipid_metal_id_getf(void)
{
    return ((AIC_AONSYSCTRL->chip_id & SYS_CTRL_METAL_ID(0xFF)) >> SYS_CTRL_METAL_ID_LSB);
}

__STATIC_INLINE uint8_t aonsysctrl_chipid_bond_id_getf(void)
{
    return ((AIC_AONSYSCTRL->chip_id & SYS_CTRL_BOND_ID(0xFF)) >> SYS_CTRL_BOND_ID_LSB);
}

__STATIC_INLINE uint32_t aonsysctrl_top_clksel_get(void)
{
    return AIC_AONSYSCTRL->top_clk_sel;
}

__STATIC_INLINE void aonsysctrl_top_clksel_set(uint32_t clk_sel)
{
    AIC_AONSYSCTRL->top_clk_sel = clk_sel;
}

__STATIC_INLINE uint8_t aonsysctrl_fast_clk_getb(void)
{
    return (AIC_AONSYSCTRL->top_clk_sel & SYS_CTRL_CFG_TOP_FAST_SEL) >> SYS_CTRL_CFG_TOP_FAST_SEL_POS;
}

__STATIC_INLINE void aonsysctrl_fast_clk_setb(void)
{
    AIC_AONSYSCTRL->top_clk_sel |=  SYS_CTRL_CFG_TOP_FAST_SEL;
}

__STATIC_INLINE void aonsysctrl_fast_clk_clrb(void)
{
    AIC_AONSYSCTRL->top_clk_sel &= ~SYS_CTRL_CFG_TOP_FAST_SEL;
}

__STATIC_INLINE uint8_t aonsysctrl_pll_320m_getb(void)
{
    return (AIC_AONSYSCTRL->top_clk_sel & SYS_CTRL_CFG_TOP_PLL_480M_SEL) >> SYS_CTRL_CFG_TOP_PLL_480M_SEL_POS;
}

__STATIC_INLINE void aonsysctrl_pll_320m_setb(void)
{
    AIC_AONSYSCTRL->top_clk_sel |=  SYS_CTRL_CFG_TOP_PLL_480M_SEL;
}

__STATIC_INLINE void aonsysctrl_pll_320m_clrb(void)
{
    AIC_AONSYSCTRL->top_clk_sel &= ~SYS_CTRL_CFG_TOP_PLL_480M_SEL;
}

__STATIC_INLINE uint8_t aonsysctrl_psrclksel_fast_getb(void)
{
    return (AIC_AONSYSCTRL->top_clk_sel & SYS_CTRL_CFG_TOP_PSRAM_CLK_FAST_SEL) >> SYS_CTRL_CFG_TOP_PSRAM_CLK_FAST_SEL_POS;
}

__STATIC_INLINE void aonsysctrl_psrclksel_fast_setb(void)
{
    AIC_AONSYSCTRL->top_clk_sel |=  SYS_CTRL_CFG_TOP_PSRAM_CLK_FAST_SEL;
}

__STATIC_INLINE void aonsysctrl_psrclksel_fast_clrb(void)
{
    AIC_AONSYSCTRL->top_clk_sel &= ~SYS_CTRL_CFG_TOP_PSRAM_CLK_FAST_SEL;
}

__STATIC_INLINE uint8_t aonsysctrl_psrclksel_320m_getb(void)
{
    return (AIC_AONSYSCTRL->top_clk_sel & SYS_CTRL_CFG_TOP_PSRAM_CLK_480M_SEL) >> SYS_CTRL_CFG_TOP_PSRAM_CLK_480M_SEL_POS;
}

__STATIC_INLINE void aonsysctrl_psrclksel_320m_setb(void)
{
    AIC_AONSYSCTRL->top_clk_sel |=  SYS_CTRL_CFG_TOP_PSRAM_CLK_480M_SEL;
}

__STATIC_INLINE void aonsysctrl_psrclksel_320m_clrb(void)
{
    AIC_AONSYSCTRL->top_clk_sel &= ~SYS_CTRL_CFG_TOP_PSRAM_CLK_480M_SEL;
}

__STATIC_INLINE uint8_t aonsysctrl_hclkdiv_denom_getf(void)
{
    return ((AIC_AONSYSCTRL->hclk_div & SYS_CTRL_CFG_TOP_HCLK_DIV_DENOM_MASK) >> SYS_CTRL_CFG_TOP_HCLK_DIV_DENOM_LSB);
}

__STATIC_INLINE void aonsysctrl_hclkdiv_denom_setf(uint8_t div_denom)
{
    uint32_t local_val = AIC_AONSYSCTRL->hclk_div & ~(SYS_CTRL_CFG_TOP_HCLK_DIV_DENOM_MASK);
    AIC_AONSYSCTRL->hclk_div = local_val | SYS_CTRL_CFG_TOP_HCLK_DIV_DENOM(div_denom) | SYS_CTRL_CFG_TOP_HCLK_DIV_UPDATE;
}

__STATIC_INLINE void aonsysctrl_hclkdiv_update_setb(void)
{
    AIC_AONSYSCTRL->hclk_div |=  SYS_CTRL_CFG_TOP_HCLK_DIV_UPDATE;
}

__STATIC_INLINE uint8_t aonsysctrl_fclkdiv_denom_getf(void)
{
    return ((AIC_AONSYSCTRL->fclk_div & SYS_CTRL_CFG_TOP_FCLK_DIV_DENOM_MASK) >> SYS_CTRL_CFG_TOP_FCLK_DIV_DENOM_LSB);
}

__STATIC_INLINE void aonsysctrl_fclkdiv_denom_setf(uint8_t div_denom)
{
    uint32_t local_val = AIC_AONSYSCTRL->fclk_div & ~(SYS_CTRL_CFG_TOP_FCLK_DIV_DENOM_MASK);
    AIC_AONSYSCTRL->fclk_div = local_val | SYS_CTRL_CFG_TOP_FCLK_DIV_DENOM(div_denom) | SYS_CTRL_CFG_TOP_FCLK_DIV_UPDATE;
}

__STATIC_INLINE void aonsysctrl_fclkdiv_update_setb(void)
{
    AIC_AONSYSCTRL->fclk_div |=  SYS_CTRL_CFG_TOP_FCLK_DIV_UPDATE;
}

__STATIC_INLINE uint8_t aonsysctrl_psrclkdiv_denom_getf(void)
{
    return ((AIC_AONSYSCTRL->psram_clk_div & SYS_CTRL_CFG_TOP_PSRAM_CLK_DIV_DENOM_MASK) >> SYS_CTRL_CFG_TOP_PSRAM_CLK_DIV_DENOM_LSB);
}

__STATIC_INLINE void aonsysctrl_psrclkdiv_denom_setf(uint8_t div_denom)
{
    uint32_t local_val = AIC_AONSYSCTRL->psram_clk_div & ~(SYS_CTRL_CFG_TOP_PSRAM_CLK_DIV_DENOM_MASK);
    AIC_AONSYSCTRL->psram_clk_div = local_val | SYS_CTRL_CFG_TOP_PSRAM_CLK_DIV_DENOM(div_denom) | SYS_CTRL_CFG_TOP_PSRAM_CLK_DIV_UPDATE;
}

__STATIC_INLINE void aonsysctrl_psrclkdiv_update_setb(void)
{
    AIC_AONSYSCTRL->psram_clk_div |=  SYS_CTRL_CFG_TOP_PSRAM_CLK_DIV_UPDATE;
}

__STATIC_INLINE void aonsysctrl_oscen_bt_osc_en_setb(void)
{
    AIC_AONSYSCTRL->cfg_osc_enable |=  SYS_CTRL_CFG_TOP_BT_OSC_EN;
}

__STATIC_INLINE void aonsysctrl_oscen_bt_osc_en_clrb(void)
{
    AIC_AONSYSCTRL->cfg_osc_enable &= ~SYS_CTRL_CFG_TOP_BT_OSC_EN;
}

__STATIC_INLINE void aonsysctrl_oscen_wifi_osc_en_setb(void)
{
    AIC_AONSYSCTRL->cfg_osc_enable |=  SYS_CTRL_CFG_TOP_WLAN_OSC_EN;
}

__STATIC_INLINE void aonsysctrl_oscen_wifi_osc_en_clrb(void)
{
    AIC_AONSYSCTRL->cfg_osc_enable &= ~SYS_CTRL_CFG_TOP_WLAN_OSC_EN;
}

__STATIC_INLINE void aonsysctrl_oscen_wifi_osc_comb_en_setb(void)
{
    AIC_AONSYSCTRL->cfg_osc_enable |=  SYS_CTRL_CFG_TOP_WLAN_OSC_COMB_EN;
}

__STATIC_INLINE void aonsysctrl_oscen_wifi_osc_comb_en_clrb(void)
{
    AIC_AONSYSCTRL->cfg_osc_enable &= ~SYS_CTRL_CFG_TOP_WLAN_OSC_COMB_EN;
}

__STATIC_INLINE uint32_t aonsysctrl_rstcause_get(void)
{
    return AIC_AONSYSCTRL->reset_cause;
}

__STATIC_INLINE uint8_t aonsysctrl_rstcause_wdt0_rst_getb(void)
{
    return (AIC_AONSYSCTRL->reset_cause & SYS_CTRL_WDG0_RST_HAPPENED) >> SYS_CTRL_WDG0_RST_HAPPENED_POS;
}

__STATIC_INLINE uint8_t aonsysctrl_rstcause_wdt1_rst_getb(void)
{
    return (AIC_AONSYSCTRL->reset_cause & SYS_CTRL_WDG1_RST_HAPPENED) >> SYS_CTRL_WDG1_RST_HAPPENED_POS;
}

__STATIC_INLINE uint8_t aonsysctrl_rstcause_wdt2_rst_getb(void)
{
    return (AIC_AONSYSCTRL->reset_cause & SYS_CTRL_WDG2_RST_HAPPENED) >> SYS_CTRL_WDG2_RST_HAPPENED_POS;
}

__STATIC_INLINE uint8_t aonsysctrl_rstcause_cpup_sysrst_req_getb(void)
{
    return (AIC_AONSYSCTRL->reset_cause & SYS_CTRL_CPU_P_SYSRST_REQ_HAPPENED) >> SYS_CTRL_CPU_P_SYSRST_REQ_HAPPENED_POS;
}

__STATIC_INLINE uint8_t aonsysctrl_rstcause_cpusw_sysrst_req_getb(void)
{
    return (AIC_AONSYSCTRL->reset_cause & SYS_CTRL_CPU_S0_SYSRST_REQ_HAPPENED) >> SYS_CTRL_CPU_S0_SYSRST_REQ_HAPPENED_POS;
}

__STATIC_INLINE uint8_t aonsysctrl_rstcause_cpusb_sysrst_req_getb(void)
{
    return (AIC_AONSYSCTRL->reset_cause & SYS_CTRL_CPU_S1_SYSRST_REQ_HAPPENED) >> SYS_CTRL_CPU_S1_SYSRST_REQ_HAPPENED_POS;
}

__STATIC_INLINE uint8_t aonsysctrl_rstcause_global_softrst_getb(void)
{
    return (AIC_AONSYSCTRL->reset_cause & SYS_CTRL_GLOBAL_SOFT_RESET_HAPPENED) >> SYS_CTRL_GLOBAL_SOFT_RESET_HAPPENED_POS;
}

__STATIC_INLINE uint32_t aonsysctrl_cpupra_get()
{
    return AIC_AONSYSCTRL->cpu_p_reset_addr;
}

__STATIC_INLINE void aonsysctrl_cpupra_set(uint32_t reset_addr)
{
    AIC_AONSYSCTRL->cpu_p_reset_addr = reset_addr;
}

__STATIC_INLINE uint32_t aonsysctrl_cpuswra_get()
{
    return AIC_AONSYSCTRL->cpu_s0_reset_addr;
}

__STATIC_INLINE void aonsysctrl_cpuswra_set(uint32_t reset_addr)
{
    AIC_AONSYSCTRL->cpu_s0_reset_addr = reset_addr;
}

__STATIC_INLINE uint8_t aonsysctrl_flash_clk_fast_getb(void)
{
    return (AIC_AONSYSCTRL->cfg_cpu_sys_ctrl & SYS_CTRL_CFG_CPU_SYS_FLASH_CLK_SEL) >> SYS_CTRL_CFG_CPU_SYS_FLASH_CLK_SEL_POS;
}

__STATIC_INLINE void aonsysctrl_flash_clk_fast_setb(void)
{
    AIC_AONSYSCTRL->cfg_cpu_sys_ctrl |=  SYS_CTRL_CFG_CPU_SYS_FLASH_CLK_SEL;
}

__STATIC_INLINE void aonsysctrl_flash_clk_fast_clrb(void)
{
    AIC_AONSYSCTRL->cfg_cpu_sys_ctrl &= ~SYS_CTRL_CFG_CPU_SYS_FLASH_CLK_SEL;
}

__STATIC_INLINE uint8_t aonsysctrl_uart0_clk_fast_getb(void)
{
    return (AIC_AONSYSCTRL->cfg_cpu_sys_ctrl & SYS_CTRL_CFG_CPU_SYS_UART0_CLK_SEL) >> SYS_CTRL_CFG_CPU_SYS_UART0_CLK_SEL_POS;
}

__STATIC_INLINE void aonsysctrl_uart0_clk_fast_setb(void)
{
    AIC_AONSYSCTRL->cfg_cpu_sys_ctrl |=  SYS_CTRL_CFG_CPU_SYS_UART0_CLK_SEL;
}

__STATIC_INLINE void aonsysctrl_uart0_clk_fast_clrb(void)
{
    AIC_AONSYSCTRL->cfg_cpu_sys_ctrl &= ~SYS_CTRL_CFG_CPU_SYS_UART0_CLK_SEL;
}

__STATIC_INLINE uint8_t aonsysctrl_uart1_clk_fast_getb(void)
{
    return (AIC_AONSYSCTRL->cfg_cpu_sys_ctrl & SYS_CTRL_CFG_CPU_SYS_UART1_CLK_SEL) >> SYS_CTRL_CFG_CPU_SYS_UART1_CLK_SEL_POS;
}

__STATIC_INLINE void aonsysctrl_uart1_clk_fast_setb(void)
{
    AIC_AONSYSCTRL->cfg_cpu_sys_ctrl |=  SYS_CTRL_CFG_CPU_SYS_UART1_CLK_SEL;
}

__STATIC_INLINE void aonsysctrl_uart1_clk_fast_clrb(void)
{
    AIC_AONSYSCTRL->cfg_cpu_sys_ctrl &= ~SYS_CTRL_CFG_CPU_SYS_UART1_CLK_SEL;
}

__STATIC_INLINE uint8_t aonsysctrl_uart2_clk_fast_getb(void)
{
    return (AIC_AONSYSCTRL->cfg_cpu_sys_ctrl & SYS_CTRL_CFG_CPU_SYS_UART2_CLK_SEL) >> SYS_CTRL_CFG_CPU_SYS_UART2_CLK_SEL_POS;
}

__STATIC_INLINE void aonsysctrl_uart2_clk_fast_setb(void)
{
    AIC_AONSYSCTRL->cfg_cpu_sys_ctrl |=  SYS_CTRL_CFG_CPU_SYS_UART2_CLK_SEL;
}

__STATIC_INLINE void aonsysctrl_uart2_clk_fast_clrb(void)
{
    AIC_AONSYSCTRL->cfg_cpu_sys_ctrl &= ~SYS_CTRL_CFG_CPU_SYS_UART2_CLK_SEL;
}

__STATIC_INLINE uint32_t aonsysctrl_cpusbra_get()
{
    return AIC_AONSYSCTRL->cpu_s1_reset_addr;
}

__STATIC_INLINE void aonsysctrl_cpusbra_set(uint32_t reset_addr)
{
    AIC_AONSYSCTRL->cpu_s1_reset_addr = reset_addr;
}

__STATIC_INLINE void aonsysctrl_hclkmd_btsys_dis_setb(void)
{
    AIC_AONSYSCTRL->hclk_manual_disable = SYS_CTRL_HCLK_BT_SYS_MANUAL_DISABLE;
}

__STATIC_INLINE void aonsysctrl_hclkmd_wifisys_dis_setb(void)
{
    AIC_AONSYSCTRL->hclk_manual_disable = SYS_CTRL_HCLK_WIFI_SYS_MANUAL_DISABLE;
}

__STATIC_INLINE uint32_t aonsysctrl_glbrs_get(void)
{
    return AIC_AONSYSCTRL->global_soft_resetn_set;
}

__STATIC_INLINE void aonsysctrl_glbrs_set(uint32_t reset_bits)
{
    AIC_AONSYSCTRL->global_soft_resetn_set = reset_bits;
}

__STATIC_INLINE uint8_t aonsysctrl_glbrs_softset_getb(void)
{
    return (AIC_AONSYSCTRL->global_soft_resetn_set & SYS_CTRL_GLOBAL_SOFT_RESETN_SET) >> SYS_CTRL_GLOBAL_SOFT_RESETN_SET_POS;
}

__STATIC_INLINE void aonsysctrl_glbrs_softset_setb(void)
{
    AIC_AONSYSCTRL->global_soft_resetn_set = SYS_CTRL_GLOBAL_SOFT_RESETN_SET;
}

__STATIC_INLINE uint32_t aonsysctrl_glbrc_get(void)
{
    return AIC_AONSYSCTRL->global_soft_resetn_clr;
}

__STATIC_INLINE void aonsysctrl_glbrc_set(uint32_t reset_bits)
{
    AIC_AONSYSCTRL->global_soft_resetn_clr = reset_bits;
}

__STATIC_INLINE uint8_t aonsysctrl_glbrs_softclr_getb(void)
{
    return (AIC_AONSYSCTRL->global_soft_resetn_clr & SYS_CTRL_GLOBAL_SOFT_RESETN_CLEAR) >> SYS_CTRL_GLOBAL_SOFT_RESETN_CLEAR_POS;
}

__STATIC_INLINE void aonsysctrl_glbrs_softclr_setb(void)
{
    AIC_AONSYSCTRL->global_soft_resetn_clr = SYS_CTRL_GLOBAL_SOFT_RESETN_CLEAR;
}

__STATIC_INLINE uint32_t aonsysctrl_hclkrs_get(void)
{
    return AIC_AONSYSCTRL->hclk_soft_resetn_set;
}

__STATIC_INLINE void aonsysctrl_hclkrs_set(uint32_t reset_bits)
{
    AIC_AONSYSCTRL->hclk_soft_resetn_set = reset_bits;
}

__STATIC_INLINE uint8_t aonsysctrl_hclkrs_cpuswset_getb(void)
{
    return (AIC_AONSYSCTRL->hclk_soft_resetn_set & SYS_CTRL_HRESETN_CPU_S0_SET) >> SYS_CTRL_HRESETN_CPU_S0_SET_POS;
}

__STATIC_INLINE void aonsysctrl_hclkrs_cpuswset_setb(void)
{
    AIC_AONSYSCTRL->hclk_soft_resetn_set = SYS_CTRL_HRESETN_CPU_S0_SET;
}

__STATIC_INLINE uint8_t aonsysctrl_hclkrs_cpusbset_getb(void)
{
    return (AIC_AONSYSCTRL->hclk_soft_resetn_set & SYS_CTRL_HRESETN_CPU_S1_SET) >> SYS_CTRL_HRESETN_CPU_S1_SET_POS;
}

__STATIC_INLINE void aonsysctrl_hclkrs_cpusbset_setb(void)
{
    AIC_AONSYSCTRL->hclk_soft_resetn_set = SYS_CTRL_HRESETN_CPU_S1_SET;
}

__STATIC_INLINE uint32_t aonsysctrl_hclkrc_get(void)
{
    return AIC_AONSYSCTRL->hclk_soft_resetn_clr;
}

__STATIC_INLINE void aonsysctrl_hclkrc_set(uint32_t reset_bits)
{
    AIC_AONSYSCTRL->hclk_soft_resetn_clr = reset_bits;
}

__STATIC_INLINE uint8_t aonsysctrl_hclkrc_cpuswclr_getb(void)
{
    return (AIC_AONSYSCTRL->hclk_soft_resetn_clr & SYS_CTRL_HRESETN_CPU_S0_CLEAR) >> SYS_CTRL_HRESETN_CPU_S0_CLEAR_POS;
}

__STATIC_INLINE void aonsysctrl_hclkrc_cpuswclr_setb(void)
{
    AIC_AONSYSCTRL->hclk_soft_resetn_clr = SYS_CTRL_HRESETN_CPU_S0_CLEAR;
}

__STATIC_INLINE uint8_t aonsysctrl_hclkrc_cpusbclr_getb(void)
{
    return (AIC_AONSYSCTRL->hclk_soft_resetn_clr & SYS_CTRL_HRESETN_CPU_S1_CLEAR) >> SYS_CTRL_HRESETN_CPU_S1_CLEAR_POS;
}

__STATIC_INLINE void aonsysctrl_hclkrc_cpusbclr_setb(void)
{
    AIC_AONSYSCTRL->hclk_soft_resetn_clr = SYS_CTRL_HRESETN_CPU_S1_CLEAR;
}

__STATIC_INLINE uint32_t aonsysctrl_fclkrs_get(void)
{
    return AIC_AONSYSCTRL->fclk_soft_resetn_set;
}

__STATIC_INLINE void aonsysctrl_fclkrs_set(uint32_t reset_bits)
{
    AIC_AONSYSCTRL->fclk_soft_resetn_set = reset_bits;
}

__STATIC_INLINE uint32_t aonsysctrl_fclkrc_get(void)
{
    return AIC_AONSYSCTRL->fclk_soft_resetn_clr;
}

__STATIC_INLINE void aonsysctrl_fclkrc_set(uint32_t reset_bits)
{
    AIC_AONSYSCTRL->fclk_soft_resetn_clr = reset_bits;
}

__STATIC_INLINE uint32_t aonsysctrl_oclkrs_get(void)
{
    return AIC_AONSYSCTRL->others_soft_resetn_set;
}

__STATIC_INLINE void aonsysctrl_oclkrs_set(uint32_t reset_bits)
{
    AIC_AONSYSCTRL->others_soft_resetn_set = reset_bits;
}

__STATIC_INLINE uint32_t aonsysctrl_oclkrc_get(void)
{
    return AIC_AONSYSCTRL->others_soft_resetn_clr;
}

__STATIC_INLINE void aonsysctrl_oclkrc_set(uint32_t reset_bits)
{
    AIC_AONSYSCTRL->others_soft_resetn_clr = reset_bits;
}

__STATIC_INLINE uint32_t aonsysctrl_aonclkrs_get(void)
{
    return AIC_AONSYSCTRL->aon_soft_resetn_set;
}

__STATIC_INLINE void aonsysctrl_aonclkrs_set(uint32_t reset_bits)
{
    AIC_AONSYSCTRL->aon_soft_resetn_set = reset_bits;
}

__STATIC_INLINE uint8_t aonsysctrl_aonclkrs_32kbtaonset_getb(void)
{
    return (AIC_AONSYSCTRL->aon_soft_resetn_set & SYS_CTRL_RESETN_32K_BT_AON_SET) >> SYS_CTRL_RESETN_32K_BT_AON_SET_POS;
}

__STATIC_INLINE void aonsysctrl_aonclkrs_32kbtaonset_setb(void)
{
    AIC_AONSYSCTRL->aon_soft_resetn_set = SYS_CTRL_RESETN_32K_BT_AON_SET;
}

__STATIC_INLINE uint8_t aonsysctrl_aonclkrs_32kwifiaonset_getb(void)
{
    return (AIC_AONSYSCTRL->aon_soft_resetn_set & SYS_CTRL_RESETN_32K_WIFI_AON_SET) >> SYS_CTRL_RESETN_32K_WIFI_AON_SET_POS;
}

__STATIC_INLINE void aonsysctrl_aonclkrs_32kwifiaonset_setb(void)
{
    AIC_AONSYSCTRL->aon_soft_resetn_set = SYS_CTRL_RESETN_32K_WIFI_AON_SET;
}

__STATIC_INLINE uint32_t aonsysctrl_aonclkrc_get(void)
{
    return AIC_AONSYSCTRL->aon_soft_resetn_clr;
}

__STATIC_INLINE void aonsysctrl_aonclkrc_set(uint32_t reset_bits)
{
    AIC_AONSYSCTRL->aon_soft_resetn_clr = reset_bits;
}

__STATIC_INLINE uint8_t aonsysctrl_aonclkrc_32kbtaonclr_getb(void)
{
    return (AIC_AONSYSCTRL->aon_soft_resetn_clr & SYS_CTRL_RESETN_32K_BT_AON_CLEAR) >> SYS_CTRL_RESETN_32K_BT_AON_CLEAR_POS;
}

__STATIC_INLINE void aonsysctrl_aonclkrc_32kbtaonclr_setb(void)
{
    AIC_AONSYSCTRL->aon_soft_resetn_clr = SYS_CTRL_RESETN_32K_BT_AON_CLEAR;
}

__STATIC_INLINE uint8_t aonsysctrl_aonclkrc_32kwifiaonclr_getb(void)
{
    return (AIC_AONSYSCTRL->aon_soft_resetn_clr & SYS_CTRL_RESETN_32K_WIFI_AON_CLEAR) >> SYS_CTRL_RESETN_32K_WIFI_AON_CLEAR_POS;
}

__STATIC_INLINE void aonsysctrl_aonclkrc_32kwifiaonclr_setb(void)
{
    AIC_AONSYSCTRL->aon_soft_resetn_clr = SYS_CTRL_RESETN_32K_WIFI_AON_CLEAR;
}

__STATIC_INLINE uint8_t aonsysctrl_bootmd_hw_boot_mode_getf(void)
{
    return ((AIC_AONSYSCTRL->boot_mode & SYS_CTRL_HW_BOOT_MODE(0x0F)) >> SYS_CTRL_HW_BOOT_MODE_LSB);
}

__STATIC_INLINE uint8_t aonsysctrl_wdtre_wdt0_rst_en_getb(void)
{
    return (AIC_AONSYSCTRL->wdg_reset_en & SYS_CTRL_WDG0_RST_EN) >> SYS_CTRL_WDG0_RST_EN_POS;
}

__STATIC_INLINE void aonsysctrl_wdtre_wdt0_rst_en_setb(void)
{
    AIC_AONSYSCTRL->wdg_reset_en |=  SYS_CTRL_WDG0_RST_EN;
}

__STATIC_INLINE void aonsysctrl_wdtre_wdt0_rst_en_clrb(void)
{
    AIC_AONSYSCTRL->wdg_reset_en &= ~SYS_CTRL_WDG0_RST_EN;
}

__STATIC_INLINE uint8_t aonsysctrl_wdtre_wdt1_rst_en_getb(void)
{
    return (AIC_AONSYSCTRL->wdg_reset_en & SYS_CTRL_WDG1_RST_EN) >> SYS_CTRL_WDG1_RST_EN_POS;
}

__STATIC_INLINE void aonsysctrl_wdtre_wdt1_rst_en_setb(void)
{
    AIC_AONSYSCTRL->wdg_reset_en |=  SYS_CTRL_WDG1_RST_EN;
}

__STATIC_INLINE void aonsysctrl_wdtre_wdt1_rst_en_clrb(void)
{
    AIC_AONSYSCTRL->wdg_reset_en &= ~SYS_CTRL_WDG1_RST_EN;
}

__STATIC_INLINE uint8_t aonsysctrl_wdtre_wdt2_rst_en_getb(void)
{
    return (AIC_AONSYSCTRL->wdg_reset_en & SYS_CTRL_WDG2_RST_EN) >> SYS_CTRL_WDG2_RST_EN_POS;
}

__STATIC_INLINE void aonsysctrl_wdtre_wdt2_rst_en_setb(void)
{
    AIC_AONSYSCTRL->wdg_reset_en |=  SYS_CTRL_WDG2_RST_EN;
}

__STATIC_INLINE void aonsysctrl_wdtre_wdt2_rst_en_clrb(void)
{
    AIC_AONSYSCTRL->wdg_reset_en &= ~SYS_CTRL_WDG2_RST_EN;
}

__STATIC_INLINE uint8_t aonsysctrl_wdtre_cpup_sysrst_en_getb(void)
{
    return (AIC_AONSYSCTRL->wdg_reset_en & SYS_CTRL_CPU_P_SYSRST_EN) >> SYS_CTRL_CPU_P_SYSRST_EN_POS;
}

__STATIC_INLINE void aonsysctrl_wdtre_cpup_sysrst_en_setb(void)
{
    AIC_AONSYSCTRL->wdg_reset_en |=  SYS_CTRL_CPU_P_SYSRST_EN;
}

__STATIC_INLINE void aonsysctrl_wdtre_cpup_sysrst_en_clrb(void)
{
    AIC_AONSYSCTRL->wdg_reset_en &= ~SYS_CTRL_CPU_P_SYSRST_EN;
}

__STATIC_INLINE uint8_t aonsysctrl_wdtre_cpusw_sysrst_en_getb(void)
{
    return (AIC_AONSYSCTRL->wdg_reset_en & SYS_CTRL_CPU_S0_SYSRST_EN) >> SYS_CTRL_CPU_S0_SYSRST_EN_POS;
}

__STATIC_INLINE void aonsysctrl_wdtre_cpusw_sysrst_en_setb(void)
{
    AIC_AONSYSCTRL->wdg_reset_en |=  SYS_CTRL_CPU_S0_SYSRST_EN;
}

__STATIC_INLINE void aonsysctrl_wdtre_cpusw_sysrst_en_clrb(void)
{
    AIC_AONSYSCTRL->wdg_reset_en &= ~SYS_CTRL_CPU_S0_SYSRST_EN;
}

__STATIC_INLINE uint8_t aonsysctrl_wdtre_cpusb_sysrst_en_getb(void)
{
    return (AIC_AONSYSCTRL->wdg_reset_en & SYS_CTRL_CPU_S1_SYSRST_EN) >> SYS_CTRL_CPU_S1_SYSRST_EN_POS;
}

__STATIC_INLINE void aonsysctrl_wdtre_cpusb_sysrst_en_setb(void)
{
    AIC_AONSYSCTRL->wdg_reset_en |=  SYS_CTRL_CPU_S1_SYSRST_EN;
}

__STATIC_INLINE void aonsysctrl_wdtre_cpusb_sysrst_en_clrb(void)
{
    AIC_AONSYSCTRL->wdg_reset_en &= ~SYS_CTRL_CPU_S1_SYSRST_EN;
}

__STATIC_INLINE uint32_t aonsysctrl_btfwctrl_get(void)
{
    return AIC_AONSYSCTRL->BTFWCTRL;
}

__STATIC_INLINE void aonsysctrl_btfwctrl_set(uint32_t fwctrl)
{
    AIC_AONSYSCTRL->BTFWCTRL = fwctrl;
}

__STATIC_INLINE uint32_t aonsysctrl_wififwctrl_get(void)
{
    return AIC_AONSYSCTRL->WIFIFWCTRL;
}

__STATIC_INLINE void aonsysctrl_wififwctrl_set(uint32_t fwctrl)
{
    AIC_AONSYSCTRL->WIFIFWCTRL = fwctrl;
}

__STATIC_INLINE uint32_t aonsysctrl_bootentry_get(void)
{
    return AIC_AONSYSCTRL->BOOTENTRY;
}

__STATIC_INLINE void aonsysctrl_bootentry_set(uint32_t entry)
{
    AIC_AONSYSCTRL->BOOTENTRY = entry;
}

__STATIC_INLINE uint32_t aonsysctrl_bootstack_get(void)
{
    return AIC_AONSYSCTRL->BOOTSTACK;
}

__STATIC_INLINE void aonsysctrl_bootstack_set(uint32_t stack)
{
    AIC_AONSYSCTRL->BOOTSTACK = stack;
}

__STATIC_INLINE uint32_t aonsysctrl_hosttclsb_get(void)
{
    return AIC_AONSYSCTRL->HOSTTCLSB;
}

__STATIC_INLINE void aonsysctrl_hosttclsb_set(uint32_t lsb)
{
    AIC_AONSYSCTRL->HOSTTCLSB = lsb;
}

__STATIC_INLINE uint32_t aonsysctrl_hosttcmsb_get(void)
{
    return AIC_AONSYSCTRL->HOSTTCMSB;
}

__STATIC_INLINE void aonsysctrl_hosttcmsb_set(uint32_t msb)
{
    AIC_AONSYSCTRL->HOSTTCMSB = msb;
}

__STATIC_INLINE uint32_t aonsysctrl_hostsyst_get(void)
{
    return AIC_AONSYSCTRL->HOSTSYST;
}

__STATIC_INLINE void aonsysctrl_hostsyst_set(uint32_t syst)
{
    AIC_AONSYSCTRL->HOSTSYST = syst;
}

__STATIC_INLINE uint32_t aonsysctrl_cpus0stack_get(void)
{
    return AIC_AONSYSCTRL->CPUS0STACK;
}

__STATIC_INLINE void aonsysctrl_cpus0stack_set(uint32_t stack)
{
    AIC_AONSYSCTRL->CPUS0STACK = stack;
}

__STATIC_INLINE uint32_t aonsysctrl_cpus0entry_get(void)
{
    return AIC_AONSYSCTRL->CPUS0ENTRY;
}

__STATIC_INLINE void aonsysctrl_cpus0entry_set(uint32_t entry)
{
    AIC_AONSYSCTRL->CPUS0ENTRY = entry;
}

__STATIC_INLINE uint32_t aonsysctrl_cpus1stack_get(void)
{
    return AIC_AONSYSCTRL->CPUS1STACK;
}

__STATIC_INLINE void aonsysctrl_cpus1stack_set(uint32_t stack)
{
    AIC_AONSYSCTRL->CPUS1STACK = stack;
}

__STATIC_INLINE uint32_t aonsysctrl_cpus1entry_get(void)
{
    return AIC_AONSYSCTRL->CPUS1ENTRY;
}

__STATIC_INLINE void aonsysctrl_cpus1entry_set(uint32_t entry)
{
    AIC_AONSYSCTRL->CPUS1ENTRY = entry;
}

__STATIC_INLINE uint32_t aonsysctrl_rtostickcnt_get(void)
{
    return AIC_AONSYSCTRL->RTOSTICKCNT;
}

__STATIC_INLINE void aonsysctrl_rtostickcnt_set(uint32_t tickcnt)
{
    AIC_AONSYSCTRL->RTOSTICKCNT = tickcnt;
}

// PWRCTRL
__STATIC_INLINE uint16_t pwrctrl_cpusys_awake_src_getf(void)
{
    return ((AIC_PWRCTRL->cpu_sys_pwr_ctrl & PWR_CTRL_CPU_SYS_AWAKE_SRC_EN_MASK) >> PWR_CTRL_CPU_SYS_AWAKE_SRC_EN_LSB);
}

__STATIC_INLINE void pwrctrl_cpusys_awake_src_setf(uint16_t awake_src)
{
    uint32_t local_val = AIC_PWRCTRL->cpu_sys_pwr_ctrl & ~PWR_CTRL_CPU_SYS_AWAKE_SRC_EN_MASK;
    AIC_PWRCTRL->cpu_sys_pwr_ctrl = local_val | PWR_CTRL_CPU_SYS_AWAKE_SRC_EN(awake_src);
}

__STATIC_INLINE uint8_t pwrctrl_cpusys_sleep_src_getf(void)
{
    return ((AIC_PWRCTRL->cpu_sys_pwr_ctrl & PWR_CTRL_CPU_SYS_SLP_SRC_EN_MASK) >> PWR_CTRL_CPU_SYS_SLP_SRC_EN_LSB);
}

__STATIC_INLINE void pwrctrl_cpusys_sleep_src_setf(uint8_t sleep_src)
{
    uint32_t local_val = AIC_PWRCTRL->cpu_sys_pwr_ctrl & ~PWR_CTRL_CPU_SYS_SLP_SRC_EN_MASK;
    AIC_PWRCTRL->cpu_sys_pwr_ctrl = local_val | PWR_CTRL_CPU_SYS_SLP_SRC_EN(sleep_src);
}

__STATIC_INLINE uint8_t pwrctrl_cpusys_sleep_soft_req_getb(void)
{
    return (AIC_PWRCTRL->cpu_sys_pwr_ctrl & PWR_CTRL_CPU_SYS_SLP_SOFT_REQ) >> PWR_CTRL_CPU_SYS_SLP_SOFT_REQ_POS;
}

__STATIC_INLINE void pwrctrl_cpusys_sleep_soft_req_setb(void)
{
    AIC_PWRCTRL->cpu_sys_pwr_ctrl |=  PWR_CTRL_CPU_SYS_SLP_SOFT_REQ;
}

__STATIC_INLINE uint32_t pwrctrl_btcore_get(void)
{
    return AIC_PWRCTRL->bt_core_pwr_ctrl;
}

__STATIC_INLINE void pwrctrl_btcore_set(uint32_t ctrl)
{
    AIC_PWRCTRL->bt_core_pwr_ctrl = ctrl;
}

__STATIC_INLINE uint16_t pwrctrl_btcore_awake_src_getf(void)
{
    return ((AIC_PWRCTRL->bt_core_pwr_ctrl & PWR_CTRL_BT_CORE_AWAKE_SRC_EN_MASK) >> PWR_CTRL_BT_CORE_AWAKE_SRC_EN_LSB);
}

__STATIC_INLINE void pwrctrl_btcore_awake_src_setf(uint16_t awake_src)
{
    uint32_t local_val = AIC_PWRCTRL->bt_core_pwr_ctrl & ~PWR_CTRL_BT_CORE_AWAKE_SRC_EN_MASK;
    AIC_PWRCTRL->bt_core_pwr_ctrl = local_val | PWR_CTRL_BT_CORE_AWAKE_SRC_EN(awake_src);
}

__STATIC_INLINE void pwrctrl_btcore_sleep_soft_req_setb(void)
{
    AIC_PWRCTRL->bt_core_pwr_ctrl |=  PWR_CTRL_BT_CORE_SLP_SOFT_REQ;
}

__STATIC_INLINE void pwrctrl_btcore_sleep_req_vld_clr_setb(void)
{
    AIC_PWRCTRL->bt_core_pwr_ctrl |=  PWR_CTRL_BT_CORE_SLP_REQ_VLD_CLR;
}

__STATIC_INLINE uint8_t pwrctrl_btcore_hwen_pon_getb(void)
{
    return (AIC_PWRCTRL->bt_core_pwr_ctrl & PWR_CTRL_PON_HWEN_BT_CORE) >> PWR_CTRL_PON_HWEN_BT_CORE_POS;
}

__STATIC_INLINE void pwrctrl_btcore_hwen_pon_setb(void)
{
    AIC_PWRCTRL->bt_core_pwr_ctrl |=  PWR_CTRL_PON_HWEN_BT_CORE;
}

__STATIC_INLINE void pwrctrl_btcore_hwen_pon_clrb(void)
{
    AIC_PWRCTRL->bt_core_pwr_ctrl &= ~PWR_CTRL_PON_HWEN_BT_CORE;
}

__STATIC_INLINE uint8_t pwrctrl_btcore_hwen_poff_getb(void)
{
    return (AIC_PWRCTRL->bt_core_pwr_ctrl & PWR_CTRL_POFF_HWEN_BT_CORE) >> PWR_CTRL_PON_HWEN_BT_CORE_POS;
}

__STATIC_INLINE void pwrctrl_btcore_hwen_poff_setb(void)
{
    AIC_PWRCTRL->bt_core_pwr_ctrl |=  PWR_CTRL_POFF_HWEN_BT_CORE;
}

__STATIC_INLINE void pwrctrl_btcore_hwen_poff_clrb(void)
{
    AIC_PWRCTRL->bt_core_pwr_ctrl &= ~PWR_CTRL_POFF_HWEN_BT_CORE;
}

__STATIC_INLINE void pwrctrl_btcore_pon_setb(void)
{
    AIC_PWRCTRL->bt_core_pwr_ctrl |=  PWR_CTRL_PON_BT_CORE;
}

__STATIC_INLINE void pwrctrl_btcore_pon_clrb(void)
{
    AIC_PWRCTRL->bt_core_pwr_ctrl &= ~PWR_CTRL_PON_BT_CORE;
}

__STATIC_INLINE void pwrctrl_btcore_poff_setb(void)
{
    AIC_PWRCTRL->bt_core_pwr_ctrl |=  PWR_CTRL_POFF_BT_CORE;
}

__STATIC_INLINE void pwrctrl_btcore_poff_clrb(void)
{
    AIC_PWRCTRL->bt_core_pwr_ctrl &= ~PWR_CTRL_POFF_BT_CORE;
}

__STATIC_INLINE void pwrctrl_btcore_awake_soft_req_setb(void)
{
    AIC_PWRCTRL->bt_core_pwr_ctrl |=  PWR_CTRL_BT_CORE_SOFT_WAKEUP_REQ;
}

__STATIC_INLINE void pwrctrl_btcore_awake_req_vld_clr_setb(void)
{
    AIC_PWRCTRL->bt_core_pwr_ctrl |=  PWR_CTRL_BT_CORE_AWAKE_REQ_VLD_CLR;
}

__STATIC_INLINE uint32_t pwrctrl_wificore_get(void)
{
    return AIC_PWRCTRL->wifi_core_pwr_ctrl;
}

__STATIC_INLINE void pwrctrl_wificore_set(uint32_t ctrl)
{
    AIC_PWRCTRL->wifi_core_pwr_ctrl = ctrl;
}

__STATIC_INLINE uint16_t pwrctrl_wificore_awake_src_getf(void)
{
    return ((AIC_PWRCTRL->wifi_core_pwr_ctrl & PWR_CTRL_WIFI_CORE_AWAKE_SRC_EN_MASK) >> PWR_CTRL_WIFI_CORE_AWAKE_SRC_EN_LSB);
}

__STATIC_INLINE void pwrctrl_wificore_awake_src_setf(uint16_t awake_src)
{
    uint32_t local_val = AIC_PWRCTRL->wifi_core_pwr_ctrl & ~PWR_CTRL_WIFI_CORE_AWAKE_SRC_EN_MASK;
    AIC_PWRCTRL->wifi_core_pwr_ctrl = local_val | PWR_CTRL_WIFI_CORE_AWAKE_SRC_EN(awake_src);
}

__STATIC_INLINE void pwrctrl_wificore_sleep_soft_req_setb(void)
{
    AIC_PWRCTRL->wifi_core_pwr_ctrl |=  PWR_CTRL_WIFI_CORE_SLP_SOFT_REQ;
}

__STATIC_INLINE void pwrctrl_wificore_sleep_req_vld_clr_setb(void)
{
    AIC_PWRCTRL->wifi_core_pwr_ctrl |=  PWR_CTRL_WIFI_CORE_SLP_REQ_VLD_CLR;
}

__STATIC_INLINE uint8_t pwrctrl_wificore_hwen_pon_getb(void)
{
    return (AIC_PWRCTRL->wifi_core_pwr_ctrl & PWR_CTRL_PON_HWEN_WIFI_CORE) >> PWR_CTRL_PON_HWEN_WIFI_CORE_POS;
}

__STATIC_INLINE void pwrctrl_wificore_hwen_pon_setb(void)
{
    AIC_PWRCTRL->wifi_core_pwr_ctrl |=  PWR_CTRL_PON_HWEN_WIFI_CORE;
}

__STATIC_INLINE void pwrctrl_wificore_hwen_pon_clrb(void)
{
    AIC_PWRCTRL->wifi_core_pwr_ctrl &= ~PWR_CTRL_PON_HWEN_WIFI_CORE;
}

__STATIC_INLINE uint8_t pwrctrl_wificore_hwen_poff_getb(void)
{
    return (AIC_PWRCTRL->wifi_core_pwr_ctrl & PWR_CTRL_POFF_HWEN_WIFI_CORE) >> PWR_CTRL_PON_HWEN_WIFI_CORE_POS;
}

__STATIC_INLINE void pwrctrl_wificore_hwen_poff_setb(void)
{
    AIC_PWRCTRL->wifi_core_pwr_ctrl |=  PWR_CTRL_POFF_HWEN_WIFI_CORE;
}

__STATIC_INLINE void pwrctrl_wificore_hwen_poff_clrb(void)
{
    AIC_PWRCTRL->wifi_core_pwr_ctrl &= ~PWR_CTRL_POFF_HWEN_WIFI_CORE;
}

__STATIC_INLINE void pwrctrl_wificore_pon_setb(void)
{
    AIC_PWRCTRL->wifi_core_pwr_ctrl |=  PWR_CTRL_PON_WIFI_CORE;
}

__STATIC_INLINE void pwrctrl_wificore_pon_clrb(void)
{
    AIC_PWRCTRL->wifi_core_pwr_ctrl &= ~PWR_CTRL_PON_WIFI_CORE;
}

__STATIC_INLINE void pwrctrl_wificore_poff_setb(void)
{
    AIC_PWRCTRL->wifi_core_pwr_ctrl |=  PWR_CTRL_POFF_WIFI_CORE;
}

__STATIC_INLINE void pwrctrl_wificore_poff_clrb(void)
{
    AIC_PWRCTRL->wifi_core_pwr_ctrl &= ~PWR_CTRL_POFF_WIFI_CORE;
}

__STATIC_INLINE void pwrctrl_wificore_awake_soft_req_setb(void)
{
    AIC_PWRCTRL->wifi_core_pwr_ctrl |=  PWR_CTRL_WIFI_CORE_SOFT_WAKEUP_REQ;
}

__STATIC_INLINE void pwrctrl_wificore_awake_req_vld_clr_setb(void)
{
    AIC_PWRCTRL->wifi_core_pwr_ctrl |=  PWR_CTRL_WIFI_CORE_AWAKE_REQ_VLD_CLR;
}

__STATIC_INLINE uint8_t pwrctrl_pwrsys_chip_slp_hw_en_getb(void)
{
    return (AIC_PWRCTRL->pwr_sys_ctrl & PWR_CTRL_CHIP_SLEEP_HW_EN) >> PWR_CTRL_CHIP_SLEEP_HW_EN_POS;
}

__STATIC_INLINE void pwrctrl_pwrsys_chip_slp_hw_en_setb(void)
{
    AIC_PWRCTRL->pwr_sys_ctrl |=  PWR_CTRL_CHIP_SLEEP_HW_EN;
}

__STATIC_INLINE void pwrctrl_pwrsys_chip_slp_hw_en_clrb(void)
{
    AIC_PWRCTRL->pwr_sys_ctrl &= ~PWR_CTRL_CHIP_SLEEP_HW_EN;
}

__STATIC_INLINE uint8_t pwrctrl_sysdly1_dp_open_delay_getf(void)
{
    return ((AIC_PWRCTRL->pwr_sys_delay1 & PWR_CTRL_PWR_SYS_DP_OPEN_DELAY_MASK) >> PWR_CTRL_PWR_SYS_DP_OPEN_DELAY_LSB);
}

__STATIC_INLINE void pwrctrl_sysdly1_dp_open_delay_setf(uint8_t delay)
{
    uint32_t local_val = AIC_PWRCTRL->pwr_sys_delay1 & ~PWR_CTRL_PWR_SYS_DP_OPEN_DELAY_MASK;
    AIC_PWRCTRL->pwr_sys_delay1 = local_val | PWR_CTRL_PWR_SYS_DP_OPEN_DELAY(delay);
}

__STATIC_INLINE uint8_t pwrctrl_sysdly1_dp_close_delay_getf(void)
{
    return ((AIC_PWRCTRL->pwr_sys_delay1 & PWR_CTRL_PWR_SYS_DP_CLOSE_DELAY_MASK) >> PWR_CTRL_PWR_SYS_DP_CLOSE_DELAY_LSB);
}

__STATIC_INLINE void pwrctrl_sysdly1_dp_close_delay_setf(uint8_t delay)
{
    uint32_t local_val = AIC_PWRCTRL->pwr_sys_delay1 & ~PWR_CTRL_PWR_SYS_DP_CLOSE_DELAY_MASK;
    AIC_PWRCTRL->pwr_sys_delay1 = local_val | PWR_CTRL_PWR_SYS_DP_CLOSE_DELAY(delay);
}

__STATIC_INLINE uint8_t pwrctrl_sysdly1_cg_open_delay_getf(void)
{
    return ((AIC_PWRCTRL->pwr_sys_delay1 & PWR_CTRL_PWR_SYS_CG_OPEN_DELAY_MASK) >> PWR_CTRL_PWR_SYS_CG_OPEN_DELAY_LSB);
}

__STATIC_INLINE void pwrctrl_sysdly1_cg_open_delay_setf(uint8_t delay)
{
    uint32_t local_val = AIC_PWRCTRL->pwr_sys_delay1 & ~PWR_CTRL_PWR_SYS_CG_OPEN_DELAY_MASK;
    AIC_PWRCTRL->pwr_sys_delay1 = local_val | PWR_CTRL_PWR_SYS_CG_OPEN_DELAY(delay);
}

__STATIC_INLINE uint8_t pwrctrl_sysdly1_cg_close_delay_getf(void)
{
    return ((AIC_PWRCTRL->pwr_sys_delay1 & PWR_CTRL_PWR_SYS_CG_CLOSE_DELAY_MASK) >> PWR_CTRL_PWR_SYS_CG_CLOSE_DELAY_LSB);
}

__STATIC_INLINE void pwrctrl_sysdly1_cg_close_delay_setf(uint8_t delay)
{
    uint32_t local_val = AIC_PWRCTRL->pwr_sys_delay1 & ~PWR_CTRL_PWR_SYS_CG_CLOSE_DELAY_MASK;
    AIC_PWRCTRL->pwr_sys_delay1 = local_val | PWR_CTRL_PWR_SYS_CG_CLOSE_DELAY(delay);
}

__STATIC_INLINE uint8_t pwrctrl_sysdly2_pwr_open_delay_getf(void)
{
    return ((AIC_PWRCTRL->pwr_sys_delay2 & PWR_CTRL_PWR_SYS_PWR_OPEN_DELAY_MASK) >> PWR_CTRL_PWR_SYS_PWR_OPEN_DELAY_LSB);
}

__STATIC_INLINE void pwrctrl_sysdly2_pwr_open_delay_setf(uint8_t delay)
{
    uint32_t local_val = AIC_PWRCTRL->pwr_sys_delay2 & ~PWR_CTRL_PWR_SYS_PWR_OPEN_DELAY_MASK;
    AIC_PWRCTRL->pwr_sys_delay2 = local_val | PWR_CTRL_PWR_SYS_PWR_OPEN_DELAY(delay);
}

__STATIC_INLINE uint8_t pwrctrl_sysdly2_pwr_close_delay_getf(void)
{
    return ((AIC_PWRCTRL->pwr_sys_delay2 & PWR_CTRL_PWR_SYS_PWR_CLOSE_DELAY_MASK) >> PWR_CTRL_PWR_SYS_PWR_CLOSE_DELAY_LSB);
}

__STATIC_INLINE void pwrctrl_sysdly2_pwr_close_delay_setf(uint8_t delay)
{
    uint32_t local_val = AIC_PWRCTRL->pwr_sys_delay2 & ~PWR_CTRL_PWR_SYS_PWR_CLOSE_DELAY_MASK;
    AIC_PWRCTRL->pwr_sys_delay2 = local_val | PWR_CTRL_PWR_SYS_PWR_CLOSE_DELAY(delay);
}

__STATIC_INLINE uint8_t pwrctrl_sysdly2_pll_open_delay_getf(void)
{
    return ((AIC_PWRCTRL->pwr_sys_delay2 & PWR_CTRL_PWR_SYS_PLL_OPEN_DELAY_MASK) >> PWR_CTRL_PWR_SYS_PLL_OPEN_DELAY_LSB);
}

__STATIC_INLINE void pwrctrl_sysdly2_pll_open_delay_setf(uint8_t delay)
{
    uint32_t local_val = AIC_PWRCTRL->pwr_sys_delay2 & ~PWR_CTRL_PWR_SYS_PLL_OPEN_DELAY_MASK;
    AIC_PWRCTRL->pwr_sys_delay2 = local_val | PWR_CTRL_PWR_SYS_PLL_OPEN_DELAY(delay);
}

__STATIC_INLINE uint8_t pwrctrl_sysdly2_pll_close_delay_getf(void)
{
    return ((AIC_PWRCTRL->pwr_sys_delay2 & PWR_CTRL_PWR_SYS_PLL_CLOSE_DELAY_MASK) >> PWR_CTRL_PWR_SYS_PLL_CLOSE_DELAY_LSB);
}

__STATIC_INLINE void pwrctrl_sysdly2_pll_close_delay_setf(uint8_t delay)
{
    uint32_t local_val = AIC_PWRCTRL->pwr_sys_delay2 & ~PWR_CTRL_PWR_SYS_PLL_CLOSE_DELAY_MASK;
    AIC_PWRCTRL->pwr_sys_delay2 = local_val | PWR_CTRL_PWR_SYS_PLL_CLOSE_DELAY(delay);
}

__STATIC_INLINE uint8_t pwrctrl_state1_pon_stable_wificore_getb(void)
{
    return (AIC_PWRCTRL->pwr_ctrl_state1 & PWR_CTRL_PON_STAB_WIFI_CORE) >> PWR_CTRL_PON_STAB_WIFI_CORE_POS;
}

__STATIC_INLINE uint8_t pwrctrl_state1_pon_stable_btcore_getb(void)
{
    return (AIC_PWRCTRL->pwr_ctrl_state1 & PWR_CTRL_PON_STAB_BT_CORE) >> PWR_CTRL_PON_STAB_BT_CORE_POS;
}

__STATIC_INLINE uint8_t pwrctrl_state1_pon_stable_cpusys_getb(void)
{
    return (AIC_PWRCTRL->pwr_ctrl_state1 & PWR_CTRL_PON_STAB_CPU_SYS) >> PWR_CTRL_PON_STAB_CPU_SYS_POS;
}

__STATIC_INLINE uint8_t pwrctrl_state1_poff_stable_wificore_getb(void)
{
    return (AIC_PWRCTRL->pwr_ctrl_state1 & PWR_CTRL_POFF_STAB_WIFI_CORE) >> PWR_CTRL_POFF_STAB_WIFI_CORE_POS;
}

__STATIC_INLINE uint8_t pwrctrl_state1_poff_stable_btcore_getb(void)
{
    return (AIC_PWRCTRL->pwr_ctrl_state1 & PWR_CTRL_POFF_STAB_BT_CORE) >> PWR_CTRL_POFF_STAB_BT_CORE_POS;
}

__STATIC_INLINE uint8_t pwrctrl_state1_poff_stable_cpusys_getb(void)
{
    return (AIC_PWRCTRL->pwr_ctrl_state1 & PWR_CTRL_POFF_STAB_CPU_SYS) >> PWR_CTRL_POFF_STAB_CPU_SYS_POS;
}

__STATIC_INLINE uint8_t pwrctrl_state1_state_wificore_getf(void)
{
    return ((AIC_PWRCTRL->pwr_ctrl_state1 & PWR_CTRL_STATE_WIFI_CORE_MASK) >> PWR_CTRL_STATE_WIFI_CORE_LSB);
}

__STATIC_INLINE uint8_t pwrctrl_state1_state_btcore_getf(void)
{
    return ((AIC_PWRCTRL->pwr_ctrl_state1 & PWR_CTRL_STATE_BT_CORE_MASK) >> PWR_CTRL_STATE_BT_CORE_LSB);
}

__STATIC_INLINE uint8_t pwrctrl_state1_state_cpusys_getf(void)
{
    return ((AIC_PWRCTRL->pwr_ctrl_state1 & PWR_CTRL_STATE_CPU_SYS_MASK) >> PWR_CTRL_STATE_CPU_SYS_LSB);
}

__STATIC_INLINE uint8_t pwrctrl_state1_curstate_wificore_getf(void)
{
    return ((AIC_PWRCTRL->pwr_ctrl_state1 & PWR_CTRL_WIFI_CORE_CUR_STATE_MASK) >> PWR_CTRL_WIFI_CORE_CUR_STATE_LSB);
}

__STATIC_INLINE uint8_t pwrctrl_state1_curstate_btcore_getf(void)
{
    return ((AIC_PWRCTRL->pwr_ctrl_state1 & PWR_CTRL_BT_CORE_CUR_STATE_MASK) >> PWR_CTRL_BT_CORE_CUR_STATE_LSB);
}

__STATIC_INLINE uint8_t pwrctrl_state1_curstate_cpusys_getf(void)
{
    return ((AIC_PWRCTRL->pwr_ctrl_state1 & PWR_CTRL_CPU_SYS_CUR_STATE_MASK) >> PWR_CTRL_CPU_SYS_CUR_STATE_LSB);
}

__STATIC_INLINE uint8_t pwrctrl_state1_curstate_pwrsys_getf(void)
{
    return ((AIC_PWRCTRL->pwr_ctrl_state1 & PWR_CTRL_PWR_SYS_CUR_STATE_MASK) >> PWR_CTRL_PWR_SYS_CUR_STATE_LSB);
}

__STATIC_INLINE uint8_t pwrctrl_state1_curstate_vcoresys_getf(void)
{
    return ((AIC_PWRCTRL->pwr_ctrl_state1 & PWR_CTRL_VCORE_SYS_CUR_STATE_MASK) >> PWR_CTRL_VCORE_SYS_CUR_STATE_LSB);
}

__STATIC_INLINE uint32_t pwrctrl_irqctrl_get(void)
{
    return AIC_PWRCTRL->pwr_ctrl_irq_ctrl;
}

__STATIC_INLINE void pwrctrl_irqctrl_set(uint32_t reg_val)
{
    AIC_PWRCTRL->pwr_ctrl_irq_ctrl = reg_val;
}

__STATIC_INLINE uint32_t pwrctrl_irqstatus_get(void)
{
    return AIC_PWRCTRL->pwr_ctrl_irq_status;
}

__STATIC_INLINE void pwrctrl_irqstatus_set(uint32_t reg_val)
{
    AIC_PWRCTRL->pwr_ctrl_irq_status = reg_val;
}

__STATIC_INLINE uint8_t pwrctrl_softmd2_mmsys_pwrctrl_soft_getf(void)
{
    return ((AIC_PWRCTRL->pwr_ctrl_soft_mode2 & PWR_CTRL_MM_SYS_PWR_CTRL_SOFT_MASK) >> PWR_CTRL_MM_SYS_PWR_CTRL_SOFT_LSB);
}

__STATIC_INLINE void pwrctrl_softmd2_mmsys_pwrctrl_soft_setf(uint8_t pwrctrl_soft)
{
    uint32_t local_val = AIC_PWRCTRL->pwr_ctrl_soft_mode2 & ~PWR_CTRL_MM_SYS_PWR_CTRL_SOFT_MASK;
    AIC_PWRCTRL->pwr_ctrl_soft_mode2 = local_val | PWR_CTRL_MM_SYS_PWR_CTRL_SOFT(pwrctrl_soft);
}

__STATIC_INLINE uint8_t pwrctrl_softmd2_vcoresys_pwrctrl_soft_getf(void)
{
    return ((AIC_PWRCTRL->pwr_ctrl_soft_mode2 & PWR_CTRL_VCORE_SYS_PWR_CTRL_SOFT_MASK) >> PWR_CTRL_VCORE_SYS_PWR_CTRL_SOFT_LSB);
}

__STATIC_INLINE void pwrctrl_softmd2_vcoresys_pwrctrl_soft_setf(uint8_t pwrctrl_soft)
{
    uint32_t local_val = AIC_PWRCTRL->pwr_ctrl_soft_mode2 & ~PWR_CTRL_VCORE_SYS_PWR_CTRL_SOFT_MASK;
    AIC_PWRCTRL->pwr_ctrl_soft_mode2 = local_val | PWR_CTRL_VCORE_SYS_PWR_CTRL_SOFT(pwrctrl_soft);
}

__STATIC_INLINE uint8_t pwrctrl_softmd2_slp_mode_sel_btcore_getb(void)
{
    return (AIC_PWRCTRL->pwr_ctrl_soft_mode2 & PWR_CTRL_SLP_MODE_SEL_BT_CORE) >> PWR_CTRL_SLP_MODE_SEL_BT_CORE_POS;
}

__STATIC_INLINE void pwrctrl_softmd2_slp_mode_sel_btcore_setb(void)
{
    AIC_PWRCTRL->pwr_ctrl_soft_mode2 |=  PWR_CTRL_SLP_MODE_SEL_BT_CORE;
}

__STATIC_INLINE void pwrctrl_softmd2_slp_mode_sel_btcore_clrb(void)
{
    AIC_PWRCTRL->pwr_ctrl_soft_mode2 &= ~PWR_CTRL_SLP_MODE_SEL_BT_CORE;
}

__STATIC_INLINE uint8_t pwrctrl_softmd2_slp_mode_sel_cpusys_getb(void)
{
    return (AIC_PWRCTRL->pwr_ctrl_soft_mode2 & PWR_CTRL_SLP_MODE_SEL_CPU_SYS) >> PWR_CTRL_SLP_MODE_SEL_CPU_SYS_POS;
}

__STATIC_INLINE void pwrctrl_softmd2_slp_mode_sel_cpusys_setb(void)
{
    AIC_PWRCTRL->pwr_ctrl_soft_mode2 |=  PWR_CTRL_SLP_MODE_SEL_CPU_SYS;
}

__STATIC_INLINE void pwrctrl_softmd2_slp_mode_sel_cpusys_clrb(void)
{
    AIC_PWRCTRL->pwr_ctrl_soft_mode2 &= ~PWR_CTRL_SLP_MODE_SEL_CPU_SYS;
}

__STATIC_INLINE uint8_t pwrctrl_softmd2_slp_mode_sel_mmsys_getb(void)
{
    return (AIC_PWRCTRL->pwr_ctrl_soft_mode2 & PWR_CTRL_SLP_MODE_SEL_MM_SYS) >> PWR_CTRL_SLP_MODE_SEL_MM_SYS_POS;
}

__STATIC_INLINE void pwrctrl_softmd2_slp_mode_sel_mmsys_setb(void)
{
    AIC_PWRCTRL->pwr_ctrl_soft_mode2 |=  PWR_CTRL_SLP_MODE_SEL_MM_SYS;
}

__STATIC_INLINE void pwrctrl_softmd2_slp_mode_sel_mmsys_clrb(void)
{
    AIC_PWRCTRL->pwr_ctrl_soft_mode2 &= ~PWR_CTRL_SLP_MODE_SEL_MM_SYS;
}

__STATIC_INLINE uint8_t pwrctrl_softmd2_slp_mode_sel_vcoresys_getb(void)
{
    return (AIC_PWRCTRL->pwr_ctrl_soft_mode2 & PWR_CTRL_SLP_MODE_SEL_VCORE_SYS) >> PWR_CTRL_SLP_MODE_SEL_VCORE_SYS_POS;
}

__STATIC_INLINE void pwrctrl_softmd2_slp_mode_sel_vcoresys_setb(void)
{
    AIC_PWRCTRL->pwr_ctrl_soft_mode2 |=  PWR_CTRL_SLP_MODE_SEL_VCORE_SYS;
}

__STATIC_INLINE void pwrctrl_softmd2_slp_mode_sel_vcoresys_clrb(void)
{
    AIC_PWRCTRL->pwr_ctrl_soft_mode2 &= ~PWR_CTRL_SLP_MODE_SEL_VCORE_SYS;
}

__STATIC_INLINE uint8_t pwrctrl_softmd2_slp_mode_sel_wificore_getb(void)
{
    return (AIC_PWRCTRL->pwr_ctrl_soft_mode2 & PWR_CTRL_SLP_MODE_SEL_WIFI_CORE) >> PWR_CTRL_SLP_MODE_SEL_WIFI_CORE_POS;
}

__STATIC_INLINE void pwrctrl_softmd2_slp_mode_sel_wificore_setb(void)
{
    AIC_PWRCTRL->pwr_ctrl_soft_mode2 |=  PWR_CTRL_SLP_MODE_SEL_WIFI_CORE;
}

__STATIC_INLINE void pwrctrl_softmd2_slp_mode_sel_wificore_clrb(void)
{
    AIC_PWRCTRL->pwr_ctrl_soft_mode2 &= ~PWR_CTRL_SLP_MODE_SEL_WIFI_CORE;
}

__STATIC_INLINE uint16_t pwrctrl_vcoresys_awake_src_getf(void)
{
    return ((AIC_PWRCTRL->vcore_sys_pwr_ctrl & PWR_CTRL_VCORE_SYS_AWAKE_SRC_EN_MASK) >> PWR_CTRL_VCORE_SYS_AWAKE_SRC_EN_LSB);
}

__STATIC_INLINE void pwrctrl_vcoresys_awake_src_setf(uint16_t awake_src)
{
    uint32_t local_val = AIC_PWRCTRL->vcore_sys_pwr_ctrl & ~PWR_CTRL_VCORE_SYS_AWAKE_SRC_EN_MASK;
    AIC_PWRCTRL->vcore_sys_pwr_ctrl = local_val | PWR_CTRL_VCORE_SYS_AWAKE_SRC_EN(awake_src);
}

__STATIC_INLINE uint8_t pwrctrl_vcoresys_sleep_src_getf(void)
{
    return ((AIC_PWRCTRL->vcore_sys_pwr_ctrl & PWR_CTRL_VCORE_SYS_SLP_SRC_EN_MASK) >> PWR_CTRL_VCORE_SYS_SLP_SRC_EN_LSB);
}

__STATIC_INLINE void pwrctrl_vcoresys_sleep_src_setf(uint8_t sleep_src)
{
    uint32_t local_val = AIC_PWRCTRL->vcore_sys_pwr_ctrl & ~PWR_CTRL_VCORE_SYS_SLP_SRC_EN_MASK;
    AIC_PWRCTRL->vcore_sys_pwr_ctrl = local_val | PWR_CTRL_VCORE_SYS_SLP_SRC_EN(sleep_src);
}

__STATIC_INLINE uint8_t pwrctrl_vcoresys_sleep_soft_req_getb(void)
{
    return (AIC_PWRCTRL->vcore_sys_pwr_ctrl & PWR_CTRL_VCORE_SYS_SLP_SOFT_REQ) >> PWR_CTRL_VCORE_SYS_SLP_SOFT_REQ_POS;
}

__STATIC_INLINE void pwrctrl_vcoresys_sleep_soft_req_setb(void)
{
    AIC_PWRCTRL->vcore_sys_pwr_ctrl |=  PWR_CTRL_VCORE_SYS_SLP_SOFT_REQ;
}

__STATIC_INLINE uint8_t pwrctrl_vcoresys_pwrsys_poff_getb(void)
{
    return (AIC_PWRCTRL->vcore_sys_pwr_ctrl & PWR_CTRL_PWR_SYS_POFF_BY_VCORE_SYS_EN) >> PWR_CTRL_PWR_SYS_POFF_BY_VCORE_SYS_EN_POS;
}

__STATIC_INLINE void pwrctrl_vcoresys_pwrsys_poff_setb(void)
{
    AIC_PWRCTRL->vcore_sys_pwr_ctrl |=  PWR_CTRL_PWR_SYS_POFF_BY_VCORE_SYS_EN;
}

__STATIC_INLINE void pwrctrl_vcoresys_pwrsys_poff_clrb(void)
{
    AIC_PWRCTRL->vcore_sys_pwr_ctrl &= ~PWR_CTRL_PWR_SYS_POFF_BY_VCORE_SYS_EN;
}

__STATIC_INLINE uint32_t pwrctrl_pwrmd_cpusys_sw_record_getf(void)
{
    return ((AIC_PWRCTRL->pwr_ctrl_mode & PC_PWRMD_CPUSYS_SW_RECORD_MASK) >> PC_PWRMD_CPUSYS_SW_RECORD_LSB);
}

__STATIC_INLINE void pwrctrl_pwrmd_cpusys_sw_record_setf(uint32_t mode)
{
    uint32_t local_val = AIC_PWRCTRL->pwr_ctrl_mode & ~PC_PWRMD_CPUSYS_SW_RECORD_MASK;
    AIC_PWRCTRL->pwr_ctrl_mode = local_val | ((mode << PC_PWRMD_CPUSYS_SW_RECORD_LSB) & PC_PWRMD_CPUSYS_SW_RECORD_MASK) | PWR_CTRL_PWR_CTRL_MODE_UPDATE;
}

__STATIC_INLINE uint8_t pwrctrl_pwrmd_flash_clksel_fast_getb(void)
{
    return (AIC_PWRCTRL->pwr_ctrl_mode & PC_PWRMD_FLASH_CLKSEL_FAST_BIT) >> PC_PWRMD_FLASH_CLKSEL_FAST_POS;
}

__STATIC_INLINE void pwrctrl_pwrmd_flash_clksel_fast_setb(void)
{
    AIC_PWRCTRL->pwr_ctrl_mode |=  PC_PWRMD_FLASH_CLKSEL_FAST_BIT;
}

__STATIC_INLINE void pwrctrl_pwrmd_flash_clksel_fast_clrb(void)
{
    AIC_PWRCTRL->pwr_ctrl_mode &= ~PC_PWRMD_FLASH_CLKSEL_FAST_BIT;
}

__STATIC_INLINE uint32_t pwrctrl_pwrmd_flash_clkdiv_smpldly_getf(void)
{
    return ((AIC_PWRCTRL->pwr_ctrl_mode & (PC_PWRMD_FLASH_CLKDIV_MASK | PC_PWRMD_FLASH_SMPLDLY_MASK)) >> PC_PWRMD_FLASH_SMPLDLY_LSB);
}

__STATIC_INLINE void pwrctrl_pwrmd_flash_clkdiv_smpldly_setf(uint32_t div_dly)
{
    uint32_t local_val = AIC_PWRCTRL->pwr_ctrl_mode & ~(PC_PWRMD_FLASH_CLKDIV_MASK | PC_PWRMD_FLASH_SMPLDLY_MASK);
    AIC_PWRCTRL->pwr_ctrl_mode = local_val | ((div_dly << PC_PWRMD_FLASH_SMPLDLY_LSB) & (PC_PWRMD_FLASH_CLKDIV_MASK | PC_PWRMD_FLASH_SMPLDLY_MASK));
}

__STATIC_INLINE uint32_t pwrctrl_pwrmd_pclkdiv_denom_getf(void)
{
    return ((AIC_PWRCTRL->pwr_ctrl_mode & (PC_PWRMD_PCLKDIV_DENOM_MASK)) >> PC_PWRMD_PCLKDIV_DENOM_LSB);
}

__STATIC_INLINE void pwrctrl_pwrmd_pclkdiv_denom_setf(uint32_t div_denom)
{
    uint32_t local_val = AIC_PWRCTRL->pwr_ctrl_mode & ~(PC_PWRMD_PCLKDIV_DENOM_MASK);
    AIC_PWRCTRL->pwr_ctrl_mode = local_val | ((div_denom << PC_PWRMD_PCLKDIV_DENOM_LSB) & (PC_PWRMD_PCLKDIV_DENOM_MASK));
}

__STATIC_INLINE uint8_t pwrctrl_retram_cpusys_ram_rctl_getf(void)
{
    return ((AIC_PWRCTRL->ret_ram_ctrl & PWR_CTRL_CFG_RET_CTRL_CPU_SYS_RAM_MASK) >> PWR_CTRL_CFG_RET_CTRL_CPU_SYS_RAM_LSB);
}

__STATIC_INLINE void pwrctrl_retram_cpusys_ram_rctl_setf(uint8_t ret_ctrl)
{
    uint32_t local_val = AIC_PWRCTRL->ret_ram_ctrl & ~PWR_CTRL_CFG_RET_CTRL_CPU_SYS_RAM_MASK;
    AIC_PWRCTRL->ret_ram_ctrl = local_val | PWR_CTRL_CFG_RET_CTRL_CPU_SYS_RAM(ret_ctrl);
}

__STATIC_INLINE uint8_t pwrctrl_retram_cpusys_lram_pmux_getf(void)
{
    return ((AIC_PWRCTRL->ret_ram_ctrl & PWR_CTRL_CFG_PWR_MUX_CPU_SYS_LRAM_MASK) >> PWR_CTRL_CFG_PWR_MUX_CPU_SYS_LRAM_LSB);
}

__STATIC_INLINE void pwrctrl_retram_cpusys_lram_pmux_setf(uint8_t pwr_mux)
{
    uint32_t local_val = AIC_PWRCTRL->ret_ram_ctrl & ~PWR_CTRL_CFG_PWR_MUX_CPU_SYS_LRAM_MASK;
    AIC_PWRCTRL->ret_ram_ctrl = local_val | PWR_CTRL_CFG_PWR_MUX_CPU_SYS_LRAM(pwr_mux);
}

__STATIC_INLINE uint8_t pwrctrl_retram_cpusys_hram_pmux_getf(void)
{
    return ((AIC_PWRCTRL->ret_ram_ctrl & PWR_CTRL_CFG_PWR_MUX_CPU_SYS_HRAM_MASK) >> PWR_CTRL_CFG_PWR_MUX_CPU_SYS_HRAM_LSB);
}

__STATIC_INLINE void pwrctrl_retram_cpusys_hram_pmux_setf(uint8_t pwr_mux)
{
    uint32_t local_val = AIC_PWRCTRL->ret_ram_ctrl & ~PWR_CTRL_CFG_PWR_MUX_CPU_SYS_HRAM_MASK;
    AIC_PWRCTRL->ret_ram_ctrl = local_val | PWR_CTRL_CFG_PWR_MUX_CPU_SYS_HRAM(pwr_mux);
}

__STATIC_INLINE void pwrctrl_retram_cpusys_config_unpack(uint8_t *ret_ctrl, uint8_t *pwr_mux_lram, uint8_t *pwr_mux_hram)
{
    uint32_t local_val = AIC_PWRCTRL->ret_ram_ctrl;
    *ret_ctrl     = (local_val & PWR_CTRL_CFG_RET_CTRL_CPU_SYS_RAM_MASK) >> PWR_CTRL_CFG_RET_CTRL_CPU_SYS_RAM_LSB;
    *pwr_mux_lram = (local_val & PWR_CTRL_CFG_PWR_MUX_CPU_SYS_LRAM_MASK) >> PWR_CTRL_CFG_PWR_MUX_CPU_SYS_LRAM_LSB;
    *pwr_mux_hram = (local_val & PWR_CTRL_CFG_PWR_MUX_CPU_SYS_HRAM_MASK) >> PWR_CTRL_CFG_PWR_MUX_CPU_SYS_HRAM_LSB;
}

__STATIC_INLINE void pwrctrl_retram_cpusys_config_pack(uint8_t ret_ctrl, uint8_t pwr_mux_lram, uint8_t pwr_mux_hram)
{
    uint32_t local_val = AIC_PWRCTRL->ret_ram_ctrl &
        ~(PWR_CTRL_CFG_RET_CTRL_CPU_SYS_RAM_MASK
        | PWR_CTRL_CFG_PWR_MUX_CPU_SYS_LRAM_MASK
        | PWR_CTRL_CFG_PWR_MUX_CPU_SYS_HRAM_MASK);
    AIC_PWRCTRL->ret_ram_ctrl = local_val |
        ( PWR_CTRL_CFG_RET_CTRL_CPU_SYS_RAM(ret_ctrl)
        | PWR_CTRL_CFG_PWR_MUX_CPU_SYS_LRAM(pwr_mux_lram)
        | PWR_CTRL_CFG_PWR_MUX_CPU_SYS_HRAM(pwr_mux_hram));
}

__STATIC_INLINE uint8_t pwrctrl_retram_wificore_ram_rctl_getf(void)
{
    return ((AIC_PWRCTRL->ret_ram_ctrl & PWR_CTRL_CFG_RET_CTRL_WIFI_CORE_RAM_MASK) >> PWR_CTRL_CFG_RET_CTRL_WIFI_CORE_RAM_LSB);
}

__STATIC_INLINE void pwrctrl_retram_wificore_ram_rctl_setf(uint8_t ret_ctrl)
{
    uint32_t local_val = AIC_PWRCTRL->ret_ram_ctrl & ~PWR_CTRL_CFG_RET_CTRL_WIFI_CORE_RAM_MASK;
    AIC_PWRCTRL->ret_ram_ctrl = local_val | PWR_CTRL_CFG_RET_CTRL_WIFI_CORE_RAM(ret_ctrl);
}

__STATIC_INLINE uint8_t pwrctrl_retram_wificore_ram_pmux_getf(void)
{
    return ((AIC_PWRCTRL->ret_ram_ctrl & PWR_CTRL_CFG_PWR_MUX_WIFI_CORE_RAM_MASK) >> PWR_CTRL_CFG_PWR_MUX_WIFI_CORE_RAM_LSB);
}

__STATIC_INLINE void pwrctrl_retram_wificore_ram_pmux_setf(uint8_t pwr_mux)
{
    uint32_t local_val = AIC_PWRCTRL->ret_ram_ctrl & ~PWR_CTRL_CFG_PWR_MUX_WIFI_CORE_RAM_MASK;
    AIC_PWRCTRL->ret_ram_ctrl = local_val | PWR_CTRL_CFG_PWR_MUX_WIFI_CORE_RAM(pwr_mux);
}

__STATIC_INLINE void pwrctrl_retram_wificore_config_unpack(uint8_t *ret_ctrl, uint8_t *pwr_mux)
{
    uint32_t local_val = AIC_PWRCTRL->ret_ram_ctrl;
    *ret_ctrl = (local_val & PWR_CTRL_CFG_RET_CTRL_WIFI_CORE_RAM_MASK) >> PWR_CTRL_CFG_RET_CTRL_WIFI_CORE_RAM_LSB;
    *pwr_mux  = (local_val & PWR_CTRL_CFG_PWR_MUX_WIFI_CORE_RAM_MASK)  >> PWR_CTRL_CFG_PWR_MUX_WIFI_CORE_RAM_LSB;
}

__STATIC_INLINE void pwrctrl_retram_wificore_config_pack(uint8_t ret_ctrl, uint8_t pwr_mux)
{
    uint32_t local_val = AIC_PWRCTRL->ret_ram_ctrl &
        ~(PWR_CTRL_CFG_RET_CTRL_WIFI_CORE_RAM_MASK
        | PWR_CTRL_CFG_PWR_MUX_WIFI_CORE_RAM_MASK);
    AIC_PWRCTRL->ret_ram_ctrl = local_val |
        ( PWR_CTRL_CFG_RET_CTRL_WIFI_CORE_RAM(ret_ctrl)
        | PWR_CTRL_CFG_PWR_MUX_WIFI_CORE_RAM(pwr_mux));
}

__STATIC_INLINE uint8_t pwrctrl_retram_btcore_ram_rctl_getf(void)
{
    return ((AIC_PWRCTRL->ret_ram_ctrl & PWR_CTRL_CFG_RET_CTRL_BT_CORE_RAM_MASK) >> PWR_CTRL_CFG_RET_CTRL_BT_CORE_RAM_LSB);
}

__STATIC_INLINE void pwrctrl_retram_btcore_ram_rctl_setf(uint8_t ret_ctrl)
{
    uint32_t local_val = AIC_PWRCTRL->ret_ram_ctrl & ~PWR_CTRL_CFG_RET_CTRL_BT_CORE_RAM_MASK;
    AIC_PWRCTRL->ret_ram_ctrl = local_val | PWR_CTRL_CFG_RET_CTRL_BT_CORE_RAM(ret_ctrl);
}

__STATIC_INLINE uint8_t pwrctrl_retram_btcore_ram_pmux_getf(void)
{
    return ((AIC_PWRCTRL->ret_ram_ctrl & PWR_CTRL_CFG_PWR_MUX_BT_CORE_RAM_MASK) >> PWR_CTRL_CFG_PWR_MUX_BT_CORE_RAM_LSB);
}

__STATIC_INLINE void pwrctrl_retram_btcore_ram_pmux_setf(uint8_t pwr_mux)
{
    uint32_t local_val = AIC_PWRCTRL->ret_ram_ctrl & ~PWR_CTRL_CFG_PWR_MUX_BT_CORE_RAM_MASK;
    AIC_PWRCTRL->ret_ram_ctrl = local_val | PWR_CTRL_CFG_PWR_MUX_BT_CORE_RAM(pwr_mux);
}

__STATIC_INLINE void pwrctrl_retram_btcore_config_unpack(uint8_t *ret_ctrl, uint8_t *pwr_mux)
{
    uint32_t local_val = AIC_PWRCTRL->ret_ram_ctrl;
    *ret_ctrl = (local_val & PWR_CTRL_CFG_RET_CTRL_BT_CORE_RAM_MASK) >> PWR_CTRL_CFG_RET_CTRL_BT_CORE_RAM_LSB;
    *pwr_mux  = (local_val & PWR_CTRL_CFG_PWR_MUX_BT_CORE_RAM_MASK)  >> PWR_CTRL_CFG_PWR_MUX_BT_CORE_RAM_LSB;
}

__STATIC_INLINE void pwrctrl_retram_btcore_config_pack(uint8_t ret_ctrl, uint8_t pwr_mux)
{
    uint32_t local_val = AIC_PWRCTRL->ret_ram_ctrl &
        ~(PWR_CTRL_CFG_RET_CTRL_BT_CORE_RAM_MASK
        | PWR_CTRL_CFG_PWR_MUX_BT_CORE_RAM_MASK);
    AIC_PWRCTRL->ret_ram_ctrl = local_val |
        ( PWR_CTRL_CFG_RET_CTRL_BT_CORE_RAM(ret_ctrl)
        | PWR_CTRL_CFG_PWR_MUX_BT_CORE_RAM(pwr_mux));
}

__STATIC_INLINE uint8_t pwrctrl_softmd3_cm_coreon_soft_getf(void)
{
    return ((AIC_PWRCTRL->pwr_ctrl_soft_mode3 & PWR_CTRL_CM_COREON_SOFT_MASK) >> PWR_CTRL_CM_COREON_SOFT_LSB);
}

__STATIC_INLINE void pwrctrl_softmd3_cm_coreon_soft_setf(uint8_t pwrctrl_soft)
{
    uint32_t local_val = AIC_PWRCTRL->pwr_ctrl_soft_mode3 & ~PWR_CTRL_CM_COREON_SOFT_MASK;
    AIC_PWRCTRL->pwr_ctrl_soft_mode3 = local_val | PWR_CTRL_CM_COREON_SOFT(pwrctrl_soft);
}

#endif // _REG_SYSCTRL_H_
