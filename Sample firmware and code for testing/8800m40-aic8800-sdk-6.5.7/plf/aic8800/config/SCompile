########################################################################################
#
# @file SCompile
#
# @brief Compilation instructions for REFIP build
#
# Copyright (C) RivieraWaves 2009-2015
#
#########################################################################################
#
#import sys
#import os
#import os.path
#
#import SCons.Util
#import scutils

buildtool = env['BUILDTOOL']

#-----------------------------------------------------------
# Target specific settings
#-----------------------------------------------------------

# preprocessor macros
env['CPPDEFINES'] = []
env['ASMDEFINES'] = []

# environment  settings
env['PROGNAME'] = env['TGTNAME'] if env['TGTNAME'] != 'none' else 'host_wb'
env['TYPE'] = 'host_wb'

# use arm cm4 by default
if env['CPU'].lower() == 'cm4' or env['CPU'] == '':
    if buildtool == 'armcc_5':
        env['CPU'] = 'Cortex-M4.fp'
    else:
        env['CPU'] = 'cortex-m4'
elif env['CPU'].lower() == 'cm3':
    env['CPU'] = 'cortex-m3'


#-----------------------------------------------------------
# Environment configuration
#-----------------------------------------------------------

if buildtool == 'rvds':

    if env['CPU'] == 'Cortex-M1':
       env['ENTRY'] = 'rw_main'
    else:
       env['ENTRY'] = '0x00'

    # msg 193-D is for undefined preprocessor identifier
    env['CCFLAGS']   = (  ' -Ospace --asm --interleave --diag_style=gnu --debug --dwarf2 --c99 '
                        + ' --diag_warning=C193 --thumb --apcs=/interwork --split_sections ')

    if 'Cortex' in env['CPU']:
         env['CCFLAGS']   += ' -DCFG_CPU_CORTEX_M1 '

    env['ASFLAGS']   =  ' --diag_style=gnu --debug'
    env['LINKFLAGS'] = (' --map --symbols --diag_style gnu --remove '
        + ' --info architecture,common,debug,exceptions,inline,inputs,libraries,sizes,stack,'
        + 'tailreorder,totals,unused --callgraph --entry $ENTRY --datacompressor off '
        + '--diag_suppress L6329 ')

    if env['REM']:
        env.Append(CCFLAGS = ' --remarks --diag_suppress=1301,2530,826 ')
    else:
        env['CCFLAGS'] += '--diag_suppress=177,3017'

    if env['WARN'] == 'err':
        env.Append(CCFLAGS = ' --diag_error=warning ')

elif buildtool == 'armcc_5':

    env['ENTRY'] = 'rw_main'

    # msg 193-D is for undefined preprocessor identifier
    env['CCFLAGS']   = (  ' --gnu --debug -Otime --brief_diagnostics --restrict -O3 --c99 '
                        + ' --apcs=interwork --split_sections --multibyte_chars --fpu=softvfp+fpv4-sp ')

    env['ASFLAGS']   =  ' --diag_style=gnu --debug'
    env['LINKFLAGS'] = (' --map --symbols --diag_style=gnu '
        + ' --info architecture,common,debug,exceptions,inline,inputs,libraries,sizes,stack,'
        + 'tailreorder,totals,unused --callgraph --entry $ENTRY --datacompressor off --fpu=softvfp+fpv4-sp --library_type=microlib ')

    if env['REM']:
        env.Append(CCFLAGS = ' --remarks --diag_suppress=1301,2530,826 ')
    else:
        env['CCFLAGS'] += '--diag_suppress=177,3017'

    if env['WARN'] == 'err':
        env.Append(CCFLAGS = ' --diag_error=warning ')

elif buildtool == 'gnuarm':

    env['CCFLAGS'] = ' -mabi=aapcs -mfloat-abi=soft -mfpu=fpa -g3 -fms-extensions ' \
                   + ' -Wall -Wchar-subscripts -Wformat ' \
                   + ' -Winit-self -Wignored-qualifiers -Wswitch-default -Wunused -Wundef -std=c99 '
    if(env['OPTIM'] not in '0'):
        env['CCFLAGS'] += ' -Wuninitialized '
    env['ASFLAGS']   = ' -mfloat-abi=soft -mfpu=fpa -g'
    env['LINKFLAGS'] = ' --cref --gc-sections'

    if env['SAVETMP']:
        env.Append(CCFLAGS = ' --save-temps ')

    if env['WARN'] == 'err':
        env.Append(CCFLAGS = ' -Werror ')

elif buildtool == 'armgcc_4_8':

    env['CCFLAGS'] = ' -mthumb -mabi=aapcs -mfloat-abi=softfp -mfpu=fpv4-sp-d16 -fms-extensions ' \
                   + ' -Wall -Wchar-subscripts -Wformat -Wuninitialized ' \
                   + ' -Winit-self -Wignored-qualifiers -Wswitch-default -Wunused -Wundef -std=c99 -fno-builtin ' \
                   + ' -fdata-sections -ffunction-sections'
    env['ASFLAGS']   = ' -mthumb -mfloat-abi=softfp -mfpu=fpv4-sp-d16 -x assembler-with-cpp -c -Wall -fno-builtin'
    env['LINKFLAGS'] = ' -mcpu=cortex-m4 -mthumb -mfloat-abi=softfp -mfpu=fpv4-sp-d16 -Wl,--cref,--gc-sections '\
                     + '-Wl,-n -lnosys -specs=nosys.specs -fno-builtin'

    if env['DBGINFO'] == 'on':
        env.Append(CCFLAGS = ' -g3 ')
        env.Append(ASFLAGS = ' -g ')

    if env['SAVETMP']:
        env.Append(CCFLAGS = ' --save-temps ')

    if env['WARN'] == 'err':
        env.Append(CCFLAGS = ' -Werror ')

elif buildtool == 'armgcc':

    env['CCFLAGS'] = ' -mabi=aapcs -mfloat-abi=soft -mfpu=vfp -g3 -fms-extensions ' \
                   + ' -Wall -Wchar-subscripts -Wformat -Wuninitialized ' \
                   + ' -Winit-self -Wignored-qualifiers -Wswitch-default -Wunused -Wundef -std=c99 '
    env['ASFLAGS']   = ' -mfloat-abi=soft -mfpu=vfp -g'
    env['LINKFLAGS'] = ' --cref --gc-sections'

    if env['SAVETMP']:
        env.Append(CCFLAGS = ' --save-temps ')

    if env['WARN'] == 'err':
        env.Append(CCFLAGS = ' -Werror ')
